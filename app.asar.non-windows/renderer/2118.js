(global.webpackChunkxmind_vana = global.webpackChunkxmind_vana || []).push([
  [2118],
  {
    18338: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.SlideshowExporter = void 0);
      const o = i(6776),
        l = i(77097),
        r = i(43372),
        a = i(10430),
        s = i(14594),
        c = i(97857),
        d = i(95763),
        u = i(59597);
      e.SlideshowExporter = class {
        constructor(t) {
          this._fontFamilyInPptx = "Arial";
          var e;
          this._slideshow = new o.Slideshow({
            contentProvider:
              ((e = t.contentProvider),
              {
                getStartingTopicId: function () {
                  return e.getStartingTopicId();
                },
                getTopicAttributes: function (t) {
                  const i = e.getTopicAttributes(t);
                  return i
                    ? Object.assign(i, { listSlideDelivery: null })
                    : null;
                },
                getSubtopics: function (t) {
                  return e.getSubtopics(t);
                },
                getParentTopicId: function (t) {
                  return e.getParentTopicId(t);
                },
                getFloatingTopics: () =>
                  e.getFloatingTopics ? e.getFloatingTopics() : [],
                getEndingScreenContent(t) {
                  return n(this, void 0, void 0, function* () {
                    return e.getEndingScreenContent
                      ? e.getEndingScreenContent(t)
                      : null;
                  });
                },
              }),
            slideSize: t.slideSize,
            slideTheme: t.slideAppearanceId,
            disablesWatermark: t.disablesWatermark,
            listSlideDelivery: "all-at-once",
          });
        }
        exportPptxSlides() {
          const t = [];
          for (const e of this.collectSlidesForExport())
            t.push(this.parseSlideContent(e));
          return t;
        }
        exportHtmlPages() {
          function t(t, e) {
            const i = new a.SlideView();
            (i.slide = t), e && (i.slideState = e), i.update(), i.connect();
            return (
              i.el.querySelectorAll("svg").forEach((t) => {
                var e;
                const i = t.parentElement,
                  n = document.createElement("div");
                n.setAttribute(
                  "style",
                  null !== (e = t.getAttribute("style")) && void 0 !== e
                    ? e
                    : "",
                ),
                  t.style.width && t.setAttribute("width", t.style.width),
                  t.style.height && t.setAttribute("height", t.style.height),
                  t.removeAttribute("style"),
                  n.appendChild(t.cloneNode(!0)),
                  null == i || i.replaceChild(n, t);
              }),
              i
            );
          }
          function e(t) {
            const e = [];
            let i = t.slideState;
            for (; t.slide; ) {
              const n = r.computeMultistepChange(
                { kind: "forward" },
                t.slide,
                i,
              );
              if (!n || 0 === Object.keys(n).length) break;
              const l = new a.SlideView();
              (l.slide = t.slide),
                (l.slideState = o.mergeSlideState(t.slideState, n)),
                (i = l.slideState),
                l.update(),
                e.push(l);
            }
            return e;
          }
          const i = [];
          for (const n of this.collectSlidesForExport()) {
            const o = t(n);
            i.push(o.el), i.push(...e(o).map((t) => t.el));
          }
          const n = document.createElement("div");
          (n.style.cssText =
            "\n        visibility: hidden;\n        width: 0px;\n        height: 0px;\n        overflow: hidden;\n      "),
            document.body.appendChild(n),
            i.forEach((t) => n.appendChild(t));
          return (
            n.querySelectorAll(".pancake-view-group-clip").forEach((t) => {
              var e, i;
              const n = null !== (e = t.scrollTop) && void 0 !== e ? e : 0,
                o = null !== (i = t.scrollLeft) && void 0 !== i ? i : 0,
                l = t.children[0];
              l &&
                (n > 0 || o > 0) &&
                ((l.style.transform = `translate(${-o}px,${-n}px)`),
                t.replaceWith(t.cloneNode(!0)));
            }),
            i.forEach((t) => n.removeChild(t)),
            document.body.removeChild(n),
            i
          );
        }
        parseSlideContent(t) {
          var e, i;
          const n = [];
          return (
            [...t.backgroundBoxes, ...t.boxes].forEach((t) => {
              this.parseBoxContent(n, t);
            }),
            s.disposeTextMeasurementHelpers(),
            {
              backgroundColor: l.normalizeTo6DigitsRgb(
                null !== (e = t.backgroundColor) && void 0 !== e ? e : "#000",
              ),
              backgroundTransparency: l.convertOpacityToTransparency(
                null !== (i = t.backgroundOpacity) && void 0 !== i ? i : 1,
              ),
              boxes: n,
            }
          );
        }
        parseBoxContent(t, e, i = 0, n = 0) {
          var o, l;
          if (0 !== e.opacity && !e.roles.includes("watermark"))
            switch (e.contentType) {
              case "text": {
                const o = this.adjustFontSizeToFitBox(e);
                t.push(
                  Object.assign(
                    Object.assign({}, this.toPositionedBox(o, i, n)),
                    this.toPptxText(o),
                  ),
                );
                break;
              }
              case "image":
              case "svg-template":
                t.push(
                  Object.assign(
                    Object.assign({}, this.toPositionedBox(e, i, n)),
                    this.toPptxImage(e),
                  ),
                );
                break;
              case "shape":
                this.parseShapeBoxContent(t, e, i, n);
                break;
              case "group":
                e.contentHeight > e.bounds.height
                  ? (n += null !== (o = e.scrollOffset) && void 0 !== o ? o : 0)
                  : e.contentWidth > e.bounds.width &&
                    (i +=
                      null !== (l = e.scrollOffset) && void 0 !== l ? l : 0),
                  e.children.forEach((e) => {
                    this.parseBoxContent(t, e, i, n);
                  });
                break;
              case "background-shape":
                this.parseBackgroundShapeBoxContent(t, e, i, n);
                break;
              case "background-color-brick":
                this.parseColorBrick(t, e, i, n);
            }
        }
        parseBackgroundShapeBoxContent(t, e, i, n) {
          var o, l;
          const r = new d.BackgroundShapeView({ box: e });
          r.update(), e.strokeColor && (r.pathEl.style.fillOpacity = "0");
          const a = this.computeBase64EncodedSvg(r.el),
            s = c.extractTransform(
              null !== (o = e.transform) && void 0 !== o ? o : [],
            );
          t.push(
            Object.assign(
              {
                data: a,
                rotate: null !== (l = s.rotate) && void 0 !== l ? l : 0,
              },
              this.toPositionedBox(e, i, n),
            ),
          );
        }
        parseColorBrick(t, e, i, n) {
          var o;
          const r = l.normalizeTo6DigitsRgb(
            null !== (o = e.color) && void 0 !== o ? o : "#fff",
          );
          t.push(
            Object.assign(
              { fill: { color: r } },
              this.toPositionedBox(e, i, n),
            ),
          );
        }
        parseShapeBoxContent(t, e, i, n) {
          const o = new a.ShapeView({ box: e });
          o.update(), e.fillColor || (o.el.style.fillOpacity = "0");
          const l = this.computeBase64EncodedSvg(o.el);
          t.push(Object.assign({ data: l }, this.toPositionedBox(e, i, n)));
        }
        collectSlidesForExport() {
          var t;
          const e = [];
          let i = this._slideshow.getStartingSlide();
          if (i)
            for (e.push(i); ; ) {
              const n = this._slideshow.getTransition({ kind: "forward" }, i);
              if (!n || !n.targetSlide) break;
              (i = n.targetSlide),
                ("list" !== i.type ||
                  (null === (t = i.aliases) || void 0 === t
                    ? void 0
                    : t.some(
                        (t) => "listOfTopic" === t.kind && 0 === t.index,
                      ))) &&
                  (this._slideshow.computeSlideAutoTransitionFor(
                    { kind: "forward" },
                    i,
                  ) ||
                    e.push(i));
            }
          return e;
        }
        toPptxText(t) {
          var e, i, n;
          const o = l.convertFontSizeToPt(
            null !== (e = t.fontSize) && void 0 !== e ? e : "12px",
            this._slideshow.slideSize.height,
          );
          return {
            text: t.text,
            color: l.normalizeTo6DigitsRgb(
              null !== (i = t.textColor) && void 0 !== i ? i : "#fff",
            ),
            fontSize: o,
            fontFace: this._fontFamilyInPptx,
            bold: "bold" == t.fontWeight,
            align: l.convertTextAlignmentToHAlign(
              null !== (n = t.textAlignment) && void 0 !== n ? n : "center",
            ),
            valign: "top",
            margin: 0,
            shrinkText: !0,
            lineSpacing: l.convertLineHeightToLineSpacingInPt(
              this._slideshow.slideSize.height,
              o,
              t.lineHeight,
            ),
          };
        }
        toPptxImage(t) {
          const e = {};
          if ("imageSource" in t)
            t.imageSource.startsWith("data:")
              ? (e.data = t.imageSource)
              : (e.path = t.imageSource);
          else {
            const i = new u.SVGTemplateView({ box: t });
            i.update(), (e.data = this.computeBase64EncodedSvg(i.svgEl));
          }
          return e;
        }
        toPositionedBox(t, e, i) {
          var n, o;
          const { width: r, height: a } = this._slideshow.slideSize,
            { x: s, y: d, width: u, height: p } = t.absBounds;
          if ("background-shape" === t.contentType) {
            const e = c.extractTransform(
                null !== (n = t.transform) && void 0 !== n ? n : [],
              ),
              i = u * ("number" == typeof e.scale ? e.scale : e.scale.x),
              o = p * ("number" == typeof e.scale ? e.scale : e.scale.y),
              h = e.translate.x + (u - i) / 2,
              g = e.translate.y + (p - o) / 2;
            return {
              x: l.toPercentage(s + h, r),
              y: l.toPercentage(d + g, a),
              w: l.toPercentage(i, r),
              h: l.toPercentage(o, a),
            };
          }
          return "text" === t.contentType
            ? {
                x: l.toPercentage(
                  s -
                    e +
                    parseFloat(
                      null !== (o = t.textIndent) && void 0 !== o ? o : "0",
                    ),
                  r,
                ),
                y: l.toPercentage(d - i, a),
                w: l.toCeilPercentage(u, r),
                h: l.toCeilPercentage(p, a),
              }
            : {
                x: l.toPercentage(s - e, r),
                y: l.toPercentage(d - i, a),
                w: l.toPercentage(u, r),
                h: l.toPercentage(p, a),
              };
        }
        adjustFontSizeToFitBox(t) {
          const e = Object.assign({}, t, {
            fontFamily: [this._fontFamilyInPptx],
          });
          let { height: i, fontSize: n } = s.measureText(e, {
            maxWidth: e.absBounds.width,
          });
          for (; i > e.absBounds.height; ) {
            e.fontSize = n - 1 + "px";
            const t = s.measureText(e, { maxWidth: e.absBounds.width });
            (i = t.height), (n = t.fontSize);
          }
          return e;
        }
        computeBase64EncodedSvg(t) {
          const e = new XMLSerializer().serializeToString(t),
            i = unescape(encodeURIComponent(e));
          return `data:image/svg+xml;base64,${window.btoa(i)}`;
        }
      };
    },
    77097: (t, e) => {
      "use strict";
      function i(t) {
        return 5.625 * t * 72;
      }
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.convertTextAlignmentToHAlign =
          e.convertOpacityToTransparency =
          e.normalizeTo6DigitsRgb =
          e.convertLineHeightToLineSpacingInPt =
          e.convertFontSizeToPt =
          e.convertPercentageToPt =
          e.toCeilPercentage =
          e.toPercentage =
            void 0),
        (e.toPercentage = function (t, e) {
          return ((t / e) * 100).toFixed(2) + "%";
        }),
        (e.toCeilPercentage = function (t, e) {
          return Math.ceil((t / e) * 100).toFixed(2) + "%";
        }),
        (e.convertPercentageToPt = i),
        (e.convertFontSizeToPt = function (t, e) {
          return i((parseFloat(t) / e) * 0.94);
        }),
        (e.convertLineHeightToLineSpacingInPt = function (t, e, n) {
          if (n)
            return n.endsWith("em")
              ? e * parseFloat(n)
              : n.endsWith("px")
                ? i(parseFloat(n) / t)
                : void 0;
        }),
        (e.normalizeTo6DigitsRgb = function (t) {
          if (3 != t.slice(1).length) return t;
          let e = t
            .split("")
            .map((t) => ("#" == t ? t : t + t))
            .join("");
          return "#" != e[0] && (e = "#" + t), e;
        }),
        (e.convertOpacityToTransparency = function (t) {
          return 100 * (1 - t);
        }),
        (e.convertTextAlignmentToHAlign = function (t) {
          switch (t) {
            case "leading":
              return "left";
            case "trailing":
              return "right";
            default:
              return "center";
          }
        });
    },
    32118: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__createBinding) ||
          (Object.create
            ? function (t, e, i, n) {
                void 0 === n && (n = i),
                  Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                      return e[i];
                    },
                  });
              }
            : function (t, e, i, n) {
                void 0 === n && (n = i), (t[n] = e[i]);
              }),
        o =
          (this && this.__exportStar) ||
          function (t, e) {
            for (var i in t)
              "default" === i ||
                Object.prototype.hasOwnProperty.call(e, i) ||
                n(e, t, i);
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        o(i(6776), e),
        o(i(10430), e),
        o(i(18338), e);
    },
    48263: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__awaiter) ||
          function (t, e, i, n) {
            return new (i || (i = Promise))(function (o, l) {
              function r(t) {
                try {
                  s(n.next(t));
                } catch (t) {
                  l(t);
                }
              }
              function a(t) {
                try {
                  s(n.throw(t));
                } catch (t) {
                  l(t);
                }
              }
              function s(t) {
                var e;
                t.done
                  ? o(t.value)
                  : ((e = t.value),
                    e instanceof i
                      ? e
                      : new i(function (t) {
                          t(e);
                        })).then(r, a);
              }
              s((n = n.apply(t, e || [])).next());
            });
          },
        o =
          (this && this.__importDefault) ||
          function (t) {
            return t && t.__esModule ? t : { default: t };
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.AnimationExecutor = e.performAnimation = void 0);
      const l = i(28048),
        r = i(7293);
      function a(t, e, i) {
        var o, a;
        return n(this, void 0, void 0, function* () {
          const n = Math.floor(
            (null !== (o = e.delayMultiplier) && void 0 !== o ? o : 0) * t,
          );
          n > 0 && (yield new Promise((t) => setTimeout(() => t(), n)));
          const s = Math.floor(
            (null !== (a = e.durationMultiplier) && void 0 !== a ? a : 1) * t,
          );
          switch (e.effect) {
            case "sleep":
              yield l.performSleepAnimation(s);
              break;
            case "mutate":
              yield r.performSlideMutationAnimation(
                s,
                i,
                e.finalState,
                e.easing,
              );
          }
        });
      }
      (o(i(76030)).default.suspendWhenDocumentHidden = !1),
        (e.performAnimation = a);
      e.AnimationExecutor = class {
        constructor(t) {
          var e, i, n;
          (this.onStage = {
            preTransition: [],
            transition: [],
            postTransition: [],
          }),
            (this.afterGroup = {}),
            (this.groupCountDown = {});
          for (const o of t) {
            if ("on" in o) this.onStage[o.on].push(o);
            else {
              const t =
                null !== (e = this.afterGroup[o.after]) && void 0 !== e
                  ? e
                  : [];
              t.push(o), (this.afterGroup[o.after] = t);
            }
            for (const t of null !== (i = o.groups) && void 0 !== i ? i : [])
              this.groupCountDown[t] =
                (null !== (n = this.groupCountDown[t]) && void 0 !== n
                  ? n
                  : 0) + 1;
          }
        }
        performAnimationsOnStage(t, e, i) {
          return n(this, void 0, void 0, function* () {
            yield Promise.all(
              this.onStage[e].map((e) =>
                this.performAnimationAndDescendantGroups(t, e, i),
              ),
            );
          });
        }
        performAnimationAndDescendantGroups(t, e, i) {
          return n(this, void 0, void 0, function* () {
            yield a(t, e, i), yield this.performGroupedAnimationsAfter(t, e, i);
          });
        }
        performGroupedAnimationsAfter(t, e, i) {
          var o, l;
          return n(this, void 0, void 0, function* () {
            let n = [];
            for (const t of null !== (o = e.groups) && void 0 !== o ? o : [])
              (this.groupCountDown[t] -= 1),
                0 === this.groupCountDown[t] &&
                  (n = n.concat(
                    null !== (l = this.afterGroup[t]) && void 0 !== l ? l : [],
                  ));
            yield Promise.all(
              n.map((e) => this.performAnimationAndDescendantGroups(t, e, i)),
            );
          });
        }
      };
    },
    7293: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.performSlideMutationAnimation = void 0);
      const o = i(6776),
        l = i(10430);
      e.performSlideMutationAnimation = function (t, e, i, r) {
        return n(this, void 0, void 0, function* () {
          (e.slideState = o.mergeSlideState(e.slideState, i)),
            t > 0
              ? yield new l.ViewAnimator({ duration: t, easing: r })
                  .animate(() => {
                    e.update();
                  })
                  .play()
              : e.update();
        });
      };
    },
    28048: function (t, e) {
      "use strict";
      var i =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.performSleepAnimation = void 0),
        (e.performSleepAnimation = function (t) {
          return i(this, void 0, void 0, function* () {
            if (!(t <= 0)) return new Promise((e) => setTimeout(e, t));
          });
        });
    },
    94938: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.makeAsyncQueue = void 0),
        (e.makeAsyncQueue = function () {
          const t = [];
          let e = !1;
          const i = () => {
            if (e) return;
            const n = t.shift();
            n &&
              ((e = !0),
              n()
                .then(() => {
                  (e = !1), i();
                })
                .catch(() => {
                  (e = !1), i();
                }));
          };
          return (e) => {
            t.push(e), i();
          };
        });
    },
    2001: (t, e) => {
      "use strict";
      function i(t) {
        let e = t.slice(1);
        return (
          3 === e.length &&
            (e = e
              .split("")
              .map(function (t) {
                return t + t;
              })
              .join("")),
          `#${e.toUpperCase()}`
        );
      }
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.luminance = e.hexToRGB = e.normalizeHexColorString = void 0),
        (e.normalizeHexColorString = i),
        (e.hexToRGB = function (t, e) {
          const i = parseInt(t.slice(1, 3), 16),
            n = parseInt(t.slice(3, 5), 16),
            o = parseInt(t.slice(5, 7), 16);
          return e >= 0 && e < 1
            ? `rgba(${i},${n},${o},${e})`
            : `rgba(${i},${n},${o})`;
        }),
        (e.luminance = function (t) {
          t = i(t);
          const e = (t) => parseInt(t, 16);
          if (/^#[A-Z0-9]{6}$/.test(t)) {
            return (
              0.2126 * e(t.slice(1, 3)) +
              0.7152 * e(t.slice(3, 5)) +
              0.0722 * e(t.slice(5, 7))
            );
          }
          return 0;
        });
    },
    67458: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeMainBranchIndex = void 0);
      const n = i(73886);
      e.computeMainBranchIndex = function t(e, i) {
        var o, l;
        const r = n.computeTopicLevel(e, i);
        if ("mainTopic" === r) {
          const t = i.getStartingTopicId();
          if (t) {
            const n = i.getSubtopics(t).indexOf(e);
            return n >= 0 ? n : void 0;
          }
        } else {
          if ("summaryTopic" !== r) {
            if ("floatingTopic" === r) {
              const t = (
                null !==
                  (l =
                    null === (o = i.getFloatingTopics) || void 0 === o
                      ? void 0
                      : o.call(i)) && void 0 !== l
                  ? l
                  : []
              ).indexOf(e);
              return t >= 0 ? t : void 0;
            }
            if ("centralTopic" === r) return;
            {
              const n = i.getParentTopicId(e);
              return n ? t(n, i) : void 0;
            }
          }
          {
            const n = (function (t, e) {
              var i;
              const n = e.getParentTopicId(t);
              if (n) {
                const o = e.getTopicAttributes(n),
                  l =
                    null === (i = null == o ? void 0 : o.summaries) ||
                    void 0 === i
                      ? void 0
                      : i.find((e) => e.topicId === t);
                if (l) return e.getSubtopics(n)[l.endIndex];
              }
              return null;
            })(e, i);
            if (n) return t(n, i);
          }
        }
      };
    },
    43372: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.defaultScrollPageLengthRatio =
          e.computeMultistepBoxChange =
          e.computeMultistepBoxChangeInSlide =
          e.computeMultistepChange =
            void 0);
      const n = i(6776);
      function o(t, e, i) {
        var o, r;
        for (const a of null !== (o = t.multistepBoxes) && void 0 !== o
          ? o
          : []) {
          const o = n.findBox(t.boxes, (t) => t.id === a);
          if (o) {
            const t = l(
              o,
              null === (r = e.boxes) || void 0 === r
                ? void 0
                : r.find((t) => t.id === a),
              i,
            );
            if (t) return { boxes: [t] };
          }
        }
        return null;
      }
      function l(t, i, n) {
        var o, l, r;
        if (
          "group" === t.contentType &&
          (t.contentHeight > t.bounds.height || t.contentWidth > t.bounds.width)
        ) {
          const a =
              t.contentHeight > t.bounds.height
                ? t.bounds.height
                : t.bounds.width,
            s =
              t.contentHeight > t.bounds.height
                ? t.contentHeight
                : t.contentWidth,
            c = Math.round(
              null !==
                (l =
                  null !== (o = null == i ? void 0 : i.scrollOffset) &&
                  void 0 !== o
                    ? o
                    : t.scrollOffset) && void 0 !== l
                ? l
                : 0,
            ),
            d =
              null !== (r = t.scrollPageLength) && void 0 !== r
                ? r
                : a * e.defaultScrollPageLengthRatio,
            u = Math.round(n.scroll(c, d)),
            p = 0,
            h = Math.round(Math.max(p, s - a)),
            g = Math.max(p, Math.min(h, u));
          return g === c ? null : { id: t.id, scrollOffset: g };
        }
        return null;
      }
      (e.computeMultistepChange = function (t, e, i) {
        switch (t.kind) {
          case "forward":
            return o(e, i, { scroll: (t, e) => t + e });
          case "backward":
            return o(e, i, { scroll: (t, e) => t - e });
          case "present":
          case "fastForward":
          case "fastBackward":
          case "changeAppearance":
          case "changeSlideSize":
          case "changeWatermarkDisabled":
          case "forceUpdateSlideContent":
            return null;
        }
      }),
        (e.computeMultistepBoxChangeInSlide = o),
        (e.computeMultistepBoxChange = l),
        (e.defaultScrollPageLengthRatio = 0.8);
    },
    14065: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeBottomMaskOffset = void 0),
        (e.computeBottomMaskOffset = function (t, e) {
          return e && t.width < t.height ? 0.474 * e : 0;
        });
    },
    33849: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeSlideAutoTransitionFor = void 0);
      const n = i(18706);
      e.computeSlideAutoTransitionFor = function (t, e, i) {
        return "backward" === t.kind || "fastBackward" === t.kind
          ? (function (t, e) {
              var i;
              const o = e.getSlideContent(t.topicId);
              if (!o) return !1;
              if (n.isExitListSlide(t) && !n.isTrailingExitListSlide(t)) {
                const i = t.nextSlide ? e.getSlideByAlias(t.nextSlide) : null;
                if ((null == i ? void 0 : i.type) === t.type) return !0;
              }
              if (
                "one-by-one-drill-in" === o.computedListSlideDelivery &&
                (null === (i = t.aliases) || void 0 === i
                  ? void 0
                  : i.some((t) => "listOfTopic" === t.kind && 0 === t.index))
              )
                return !0;
              return !1;
            })(e, i)
          : (function (t, e) {
              var i, o;
              const l = e.getSlideContent(t.topicId);
              if (!l) return !1;
              if (n.isExitListSlide(t) && !n.isTrailingExitListSlide(t)) {
                const i = t.nextSlide ? e.getSlideByAlias(t.nextSlide) : null;
                if ((null == i ? void 0 : i.type) === t.type) return !0;
              }
              if (
                "one-by-one-drill-in" === l.computedListSlideDelivery &&
                (null === (i = t.aliases) || void 0 === i
                  ? void 0
                  : i.some((t) => "listOfTopic" === t.kind && 0 === t.index))
              )
                return !0;
              if (
                ("one-by-one" === l.computedListSlideDelivery ||
                  "all-at-once" === l.computedListSlideDelivery) &&
                n.isEntranceListSlide(t)
              )
                return !0;
              if (
                "summary" === t.type &&
                (null === (o = t.aliases) || void 0 === o
                  ? void 0
                  : o.find((t) => "outroOfTopic" === t.kind))
              )
                return !0;
              return !1;
            })(e, i);
      };
    },
    30207: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.hasImageableSubtopics =
          e.hasImageableTopic =
          e.findAncestralMainTopicIdFrom =
          e.findHeaderTopic =
          e.computeSiblingTopics =
          e.computeRootTopics =
          e.computeSubtopicsOf =
          e.computeSlideContent =
            void 0);
      const n = i(67458),
        o = i(73886);
      function l(t, e) {
        return e.getSubtopics(t).map((t) => {
          var i;
          return null !== (i = e.getTopicAttributes(t)) && void 0 !== i
            ? i
            : { id: t, title: "" };
        });
      }
      function r(t) {
        const e = t.getStartingTopicId(),
          i = t.getFloatingTopics ? t.getFloatingTopics() : [];
        return e ? [e, ...i] : i;
      }
      function a(t, e) {
        const i = s(t, e);
        return i && i !== t ? e.getTopicAttributes(i) : null;
      }
      function s(t, e) {
        let i = e.getParentTopicId(t);
        for (; i; ) {
          const n = e.getParentTopicId(i);
          if (!n) return t;
          (t = i), (i = n);
        }
        return null;
      }
      (e.computeSlideContent = function (t, e, i) {
        var s, c;
        const d = e.getTopicAttributes(t);
        if (!d) return null;
        const u = o.computeTopicLevel(t, e),
          p = l(t, e),
          h = n.computeMainBranchIndex(t, e),
          g = a(t, e),
          f = d.calloutTopicId ? e.getTopicAttributes(d.calloutTopicId) : null,
          m = e.getParentTopicId(t),
          b = m ? e.getTopicAttributes(m) : null,
          v = (
            "summaryTopic" === u
              ? []
              : "floatingTopic" === u
                ? r(e)
                : m
                  ? e.getSubtopics(m)
                  : r(e)
          )
            .map((t) => e.getTopicAttributes(t))
            .filter((t) => null !== t),
          x = (
            null !== (s = null == b ? void 0 : b.summaries) && void 0 !== s
              ? s
              : []
          ).find((e) => e.topicId === t);
        return {
          topic: d,
          topicLevel: u,
          parentTopic: b,
          siblingTopics: v,
          mainBranchIndex: h,
          subtopics: p,
          headerTopic: g,
          calloutTopic: f,
          summarySubtopics:
            m && x ? l(m, e).slice(x.startIndex, x.endIndex + 1) : [],
          computedListSlideDelivery:
            null !== (c = d.listSlideDelivery) && void 0 !== c ? c : i,
        };
      }),
        (e.computeSubtopicsOf = l),
        (e.computeRootTopics = r),
        (e.computeSiblingTopics = function (t, e) {
          const i = e.indexOf(t);
          return {
            previousSiblingTopicId: i < 1 ? null : e[i - 1],
            nextSiblingTopicId: i < 0 || i >= e.length - 1 ? null : e[i + 1],
          };
        }),
        (e.findHeaderTopic = a),
        (e.findAncestralMainTopicIdFrom = s),
        (e.hasImageableTopic = function (t) {
          const { topic: e } = t;
          return (
            !!e.image &&
            0 !== e.image.size.width &&
            0 !== e.image.size.height &&
            0 === e.title.length
          );
        }),
        (e.hasImageableSubtopics = function (t) {
          const { subtopics: e } = t;
          return e.every(
            (t) =>
              !!t.image &&
              0 !== t.image.size.width &&
              0 !== t.image.size.height &&
              0 === t.title.length,
          );
        });
    },
    76118: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.getEligibleImagePlacements =
          e.computeImageSizeHint =
          e.computeTopicSlideImagePlacement =
            void 0);
      const n = i(6776),
        o = i(75327),
        l = i(91199),
        r = 400;
      function a(t, e) {
        const i = l.calcLength(r, t);
        return e.size.width < i ? "small" : "normal";
      }
      (e.computeTopicSlideImagePlacement = function (t, e, i, n = {}) {
        var l;
        return null !==
          (l = n.ignoresUserValue ? null : e.topic.topicSlideImagePlacement) &&
          void 0 !== l
          ? l
          : (function (t, e) {
              const i = a(t, e),
                n = o.isSvg(e.source) ? "aboveTitle" : "left";
              if (t.width < t.height) return "aboveTitle";
              if ("small" === i) return n;
              const l =
                0 === e.size.width || 0 === e.size.height
                  ? 1
                  : e.size.width / e.size.height;
              if (l >= 2) return "aboveTitle";
              return n;
            })(t, i);
      }),
        (e.computeImageSizeHint = a),
        (e.getEligibleImagePlacements = function (t) {
          return t.topic.video
            ? n.allTopicSlideImagePlacements.filter((t) => "full" !== t)
            : n.allTopicSlideImagePlacements;
        });
    },
    42504: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeUserListSlideLayout =
          e.computeDefaultSummarySlideLayout =
          e.computeDefaultListSlideLayout =
          e.computeDefaultTopicSlideLayout =
          e.computeSlideLayout =
          e.getEligibleSlideLayouts =
            void 0);
      const n = i(6776),
        o = i(92850);
      function l(t) {
        return t.image && 0 !== t.image.size.width && 0 !== t.image.size.height
          ? "image-topic-slide"
          : "topic-slide";
      }
      function r(t, e, i, n) {
        return e.preferredDefaultListSlideLayout
          ? e.preferredDefaultListSlideLayout
          : "centralTopic" === i ||
              ("mainTopic" === i &&
                n.length > 1 &&
                e.title.length <= 24 &&
                n.every((t) => t.title.length <= 24))
            ? "brace-list"
            : "all-at-once" === t
              ? "bullet-list"
              : "lyric-list";
      }
      function a() {
        return "summary";
      }
      function s(t) {
        var e;
        return null !== (e = t.listSlideLayout) && void 0 !== e ? e : null;
      }
      (e.getEligibleSlideLayouts = function (t, e) {
        return Object.values(o.layoutEngines)
          .filter((i) => i.isEligibleFor(t, e))
          .map((t) => t.id);
      }),
        (e.computeSlideLayout = function (t, e, i, a = {}) {
          const {
            topic: c,
            parentTopic: d,
            topicLevel: u,
            subtopics: p,
            computedListSlideDelivery: h,
          } = i;
          switch (t) {
            case "topic":
              return l(c);
            case "list": {
              let e = r(h, c, u, p);
              if (!a.ignoresUserValue) {
                const n = s(c);
                n &&
                  n in o.layoutEngines &&
                  o.layoutEngines[n].isEligibleFor(t, i) &&
                  (e = n);
              }
              if (
                d &&
                "skip" !== d.listSlides &&
                "floatingTopic" !== u &&
                "summaryTopic" !== u
              ) {
                const t = d.preferredDefaultListSlideLayout,
                  i = (a.ignoresUserValue ? null : s(d)) || t;
                i && (e = n.computeSuccessorListSlideLayout(i) || e);
              }
              return e;
            }
            case "summary":
              return "summary";
            case "epilogue":
              return "topic-slide";
          }
        }),
        (e.computeDefaultTopicSlideLayout = l),
        (e.computeDefaultListSlideLayout = r),
        (e.computeDefaultSummarySlideLayout = a),
        (e.computeUserListSlideLayout = s);
    },
    71665: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.necessaryToDrillInFrom =
          e.introSlideOf =
          e.computeUserSlideVisibility =
          e.computeDefaultSummarySlideVisibility =
          e.necessaryToDrillInToAnyOf =
          e.computeExitListSlideVisibility =
          e.computeEntranceListSlideVisibility =
          e.computeSuccessiveSingleParentListSlideVisiblility =
          e.computeDefaultListSlideVisibility =
          e.computeDefaultTopicSlideVisibilityByContent =
          e.computeDefaultTopicSlideVisibilityByTopicLevel =
          e.computeSuccessiveSingleParentTopicSlideVisiblility =
          e.computeSlideVisibility =
            void 0);
      const n = i(6776),
        o = i(42504),
        l = i(18706);
      function r(t, e, i = {}) {
        var n, o, l, r, d, g, f, b;
        const v = e.getSlideContent(t.topicId);
        if (!v) return "skip";
        const { topic: x, computedListSlideDelivery: y } = v;
        switch (t.type) {
          case "topic":
            return null !==
              (l =
                null !==
                  (o =
                    null !==
                      (n = i.ignoresUserValue ? null : m(x.topicSlide)) &&
                    void 0 !== n
                      ? n
                      : a(t, e)) && void 0 !== o
                  ? o
                  : s(t, v, e)) && void 0 !== l
              ? l
              : c(t, e);
          case "list": {
            const n = m(x.listSlides);
            return null !==
              (f =
                null !==
                  (g =
                    null !==
                      (d =
                        null !==
                          (r = i.ignoresUserValue || "skip" !== n ? null : n) &&
                        void 0 !== r
                          ? r
                          : u(t, e)) && void 0 !== d
                      ? d
                      : p(t, y, e)) && void 0 !== g
                  ? g
                  : h(t, y, e)) && void 0 !== f
              ? f
              : "show";
          }
          case "summary":
            return null !==
              (b = i.ignoresUserValue ? null : m(x.summarySlide)) &&
              void 0 !== b
              ? b
              : "show";
          case "epilogue":
            return "show";
        }
      }
      function a(t, e) {
        return S(t, e) ? "show" : null;
      }
      function s(t, e, i) {
        var l, r;
        const { topicLevel: a } = e;
        if ("centralTopic" === a || "floatingTopic" === a) return "show";
        if ("mainTopic" === a) {
          const a =
            null !==
              (r = e.parentTopic
                ? i.getSlideContent(
                    null === (l = e.parentTopic) || void 0 === l
                      ? void 0
                      : l.id,
                  )
                : void 0) && void 0 !== r
              ? r
              : void 0;
          if (a) {
            const e = o.computeSlideLayout(
              "list",
              { width: t.width, height: t.height },
              a,
            );
            if (n.computeSuccessorListSlideLayout(e)) return null;
          }
          return "show";
        }
        return null;
      }
      function c(t, e) {
        var i, o, l, r;
        const a = e.getSlideContent(t.topicId);
        if (!a) return "skip";
        const s = e.getSlideByAlias({
          kind: "introOfTopic",
          topicId: t.topicId,
        });
        if (!s || s === t) return "show";
        const c = e.getSlideContent(s.topicId);
        if (c && "skip" === m(c.topic.listSlides)) return "show";
        if (
          "startOfSummary" ===
            (null === (i = t.previousSlide) || void 0 === i
              ? void 0
              : i.kind) &&
          (null === (o = t.previousSlide) || void 0 === o
            ? void 0
            : o.topicId) === t.topicId &&
          "skip" === m(a.topic.summarySlide)
        )
          return "show";
        const d = null !== (l = t.contentFeatures) && void 0 !== l ? l : [],
          u = null !== (r = s.contentFeatures) && void 0 !== r ? r : [];
        return d.some((t) =>
          u.every((e) => !n.isSlideContentFeatureCoveredBy(t, e)),
        )
          ? "show"
          : "skip";
      }
      function d() {
        return "show";
      }
      function u(t, e) {
        return S(t, e) ? "skip" : null;
      }
      function p(t, e, i) {
        return "one-by-one-drill-in" === e
          ? null
          : l.isEntranceListSlide(t)
            ? v(t, i)
              ? null
              : "skip"
            : null;
      }
      function h(t, e, i) {
        return l.isExitListSlide(t)
          ? (function (t, e) {
              var i, n;
              const o =
                null === (i = t.aliases) || void 0 === i
                  ? void 0
                  : i.find((t) => "outroOfTopic" === t.kind);
              if (!o) return !1;
              const l = t,
                a = o;
              function s(t) {
                return "introOfTopic" === t.kind && t.topicId === a.topicId;
              }
              let c = l.previousSlide
                ? e.getSlideByAlias(l.previousSlide)
                : null;
              for (
                ;
                null !== c &&
                !(null === (n = c.aliases) || void 0 === n
                  ? void 0
                  : n.some(s));

              ) {
                if ("skip" !== r(c, e)) return !0;
                c = c.previousSlide ? e.getSlideByAlias(c.previousSlide) : null;
              }
              return !1;
            })(t, i) ||
            ("one-by-one-drill-in" !== e &&
              l.isTrailingExitListSlide(t) &&
              g(t.subtopics.slice(0, t.subtopics.length - 1), i))
            ? null
            : "skip"
          : null;
      }
      function g(t, e) {
        return t.some((t) => {
          const i = b(t, e);
          return i && v(i, e);
        });
      }
      function f() {
        return "show";
      }
      function m(t) {
        return "skip" === t ? "skip" : "show" === t ? "show" : null;
      }
      function b(t, e) {
        return e.getSlideByAlias({ kind: "introOfTopic", topicId: t });
      }
      function v(t, e) {
        var i, n, o, l;
        const a =
          null === (i = t.aliases) || void 0 === i
            ? void 0
            : i.find((t) => "introOfTopic" === t.kind);
        if (!a) return !1;
        const s = t,
          c = a;
        function d(t) {
          return "outroOfTopic" === t.kind && t.topicId === c.topicId;
        }
        let u = s.nextSlide ? e.getSlideByAlias(s.nextSlide) : null;
        for (
          ;
          null !== u &&
          !(null === (n = u.aliases) || void 0 === n ? void 0 : n.some(d));

        ) {
          if ("skip" !== r(u, e)) return !0;
          u = u.nextSlide ? e.getSlideByAlias(u.nextSlide) : null;
        }
        return !(
          !(null === (o = null == u ? void 0 : u.aliases) || void 0 === o
            ? void 0
            : o.some(d)) ||
          !(null === (l = u.aliases) || void 0 === l
            ? void 0
            : l.some((t) => "introOfSummary" === t.kind))
        );
      }
      function x(t, e) {
        var i;
        const { subtopics: n } = t;
        if (1 === n.length) {
          const t = e.getSlideContent(n[0]);
          return (
            1 +
            x(
              {
                subtopics:
                  null !==
                    (i = null == t ? void 0 : t.subtopics.map((t) => t.id)) &&
                  void 0 !== i
                    ? i
                    : [],
              },
              e,
            )
          );
        }
        return 0;
      }
      function y(t, e) {
        var i, n;
        const { parentTopicId: o } = t;
        if (o) {
          const t = e.getSlideContent(o);
          if (1 === (null == t ? void 0 : t.subtopics.length))
            return (
              1 +
              y(
                {
                  parentTopicId:
                    null !==
                      (n =
                        null === (i = t.parentTopic) || void 0 === i
                          ? void 0
                          : i.id) && void 0 !== n
                      ? n
                      : null,
                },
                e,
              )
            );
        }
        return 0;
      }
      function S(t, e) {
        return y(t, e) + x(t, e) >= 3;
      }
      (e.computeSlideVisibility = r),
        (e.computeSuccessiveSingleParentTopicSlideVisiblility = a),
        (e.computeDefaultTopicSlideVisibilityByTopicLevel = s),
        (e.computeDefaultTopicSlideVisibilityByContent = c),
        (e.computeDefaultListSlideVisibility = d),
        (e.computeSuccessiveSingleParentListSlideVisiblility = u),
        (e.computeEntranceListSlideVisibility = p),
        (e.computeExitListSlideVisibility = h),
        (e.necessaryToDrillInToAnyOf = g),
        (e.computeDefaultSummarySlideVisibility = f),
        (e.computeUserSlideVisibility = m),
        (e.introSlideOf = b),
        (e.necessaryToDrillInFrom = v);
    },
    42847: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.addSlideWatermark = void 0);
      const n = i(6776),
        o = i(75327),
        l = i(97857),
        r = i(91199);
      function a(t, e, i, a) {
        var s;
        const c = `<svg width="370" height="43" viewBox="0 0 370 43" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_5008_817)" fill="${null !== (s = e.watermarkColor) && void 0 !== s ? s : "black"}">\n  <path d="M11.784 8.11975C13.5687 8.11975 15.1494 8.45241 16.5259 9.11772C17.9141 9.78302 18.9873 10.7168 19.7455 11.919C20.5154 13.1096 20.9004 14.481 20.9004 16.0334C20.9004 17.5975 20.5212 18.9865 19.763 20.2004C19.0048 21.4142 17.9432 22.3597 16.5784 23.0367C15.2252 23.702 13.6679 24.0346 11.9064 24.0346L6.07963 24.0346L6.07963 33.384L3 33.384L3 8.11975L11.784 8.11975ZM11.8189 21.3559C12.9971 21.3559 14.0412 21.14 14.9511 20.7081C15.861 20.2646 16.5667 19.6518 17.0683 18.8697C17.5816 18.0877 17.8382 17.2006 17.8382 16.2085C17.8382 15.158 17.5699 14.2242 17.0333 13.4072C16.5084 12.5785 15.7676 11.9365 14.8111 11.4813C13.8662 11.0144 12.7813 10.781 11.5565 10.781L6.11463 10.781L6.11463 21.3559L11.8189 21.3559Z" fill-opacity="0.4"/>\n  <path d="M28.3195 17.9768C28.9027 16.8446 29.7076 15.9576 30.7342 15.3156C31.7607 14.662 33.0264 14.3293 34.5312 14.3176L34.5312 17.0314C32.9214 17.0314 31.6499 17.3232 30.7167 17.9068C29.7951 18.4787 29.1419 19.3133 28.7569 20.4105C28.372 21.5076 28.1737 22.9024 28.162 24.5949L28.162 33.384L25.1874 33.384L25.1874 14.6503L28.162 14.6503L28.162 17.9768L28.3195 17.9768Z" fill-opacity="0.4"/>\n  <path d="M45.9224 33.7341C43.9743 33.7341 42.2945 33.3431 40.883 32.5611C39.4831 31.7791 38.4099 30.6527 37.6634 29.182C36.9168 27.7113 36.5435 25.9664 36.5435 23.9471C36.5435 22.0562 36.8935 20.3813 37.5934 18.9223C38.305 17.4633 39.3023 16.3311 40.5855 15.5257C41.8687 14.7203 43.3385 14.3176 44.995 14.3176C46.5931 14.3293 48.0046 14.7028 49.2295 15.4381C50.466 16.1618 51.4284 17.1773 52.1166 18.4846C52.8166 19.7802 53.1898 21.2859 53.2365 23.0017C53.2598 23.702 53.2423 24.3381 53.184 24.91L39.5181 24.91C39.5298 26.194 39.8039 27.3086 40.3405 28.2541C40.8888 29.1879 41.6529 29.9057 42.6328 30.4076C43.6127 30.8978 44.7675 31.1429 46.0974 31.1429C47.0306 31.1429 47.9813 31.0145 48.9495 30.7577C49.9177 30.501 50.816 30.1158 51.6442 29.6022L52.1866 31.9133C50.2852 33.1272 48.1971 33.7341 45.9224 33.7341ZM50.3143 22.7916C50.3143 21.6477 50.0927 20.6322 49.6494 19.7451C49.2061 18.8464 48.5821 18.1519 47.7772 17.6617C46.9722 17.1714 46.0449 16.9322 44.995 16.9438C43.9451 16.9438 43.0061 17.1948 42.1778 17.6967C41.3496 18.1986 40.7022 18.8931 40.2356 19.7802C39.7689 20.6556 39.524 21.6594 39.5006 22.7916L50.3143 22.7916Z" fill-opacity="0.4"/>\n  <path d="M63.4903 33.7341C62.1721 33.7341 60.8598 33.5182 59.5532 33.0863C58.2467 32.6545 57.086 32.0592 56.0712 31.3005L57.086 29.2345C58.1243 29.9115 59.1858 30.4309 60.2707 30.7928C61.3555 31.1429 62.3762 31.318 63.3328 31.318C64.1027 31.318 64.791 31.1954 65.3975 30.9503C66.0041 30.6936 66.4708 30.3492 66.7974 29.9174C67.1357 29.4855 67.3048 28.9953 67.3048 28.4467C67.3048 27.8514 67.1473 27.332 66.8324 26.8885C66.5174 26.4449 66.0158 26.0364 65.3276 25.6629C64.6393 25.2894 63.7177 24.91 62.5629 24.5249C61.2214 24.0813 60.154 23.6086 59.3608 23.1067C58.5675 22.6048 57.9843 22.027 57.611 21.3734C57.2494 20.7081 57.0685 19.9027 57.0685 18.9573C57.0685 18.0352 57.3252 17.224 57.8385 16.5236C58.3634 15.8233 59.0925 15.2806 60.0257 14.8954C60.9706 14.5102 62.0496 14.3176 63.2628 14.3176C64.3593 14.3176 65.3684 14.446 66.2899 14.7028C67.2232 14.9596 68.1156 15.3681 68.9671 15.9284L68.9671 18.1694C68.0922 17.6675 67.194 17.294 66.2724 17.0489C65.3626 16.7921 64.4643 16.6637 63.5778 16.6637C62.5046 16.6637 61.6472 16.868 61.0056 17.2765C60.364 17.6733 60.0432 18.2394 60.0432 18.9748C60.0432 19.7802 60.3698 20.463 61.0231 21.0232C61.6763 21.5718 62.7962 22.0912 64.3827 22.5815C66.3658 23.2001 67.8414 23.9996 68.8096 24.9801C69.7779 25.9489 70.262 27.1161 70.262 28.4817C70.262 29.5322 69.982 30.4543 69.4221 31.248C68.8738 32.0417 68.0864 32.6545 67.0599 33.0863C66.045 33.5182 64.8551 33.7341 63.4903 33.7341Z" fill-opacity="0.4"/>\n  <path d="M82.458 33.7341C80.5099 33.7341 78.8301 33.3431 77.4186 32.5611C76.0188 31.7791 74.9456 30.6527 74.199 29.182C73.4524 27.7113 73.0791 25.9664 73.0791 23.9471C73.0791 22.0562 73.4291 20.3813 74.129 18.9223C74.8406 17.4632 75.838 16.3311 77.1211 15.5257C78.4043 14.7203 79.8742 14.3176 81.5306 14.3176C83.1288 14.3293 84.5403 14.7028 85.7651 15.4381C87.0016 16.1618 87.964 17.1773 88.6523 18.4846C89.3522 19.7802 89.7255 21.2859 89.7721 23.0016C89.7955 23.702 89.778 24.3381 89.7196 24.91L76.0538 24.91C76.0654 26.194 76.3396 27.3086 76.8762 28.2541C77.4244 29.1879 78.1885 29.9057 79.1684 30.4076C80.1483 30.8978 81.3031 31.1429 82.633 31.1429C83.5662 31.1429 84.5169 31.0145 85.4851 30.7577C86.4534 30.501 87.3516 30.1158 88.1798 29.6022L88.7223 31.9133C86.8208 33.1272 84.7327 33.7341 82.458 33.7341ZM86.85 22.7916C86.85 21.6477 86.6283 20.6322 86.1851 19.7451C85.7418 18.8464 85.1177 18.1519 84.3128 17.6617C83.5079 17.1714 82.5805 16.9322 81.5306 16.9438C80.4807 16.9438 79.5417 17.1948 78.7135 17.6967C77.8852 18.1986 77.2378 18.8931 76.7712 19.7802C76.3046 20.6556 76.0596 21.6594 76.0363 22.7916L86.85 22.7916Z" fill-opacity="0.4"/>\n  <path d="M109.562 33.384L106.57 33.384L106.57 22.2488C106.57 18.6771 104.954 16.8913 101.723 16.8913C100.86 16.8913 100.073 17.1072 99.361 17.5391C98.6611 17.9593 98.0953 18.5546 97.6637 19.3249C97.2321 20.0836 96.9813 20.9415 96.9113 21.8986L96.9113 33.384L93.9191 33.384L93.9191 14.6503L96.9113 14.6503L96.9113 17.6617L97.0863 17.6617C97.5645 16.5762 98.2995 15.7475 99.291 15.1755C100.283 14.6036 101.391 14.3176 102.616 14.3176C104.879 14.3176 106.599 14.9362 107.777 16.1735C108.967 17.3991 109.562 19.2082 109.562 21.601L109.562 33.384Z" fill-opacity="0.4"/>\n  <path d="M119.116 17.5916L119.116 27.1861C119.116 28.2132 119.186 28.9836 119.326 29.4972C119.466 29.9991 119.711 30.3492 120.061 30.5476C120.423 30.7461 120.959 30.8453 121.671 30.8453L122.756 30.8453L122.756 33.384L120.866 33.384C119.734 33.384 118.825 33.1855 118.136 32.7887C117.448 32.3918 116.941 31.7732 116.614 30.9328C116.299 30.0924 116.141 28.9836 116.141 27.6063L116.141 17.5916L113.149 17.5916L113.149 14.9654L116.141 14.9654L116.141 10.4833L119.116 9.43286L119.116 14.9654L122.791 14.9654L122.791 17.5916L119.116 17.5916Z" fill-opacity="0.4"/>\n  <path d="M135.302 33.7341C133.354 33.7341 131.674 33.3431 130.262 32.5611C128.862 31.7791 127.789 30.6527 127.043 29.182C126.296 27.7113 125.923 25.9664 125.923 23.9471C125.923 22.0562 126.273 20.3813 126.973 18.9223C127.684 17.4632 128.682 16.3311 129.965 15.5257C131.248 14.7203 132.718 14.3176 134.374 14.3176C135.972 14.3293 137.384 14.7028 138.609 15.4381C139.845 16.1618 140.808 17.1773 141.496 18.4846C142.196 19.7802 142.569 21.2859 142.616 23.0016C142.639 23.702 142.622 24.3381 142.563 24.91L128.897 24.91C128.909 26.194 129.183 27.3086 129.72 28.2541C130.268 29.1878 131.032 29.9057 132.012 30.4076C132.992 30.8978 134.147 31.1429 135.477 31.1429C136.41 31.1429 137.361 31.0145 138.329 30.7577C139.297 30.501 140.195 30.1158 141.024 29.6022L141.566 31.9133C139.665 33.1272 137.576 33.7341 135.302 33.7341ZM139.694 22.7915C139.694 21.6477 139.472 20.6322 139.029 19.7451C138.585 18.8464 137.961 18.1519 137.156 17.6617C136.352 17.1714 135.424 16.9322 134.374 16.9438C133.324 16.9438 132.385 17.1948 131.557 17.6967C130.729 18.1986 130.081 18.8931 129.615 19.7802C129.148 20.6556 128.903 21.6594 128.88 22.7916L139.694 22.7915Z" fill-opacity="0.4"/>\n  <path d="M163.298 7.05175L163.298 33.3665L160.324 33.3665L160.324 30.1625L160.184 30.1625C159.589 31.2246 158.761 32.0825 157.699 32.7362C156.637 33.3898 155.378 33.7166 153.919 33.7166C152.38 33.7166 150.991 33.3198 149.755 32.5261C148.518 31.7324 147.55 30.6294 146.85 29.217C146.15 27.793 145.8 26.1706 145.8 24.3498C145.8 22.4005 146.156 20.6672 146.868 19.1499C147.579 17.6208 148.559 16.4361 149.807 15.5957C151.056 14.7437 152.455 14.3176 154.007 14.3176C155.372 14.3176 156.597 14.6503 157.682 15.3156C158.766 15.9809 159.612 16.903 160.219 18.0819L160.324 18.0819L160.324 7.05175L163.298 7.05175ZM154.444 31.4231C155.646 31.4231 156.69 31.1371 157.577 30.5652C158.475 29.9932 159.157 29.2345 159.624 28.2891C160.09 27.3437 160.324 26.3282 160.324 25.2427L160.324 23.4569C160.312 22.1613 160.055 21.0057 159.554 19.9903C159.052 18.9631 158.364 18.1636 157.489 17.5916C156.614 17.0197 155.634 16.7337 154.549 16.7337C153.5 16.7337 152.537 17.0606 151.662 17.7142C150.787 18.3562 150.087 19.2549 149.562 20.4104C149.049 21.566 148.793 22.8791 148.793 24.3498C148.793 25.7154 149.043 26.9351 149.545 28.009C150.058 29.0828 150.747 29.9232 151.61 30.5301C152.473 31.1254 153.418 31.4231 154.444 31.4231Z" fill-opacity="0.4"/>\n  <path d="M200.446 14.6503L203.561 14.6503L197.367 33.3665L194.165 33.384L191.138 24.805L187.393 33.384L184.366 33.384L176.964 14.6503L180.131 14.6503L185.976 29.9524L186.221 29.9524L189.895 21.3209L187.533 14.6328L190.56 14.6328L195.599 29.9524L195.792 29.9524L200.446 14.6503Z" fill-opacity="0.4"/>\n  <path d="M206.711 7.43693L210 7.43693L210 10.7285L206.711 10.7285L206.711 7.43693ZM206.868 14.6503L209.86 14.6503L209.86 33.384L206.868 33.384L206.868 14.6503Z" fill-opacity="0.4"/>\n  <path d="M219.729 17.5916L219.729 27.1861C219.729 28.2132 219.799 28.9836 219.939 29.4972C220.079 29.9991 220.324 30.3492 220.674 30.5476C221.036 30.7461 221.572 30.8453 222.284 30.8453L223.369 30.8453L223.369 33.384L221.479 33.384C220.347 33.384 219.437 33.1855 218.749 32.7887C218.061 32.3918 217.554 31.7732 217.227 30.9328C216.912 30.0924 216.754 28.9836 216.754 27.6063L216.754 17.5916L213.762 17.5916L213.762 14.9654L216.754 14.9654L216.754 10.4833L219.729 9.43285L219.729 14.9654L223.404 14.9654L223.404 17.5916L219.729 17.5916Z" fill-opacity="0.4"/>\n  <path d="M243.141 33.384L240.149 33.384L240.149 22.2488C240.149 18.6771 238.551 16.8913 235.355 16.8913C234.48 16.8913 233.687 17.1072 232.975 17.5391C232.263 17.9593 231.686 18.5546 231.243 19.3249C230.811 20.0836 230.56 20.9415 230.49 21.8986L230.49 33.384L227.498 33.384L227.498 7.61201L230.49 7.61201L230.49 17.7142L230.648 17.7142C231.126 16.617 231.861 15.7766 232.853 15.193C233.844 14.6094 234.946 14.3176 236.16 14.3176C238.446 14.3176 240.178 14.9362 241.357 16.1735C242.546 17.399 243.141 19.2082 243.141 21.601L243.141 33.384Z" fill-opacity="0.4"/>\n  <path d="M276.862 14.4694L271.223 23.3221L276.898 33.3358L270.568 33.3358L266.712 26.7326L262.601 33.3358L256.271 33.3358L262.237 23.3221L256.416 14.4694L262.673 14.4694L266.748 20.7824L270.459 14.4694L276.862 14.4694Z" fill-opacity="0.4"/>\n  <path d="M279.824 14.4694L279.824 33.3358L285.572 33.3358L285.572 23.3584L285.572 22.7779C285.572 20.7461 287.1 18.9683 288.846 18.9683C290.738 18.9683 291.975 20.347 291.975 22.4876L291.975 33.3358L297.723 33.3358L297.723 22.7779C297.723 20.7461 299.142 18.9683 300.815 18.9683C302.78 18.9683 304.053 20.347 304.053 22.4876L304.053 33.3358L309.801 33.3358L309.801 22.4151C309.801 19.3311 309.037 13.7438 302.561 13.7438C299.542 13.7438 297.505 15.2313 296.559 16.9729C295.395 14.8685 293.321 13.7438 290.483 13.7438C287.9 13.7438 286.154 14.796 285.281 16.2835L284.299 14.4694L279.824 14.4694Z" fill-opacity="0.4"/>\n  <path d="M312.777 14.4694L312.777 33.3358L318.525 33.3358L318.525 14.4694L312.777 14.4694ZM312.013 8.62814C312.013 10.6236 313.65 12.2563 315.688 12.2563C317.652 12.2563 319.289 10.6236 319.289 8.62813C319.289 6.66894 317.652 5 315.688 5C313.65 5 312.013 6.66894 312.013 8.62814Z" fill-opacity="0.4"/>\n  <path d="M321.853 14.4694L321.853 33.3358L327.601 33.3358L327.601 22.7779C327.601 20.7461 329.129 18.9683 330.875 18.9683C332.876 18.9683 334.004 20.2382 334.004 22.4876L334.004 33.3358L339.752 33.3358L339.752 22.2337C339.752 16.7552 337.169 13.7438 332.512 13.7438C329.929 13.7438 328.183 14.796 327.31 16.2835L326.328 14.4694L321.853 14.4694Z" fill-opacity="0.4"/>\n  <path d="M351.649 33.7349C353.905 33.7349 356.015 32.9367 357.652 31.558L358.671 33.3358L363 33.3358L363 8.8821L357.252 6.92291L357.252 15.5942C355.651 14.4332 353.723 13.7438 351.649 13.7438C346.265 13.7438 341.936 18.2064 341.936 23.7575C341.936 29.2722 346.265 33.7349 351.649 33.7349ZM347.648 23.6486C347.648 20.9638 349.794 18.7869 352.523 18.7869C355.251 18.7869 357.434 20.9638 357.434 23.6486C357.434 26.406 355.251 28.5466 352.523 28.5466C349.794 28.5466 347.648 26.406 347.648 23.6486Z" fill-opacity="0.4"/>\n  </g>\n  <defs>\n  <clipPath id="clip0_5008_817">\n  <rect width="43" height="370" fill="white" transform="translate(0 43) rotate(-90)"/>\n  </clipPath>\n  </defs>\n  </svg>`;
        const { width: d, height: u } = o.computeSVGShapeSize(c),
          p = {
            id: n.watermark(),
            roles: ["watermark"],
            bounds: l.zeroRect(),
            absBounds: l.zeroRect(),
            contentType: "svg-template",
            svg: c,
          };
        return (
          r.initializeBoxStyle(p, e, a),
          (p.bounds = { x: 0, y: 0, width: d, height: u }),
          "right" === t &&
            ((p.transformOrigin = "100% 0%"),
            (p.transform = [{ rotate: 90, scale: { x: 0.52, y: 0.5 } }])),
          (p.absBounds = Object.assign(
            p.bounds,
            (function (t, e, i, o) {
              var l, a;
              switch (e) {
                case "bottom-center":
                  return {
                    x: t.width / 2 - i.width / 2,
                    y:
                      t.height -
                      i.height -
                      r.calcLength(o.bottomCenterWatermarkVerticalMargin, t),
                  };
                case "bottom-left": {
                  const e =
                    null !==
                      (a =
                        null ===
                          (l = n.getBoxById(
                            t.boxes,
                            n.titleTextOfTopic(t.topicId),
                          )) || void 0 === l
                          ? void 0
                          : l.absBounds.x) && void 0 !== a
                      ? a
                      : o.bottomEdgeWatermarkHorizontalMargin;
                  return {
                    x: r.calcLength(e, t),
                    y:
                      t.height -
                      i.height -
                      r.calcLength(o.bottomEdgeWatermarkVerticalMargin, t),
                  };
                }
                case "bottom-right":
                  return {
                    x:
                      t.width -
                      i.width -
                      r.calcLength(o.bottomEdgeWatermarkHorizontalMargin, t),
                    y:
                      t.height -
                      i.height -
                      r.calcLength(o.bottomEdgeWatermarkVerticalMargin, t),
                  };
                case "right":
                  return {
                    x:
                      t.width -
                      i.width -
                      r.calcLength(o.verticalWatermarkHorizontalMargin, t),
                    y:
                      t.height -
                      r.calcLength(o.verticalWatermarkVerticalMargin, t),
                  };
              }
            })(e, t, { width: d, height: u }, i),
          )),
          p
        );
      }
      e.addSlideWatermark = function (t, e) {
        var i;
        const o =
            null !== (i = null == e ? void 0 : e.theme) && void 0 !== i
              ? i
              : r.defaultTheme,
          s = r.appearanceOf(o),
          c = r.dimensionOf(o, { width: t.width, height: t.height }),
          d = (function (t, e, i) {
            const o = t.width < t.height;
            if ("centralTopic" === t.topicLevel && "topic" === t.type) {
              const r = n.getBoxById(
                  t.boxes,
                  n.titleTextOfTopic(t.topicId),
                  "text",
                ),
                s = n.getBoxById(
                  t.boxes,
                  n.contentGroupOfTopic(t.topicId),
                  "group",
                ),
                c = n.getBoxById(t.boxes, n.imageOfTopic(t.topicId)),
                d = n.getBoxById(t.boxes, n.labelListOfTopic(t.topicId)),
                u = a("bottom-center", t, e, i);
              if (r && s)
                return o
                  ? s.contentHeight > s.bounds.height ||
                    l.intersectRect(
                      null == c ? void 0 : c.absBounds,
                      u.absBounds,
                    ) ||
                    l.intersectRect(
                      null == d ? void 0 : d.absBounds,
                      u.absBounds,
                    ) ||
                    (r.lineCount && r.lineCount > 1)
                    ? "bottom-right"
                    : "bottom-center"
                  : s.contentHeight > s.bounds.height ||
                      l.intersectRect(
                        null == c ? void 0 : c.absBounds,
                        u.absBounds,
                      ) ||
                      l.intersectRect(
                        null == d ? void 0 : d.absBounds,
                        u.absBounds,
                      )
                    ? "right"
                    : r.lineCount && r.lineCount > 1
                      ? "bottom-left"
                      : "bottom-center";
            }
            return o ? "bottom-right" : "right";
          })(t, c, s),
          u = a(d, t, c, s);
        t.boxes.push(u);
      };
    },
    73886: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeTopicLevel = void 0),
        (e.computeTopicLevel = function (t, e) {
          var i;
          if ((e.getFloatingTopics ? e.getFloatingTopics() : []).includes(t))
            return "floatingTopic";
          const n = e.getParentTopicId(t);
          if (!n) return "centralTopic";
          const { summaries: o } =
            null !== (i = e.getTopicAttributes(n)) && void 0 !== i
              ? i
              : { id: n, title: "" };
          return (null != o ? o : []).some((e) => e.topicId === t)
            ? "summaryTopic"
            : (n ? e.getParentTopicId(n) : null)
              ? "subtopic"
              : "mainTopic";
        });
    },
    71934: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeTransitionEffect =
          e.doComputeTransition =
          e.findNonSkippedSlide =
          e.findTargetSlideForFastForwardTransition =
          e.findTargetSlideForFastBackwardTransition =
          e.findTargetSlideForPresentTransition =
          e.findTargetSlideForBackwardTransition =
          e.findTargetSlideForForwardTransition =
          e.computeTransition =
            void 0);
      const n = i(6776);
      function o(t, e) {
        if (!e) return t.getStartingSlide();
        const i = e.nextSlide ? t.getSlideByAlias(e.nextSlide) : null;
        return c(t, i, (t) => t.nextSlide);
      }
      function l(t, e) {
        var i;
        if (!e) return null;
        const n = e.previousSlide ? t.getSlideByAlias(e.previousSlide) : null;
        return null !== (i = c(t, n, (t) => t.previousSlide)) && void 0 !== i
          ? i
          : e;
      }
      function r(t, e, i, n, o) {
        var l, r, a;
        if ("list" === n) {
          let n = null;
          return (
            i &&
              (n = t.getSlideByAlias({
                kind: "listOfTopic",
                topicId: i,
                index: 0,
              })),
            null !== (l = null != n ? n : t.getStartingSlide(i)) && void 0 !== l
              ? l
              : e
          );
        }
        if ("summary" === n) {
          let n = null;
          return (
            i &&
              (n = t.getSlideByAlias({ kind: "startOfSummary", topicId: i })),
            null !== (r = null != n ? n : t.getStartingSlide(i)) && void 0 !== r
              ? r
              : e
          );
        }
        {
          let n = null;
          return (
            i &&
              o &&
              ((n = t.getSlideByAlias({ kind: "introOfTopic", topicId: i })),
              n === e && (n = null)),
            null !== (a = null != n ? n : t.getStartingSlide(i)) && void 0 !== a
              ? a
              : e
          );
        }
      }
      function a(t, e, i) {
        var n;
        const o = null != i ? i : null == e ? void 0 : e.topicId;
        if (!o) return null;
        const l =
          null !==
            (n = t.getSlideByAlias(
              "summary" === (null == e ? void 0 : e.type)
                ? { kind: "introOfSummary", topicId: o }
                : { kind: "introOfTopic", topicId: o },
            )) && void 0 !== n
            ? n
            : t.getSlideByAlias({ kind: "startOfTopic", topicId: o });
        return null != l ? l : e;
      }
      function s(t, e, i) {
        var n;
        const o = null != i ? i : null == e ? void 0 : e.topicId;
        if (!o) return null;
        const l =
          null !==
            (n = t.getSlideByAlias(
              "summary" === (null == e ? void 0 : e.type)
                ? { kind: "outroOfSummary", topicId: o }
                : { kind: "outroOfTopic", topicId: o },
            )) && void 0 !== n
            ? n
            : t.getSlideByAlias({ kind: "endOfTopic", topicId: o });
        return null != l ? l : e;
      }
      function c(t, e, i) {
        for (; e && t.isSlideSkipped(e); ) {
          const n = i(e);
          e = n ? t.getSlideByAlias(n) : null;
        }
        return e;
      }
      function d(t, e, i, o, l = {}) {
        var r, a;
        if (i === o) return null;
        const s = l.disablesEffect
            ? { effect: "none", duration: 0 }
            : p(e, i, o),
          c = Object.assign(Object.assign({}, s), {
            baseDuration: e,
            sourceSlide: i,
            targetSlide: o,
          });
        return (
          !l.disablesSourceSlideAnimations &&
            i &&
            (c.sourceSlideAnimations = i.leavingAnimations),
          !l.disablesTargetSlideAnimations &&
            o &&
            ((c.targetSlideEnteringState = o.enteringStates),
            null === (r = o.additionalEnteringStates) ||
              void 0 === r ||
              r.forEach((e) => {
                u(t, i, e.when) &&
                  (c.targetSlideEnteringState = n.mergeSlideState(
                    c.targetSlideEnteringState,
                    e.state,
                  ));
              }),
            null === (a = o.enteringAnimations) ||
              void 0 === a ||
              a.forEach((e) => {
                u(t, i, e.when) &&
                  (c.targetSlideAnimations || (c.targetSlideAnimations = []),
                  c.targetSlideAnimations.push(e));
              })),
          c
        );
      }
      function u(t, e, i) {
        return (
          !i ||
          ((!i.request || i.request === t.kind) &&
            (!i.sourceSlideType ||
              i.sourceSlideType === (null == e ? void 0 : e.type)) &&
            (!i.sourceSlideTopicId ||
              i.sourceSlideTopicId === (null == e ? void 0 : e.topicId)))
        );
      }
      function p(t, e, i) {
        return "topic" !== (null == i ? void 0 : i.type) ||
          ("centralTopic" != (null == i ? void 0 : i.topicLevel) &&
            "floatingTopic" != (null == i ? void 0 : i.topicLevel))
          ? e && i
            ? e.topicId === i.topicId
              ? "list" === e.type && "topic" === i.type
                ? { effect: "magicMove", duration: 2.5 * t }
                : e.type === i.type
                  ? { effect: "animateInSlide", duration: 1.5 * t }
                  : { effect: "magicMove", duration: 2.5 * t }
              : (e.topicId === i.parentTopicId || (i.topicId, e.parentTopicId),
                { effect: "magicMove", duration: 2.5 * t })
            : { effect: "dissolve", duration: t }
          : { effect: "dissolve", duration: 1.5 * t };
      }
      (e.computeTransition = function (t, e, i, n, c = {}) {
        switch (e.kind) {
          case "present":
            return d(e, i, n, r(t, n, e.topicId, e.slideType, e.viaIntro), {
              disablesEffect: c.disablesAnimations,
              disablesSourceSlideAnimations: c.disablesAnimations,
              disablesTargetSlideAnimations:
                !!e.viaIntro || c.disablesAnimations,
            });
          case "forward":
            return d(e, i, n, o(t, n), {
              disablesEffect: c.disablesAnimations,
              disablesSourceSlideAnimations: c.disablesAnimations,
              disablesTargetSlideAnimations: c.disablesAnimations,
            });
          case "backward":
            return d(e, i, n, l(t, n), {
              disablesEffect: !0,
              disablesSourceSlideAnimations: !0,
              disablesTargetSlideAnimations: !0,
            });
          case "fastBackward":
            return d(e, i, n, a(t, n, e.topicId), {
              disablesEffect: c.disablesAnimations,
              disablesSourceSlideAnimations: !0,
              disablesTargetSlideAnimations: !0,
            });
          case "fastForward":
            return d(e, i, n, s(t, n, e.topicId), {
              disablesEffect: c.disablesAnimations,
              disablesSourceSlideAnimations: c.disablesAnimations,
              disablesTargetSlideAnimations: c.disablesAnimations,
            });
          case "changeAppearance":
          case "changeSlideSize":
          case "changeWatermarkDisabled":
          case "forceUpdateSlideContent":
            return null;
        }
      }),
        (e.findTargetSlideForForwardTransition = o),
        (e.findTargetSlideForBackwardTransition = l),
        (e.findTargetSlideForPresentTransition = r),
        (e.findTargetSlideForFastBackwardTransition = a),
        (e.findTargetSlideForFastForwardTransition = s),
        (e.findNonSkippedSlide = c),
        (e.doComputeTransition = d),
        (e.computeTransitionEffect = p);
    },
    22329: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeSummariesEndingAt =
          e.makeIndexGenerator =
          e.describeSlideSequenceForTopic =
          e.describeListSlideSequenceForTopic =
            void 0);
      const n = i(30207);
      function o(t) {
        var e;
        const { topic: i, subtopics: n, computedListSlideDelivery: o } = t,
          { id: a } = i,
          s = [],
          c = l(),
          d = null !== (e = i.summaries) && void 0 !== e ? e : [];
        if (t.subtopics.length > 0)
          switch (o) {
            case "one-by-one":
              for (let t = 0; t < n.length; t++)
                s.push({
                  type: "list",
                  alias: { kind: "listOfTopic", topicId: a, index: c() },
                  layoutOptions: { numberOfVisibleTopics: t },
                });
              break;
            case "all-at-once":
              s.push({
                type: "list",
                alias: { kind: "listOfTopic", topicId: a, index: c() },
                layoutOptions: {
                  numberOfVisibleTopics: n.length,
                  numberOfVisitedTopics: 0,
                  inSlideScroll: !0,
                },
              });
              break;
            case "one-by-one-drill-in":
              s.push({
                type: "list",
                alias: { kind: "listOfTopic", topicId: a, index: c() },
                layoutOptions: { numberOfVisibleTopics: 0 },
              });
          }
        for (let t = 0; t < n.length; t++) {
          const e = t;
          s.push({
            type: "list",
            alias: { kind: "listOfTopic", topicId: a, index: c() },
            layoutOptions:
              "one-by-one-drill-in" === o
                ? { numberOfVisibleTopics: e }
                : { numberOfVisibleTopics: n.length, numberOfVisitedTopics: e },
          });
          const i = n[t];
          s.push({
            alias: { kind: "startOfTopic", topicId: i.id },
            previousSlide: { kind: "introOfTopic", topicId: i.id },
          }),
            s.push({
              alias: { kind: "endOfTopic", topicId: i.id },
              nextSlide: { kind: "outroOfTopic", topicId: i.id },
            });
          for (const i of r(t, d)) {
            const t = i.topicId;
            s.push({
              type: "list",
              alias: { kind: "listOfTopic", topicId: a, index: c() },
              layoutOptions:
                "one-by-one-drill-in" === o
                  ? { numberOfVisibleTopics: e }
                  : {
                      numberOfVisibleTopics: n.length,
                      numberOfVisitedTopics: e,
                    },
            }),
              s.push({
                alias: { kind: "startOfSummary", topicId: t },
                previousSlide: { kind: "introOfSummary", topicId: t },
              }),
              s.push({
                alias: { kind: "endOfSummary", topicId: t },
                nextSlide: { kind: "outroOfSummary", topicId: t },
              });
          }
          s.push({
            type: "list",
            alias: { kind: "listOfTopic", topicId: a, index: c() },
            layoutOptions:
              "one-by-one-drill-in" === o
                ? { numberOfVisibleTopics: e }
                : { numberOfVisibleTopics: n.length, numberOfVisitedTopics: e },
          });
        }
        return s;
      }
      function l() {
        let t = 0;
        return () => {
          const e = t;
          return (t += 1), e;
        };
      }
      function r(t, e) {
        return e
          .filter(({ endIndex: e }) => e === t)
          .sort((t, e) => e.startIndex - t.startIndex);
      }
      (e.describeListSlideSequenceForTopic = o),
        (e.describeSlideSequenceForTopic = function (t) {
          const e = [],
            { topic: i, topicLevel: l, siblingTopics: r } = t,
            { id: a } = i,
            { previousSiblingTopicId: s, nextSiblingTopicId: c } =
              n.computeSiblingTopics(
                a,
                r.map((t) => t.id),
              );
          return (
            "floatingTopic" === l
              ? s &&
                e.push({
                  alias: { kind: "endOfTopic", topicId: s },
                  nextSlide: { kind: "outroOfTopic", topicId: s },
                })
              : "summaryTopic" === l
                ? (e.push({ alias: { kind: "introOfSummary", topicId: a } }),
                  e.push({
                    type: "summary",
                    alias: { kind: "startOfSummary", topicId: a },
                  }))
                : "centralTopic" !== l &&
                  e.push({ alias: { kind: "introOfTopic", topicId: a } }),
            e.push({
              type: "topic",
              alias: { kind: "startOfTopic", topicId: a },
              previousSlide: { kind: "introOfTopic", topicId: a },
            }),
            e.push(...o(t)),
            "centralTopic" === l || "floatingTopic" === l
              ? c
                ? e.push({
                    alias: { kind: "startOfTopic", topicId: c },
                    previousSlide: { kind: "endOfTopic", topicId: a },
                    previousSlide2: { kind: "introOfTopic", topicId: c },
                  })
                : e.push({
                    type: "epilogue",
                    alias: { kind: "outroOfTopic", topicId: a },
                    previousSlide: { kind: "endOfTopic", topicId: a },
                  })
              : "summaryTopic" === l
                ? (e.push({
                    type: "summary",
                    alias: { kind: "outroOfTopic", topicId: a },
                    previousSlide: { kind: "endOfTopic", topicId: a },
                  }),
                  e.push({
                    alias: { kind: "outroOfSummary", topicId: a },
                    previousSlide: { kind: "endOfSummary", topicId: a },
                  }))
                : e.push({
                    alias: { kind: "outroOfTopic", topicId: a },
                    previousSlide: { kind: "endOfTopic", topicId: a },
                  }),
            e
          );
        }),
        (e.makeIndexGenerator = l),
        (e.computeSummariesEndingAt = r);
    },
    75327: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.createElementFromHTML =
          e.computeSVGShapeSize =
          e.isSvg =
          e.getClippedBoundsOfElement =
          e.fillText =
          e.emptyElement =
          e.escapeHtmlTag =
          e.toCSSTextAlign =
          e.toCSSFont =
          e.toCSSLength =
            void 0),
        (e.toCSSLength = function (t) {
          return void 0 === t ? "" : `${t}px`;
        }),
        (e.toCSSFont = function (t) {
          var e, i, n, o, l;
          const r = (
              null !== (e = null == t ? void 0 : t.fontFamily) && void 0 !== e
                ? e
                : ["sans-serif"]
            )
              .map((t) => (t.indexOf(" ") >= 0 ? `'${t}'` : t))
              .join(", "),
            a =
              null !== (i = null == t ? void 0 : t.fontSize) && void 0 !== i
                ? i
                : "12px",
            s =
              null !== (n = null == t ? void 0 : t.lineHeight) && void 0 !== n
                ? n
                : "1em",
            c =
              null !== (o = null == t ? void 0 : t.fontWeight) && void 0 !== o
                ? o
                : "normal";
          return `${null !== (l = null == t ? void 0 : t.fontStyle) && void 0 !== l ? l : "normal"} ${c} ${a}/${s} ${r}`;
        }),
        (e.toCSSTextAlign = function (t) {
          if (t)
            switch (t) {
              case "leading":
                return "left";
              case "center":
                return "center";
              case "trailing":
                return "right";
            }
        });
      const i = { "&": "&amp;", "<": "&lt;", ">": "&gt;" };
      (e.escapeHtmlTag = function (t) {
        return t.replace(/[&<>]/g, function (t) {
          return i[t] || t;
        });
      }),
        (e.emptyElement = function (t) {
          for (let e = t.lastChild; e; e = t.lastChild) t.removeChild(e);
        }),
        (e.fillText = function (t, e) {
          e.split(/\r\n|\r|\n/g).forEach((e, i) => {
            i > 0 && t.appendChild(document.createElement("br")),
              t.appendChild(document.createTextNode(e));
          });
        }),
        (e.getClippedBoundsOfElement = function (t, e) {
          const i = {
            x: t.offsetLeft,
            y: t.offsetTop,
            width: t.offsetWidth,
            height: t.offsetHeight,
          };
          let n = t.offsetParent;
          for (; n && n !== e; ) {
            (i.x -= n.scrollLeft), (i.y -= n.scrollTop);
            const e = getComputedStyle(n);
            "visible" !== e.overflowX &&
              (i.x < 0 && ((i.width += i.x), (i.x = 0)),
              i.x + i.width > n.offsetWidth && (i.width = n.offsetWidth - i.x)),
              "visible" !== e.overflowY &&
                (i.y < 0 && ((i.height += i.y), (i.y = 0)),
                i.y + i.height > n.offsetHeight &&
                  (i.height = n.offsetHeight - i.y)),
              (i.x += n.offsetLeft),
              (i.y += n.offsetTop),
              (t = n),
              (n = n.offsetParent);
          }
          return i;
        }),
        (e.isSvg = function (t) {
          return !new DOMParser()
            .parseFromString(t, "image/svg+xml")
            .querySelector("parsererror");
        }),
        (e.computeSVGShapeSize = function (t) {
          var e, i;
          const n = new DOMParser().parseFromString(
            t,
            "image/svg+xml",
          ).documentElement;
          return {
            width: parseInt(
              null !== (e = n.getAttribute("width")) && void 0 !== e ? e : "0",
            ),
            height: parseInt(
              null !== (i = n.getAttribute("height")) && void 0 !== i ? i : "0",
            ),
          };
        }),
        (e.createElementFromHTML = function (t) {
          const e = document.createElement("div");
          return (e.innerHTML = t.trim()), e.firstChild;
        });
    },
    63708: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.performAnimateInSlideTransitionEffect =
          e.computeAnimateInSlideTransitionEffect =
            void 0);
      const o = i(6776),
        l = i(10430);
      (e.computeAnimateInSlideTransitionEffect = function (t) {
        return {
          effect: "animateInSlide",
          targetSlide: t.targetSlide,
          targetSlideEnteringState: t.targetSlideEnteringState,
        };
      }),
        (e.performAnimateInSlideTransitionEffect = function (t, e, i) {
          return n(this, void 0, void 0, function* () {
            (i.slide = e.targetSlide),
              e.targetSlideEnteringState &&
                (i.slideState = o.mergeSlideState(
                  i.slideState,
                  e.targetSlideEnteringState,
                )),
              yield new l.ViewAnimator({
                duration: t,
                easing: "easeInOutCubic",
              })
                .animate(() => {
                  i.update();
                })
                .play();
          });
        });
    },
    12133: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__awaiter) ||
          function (t, e, i, n) {
            return new (i || (i = Promise))(function (o, l) {
              function r(t) {
                try {
                  s(n.next(t));
                } catch (t) {
                  l(t);
                }
              }
              function a(t) {
                try {
                  s(n.throw(t));
                } catch (t) {
                  l(t);
                }
              }
              function s(t) {
                var e;
                t.done
                  ? o(t.value)
                  : ((e = t.value),
                    e instanceof i
                      ? e
                      : new i(function (t) {
                          t(e);
                        })).then(r, a);
              }
              s((n = n.apply(t, e || [])).next());
            });
          },
        o =
          (this && this.__importDefault) ||
          function (t) {
            return t && t.__esModule ? t : { default: t };
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.performDissolveTransitionEffect = e.computeDissolveTransitionEffect =
          void 0);
      const l = o(i(76030)),
        r = i(95763),
        a = i(97857);
      function s(t, e, i, o) {
        return n(this, void 0, void 0, function* () {
          const n = parseFloat(i.contentEl.style.opacity || "1");
          return Promise.all([
            l.default({
              targets: [e.contentEl],
              opacity: 0,
              duration: t,
              delay: null != o ? o : 0,
              easing: "easeOutQuad",
            }).finished,
            l.default({
              targets: [i.contentEl],
              opacity: [0, n],
              duration: t,
              delay: null != o ? o : 0,
              easing: "easeInQuad",
            }).finished,
          ]);
        });
      }
      function c(t, e) {
        return n(this, void 0, void 0, function* () {
          const i = l.default.timeline({
            easing: "easeInOutQuart",
            duration: t,
            autoplay: !1,
          });
          return (
            e.boxViews
              .filter((t) => t instanceof r.BackgroundShapeView)
              .forEach((n, o) => {
                var l, r;
                if (!e.slide) return;
                const s = a.extractTransform(
                    null !== (l = n.box.transform) && void 0 !== l ? l : [],
                  ),
                  c = o < 2 ? 0.33 * t : 0.83 * t,
                  d = 0 == o ? 0 : 0.17 * t;
                i.add(
                  { targets: [n.el], opacity: [0, 1], duration: c, delay: d },
                  0,
                ),
                  i.add(
                    {
                      targets: [n.el],
                      scaleX: [0.77 * s.scale.x, s.scale.x],
                      scaleY: [0.77 * s.scale.y, s.scale.y],
                      translateX: s.translate.x,
                      translateY: s.translate.y,
                      rotate: null !== (r = s.rotate) && void 0 !== r ? r : 0,
                      duration: 0.83 * t,
                      delay: 0.17 * t,
                    },
                    0,
                  );
              }),
            setTimeout(function () {
              i.restart();
            }, 0),
            i.finished
          );
        });
      }
      function d(t, e) {
        return n(this, void 0, void 0, function* () {
          const i = l.default.timeline({
            easing: "easeInOutQuart",
            duration: t,
            autoplay: !1,
          });
          return (
            e.boxViews
              .filter((t) => t instanceof r.BackgroundShapeView)
              .forEach((n) => {
                var o;
                if (!e.slide) return;
                const l = a.extractTransform(
                    null !== (o = n.box.transform) && void 0 !== o ? o : [],
                  ),
                  r =
                    l.translate.x < e.slide.width / 2
                      ? -n.box.bounds.width * l.scale.x
                      : e.slide.width + n.box.bounds.width * l.scale.x,
                  s =
                    l.translate.y < e.slide.height / 2
                      ? -n.box.bounds.height * l.scale.y
                      : e.slide.height + n.box.bounds.height * l.scale.y;
                (n.el.style.transform = `translateX(${r}px) translateY(${s}px) rotate(${l.rotate}deg) scaleX(${l.scale.x}) scaleY(${l.scale.y})`),
                  i.add(
                    {
                      targets: [n.el],
                      scaleX: l.scale.x,
                      scaleY: l.scale.y,
                      translateX: l.translate.x,
                      translateY: l.translate.y,
                      rotate: l.rotate,
                      duration: t,
                      delay: t,
                      easing:
                        "bouncing" === n.box.privilegedAnimation
                          ? "spring(0.3, 20, 3, 0)"
                          : void 0,
                    },
                    0,
                  );
              }),
            setTimeout(function () {
              i.restart();
            }, 0),
            i.finished
          );
        });
      }
      (e.computeDissolveTransitionEffect = function () {
        return { effect: "dissolve" };
      }),
        (e.performDissolveTransitionEffect = function (t, e, i) {
          var o, a;
          return n(this, void 0, void 0, function* () {
            [...i.boxViews, ...i.backgroundBoxViews].filter(
              (t) => t instanceof r.BackgroundShapeView,
            ).length > 0
              ? "scale" ===
                (null === (o = i.slide) || void 0 === o
                  ? void 0
                  : o.backgroundShapeLaunchEffect)
                ? yield Promise.all([c(2 * t, i), s(1.67 * t, e, i, 0.33 * t)])
                : "stroke-offset" ===
                    (null === (a = i.slide) || void 0 === a
                      ? void 0
                      : a.backgroundShapeLaunchEffect)
                  ? yield (function (t) {
                      return n(this, void 0, void 0, function* () {
                        const e = 2600,
                          i = "linear",
                          n = l.default.timeline({
                            easing: i,
                            duration: e,
                            autoplay: !1,
                          });
                        return (
                          [...t.boxViews, ...t.backgroundBoxViews]
                            .filter((t) => t instanceof r.BackgroundShapeView)
                            .forEach((t) => {
                              let e = 0,
                                i = 0;
                              "frame-shape" === t.box.shapeId
                                ? ((i = 0), (e = 1e3))
                                : "curve-line" === t.box.shapeId
                                  ? ((i = 800), (e = 1e3))
                                  : "left-leaf-shape" === t.box.shapeId ||
                                      "middle-leaf-shape" === t.box.shapeId ||
                                      "right-leaf-shape" === t.box.shapeId
                                    ? ((i = 1e3), (e = 600))
                                    : "fold-line" === t.box.shapeId &&
                                      ((i = 1500), (e = 800)),
                                "flower-shape" === t.box.shapeId
                                  ? (n.add(
                                      {
                                        targets: [t.el],
                                        rotate: [160, 0],
                                        delay: 1e3,
                                        duration: 1600,
                                      },
                                      0,
                                    ),
                                    n.add(
                                      {
                                        targets: [t.el],
                                        opacity: [0, 1],
                                        delay: 1e3,
                                        duration: 1e3,
                                      },
                                      0,
                                    ))
                                  : n.add(
                                      {
                                        targets: [t.pathEl],
                                        strokeDashoffset: [
                                          l.default.setDashoffset,
                                          0,
                                        ],
                                        delay: i,
                                        duration: e,
                                      },
                                      0,
                                    );
                            }),
                          setTimeout(function () {
                            n.restart();
                          }, 0),
                          n.finished
                        );
                      });
                    })(i)
                  : yield Promise.all([d(t, i), s(t, e, i)])
              : yield s(t, e, i);
          });
        });
    },
    1539: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.performTransitionEffect = e.computeTransitionEffect = void 0);
      const n = i(6168),
        o = i(7875),
        l = i(12133),
        r = i(63708);
      (e.computeTransitionEffect = function (t, e, i) {
        switch (t.effect) {
          case "none":
            return n.computeNoTransitionEffect();
          case "animateInSlide":
            return r.computeAnimateInSlideTransitionEffect(t);
          case "magicMove":
            return o.computeMagicMoveTransitionEffect(t, e, i);
          case "dissolve":
            return l.computeDissolveTransitionEffect();
        }
      }),
        (e.performTransitionEffect = function (t, e, i, a) {
          switch (e.effect) {
            case "none":
              return n.performNoTransitionEffect();
            case "animateInSlide":
              return r.performAnimateInSlideTransitionEffect(t, e, a);
            case "magicMove":
              return o.performMagicMoveTransitionEffect(t, e, i, a);
            case "dissolve":
              return l.performDissolveTransitionEffect(t, i, a);
          }
        });
    },
    56382: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.diff = e.DiffResult = e.Word = void 0);
      const n = i(81727),
        o = i(89054);
      e.Word = class {
        constructor(t, e) {
          (this.range = t), (this.base = e);
        }
        get value() {
          return this.base.substr(this.range.location, this.range.length);
        }
        isEqualTo(t) {
          return this.value == t.value;
        }
        get diffIdentifier() {
          return this.value;
        }
        toString() {
          return `${this.value}{${this.range.location}, ${this.range.location + this.range.length}}`;
        }
      };
      class l {
        constructor(t, e, i) {
          (this.oldIndex = t), (this.newIndex = e), (this.length = i);
        }
        get debugDescription() {
          return `[Diff@(${this.oldIndex},${this.length})=>(${this.newIndex},${this.length})]`;
        }
      }
      e.DiffResult = l;
      class r {
        constructor(t = new Set(), e = new Set()) {
          (this.oldIndices = t), (this.newIndices = e);
        }
        appearAtOld(t) {
          this.oldIndices.add(t);
        }
        appearAtNew(t) {
          this.newIndices.add(t);
        }
        removeOldIndex(t) {
          this.oldIndices.delete(t);
        }
        removeNewIndex(t) {
          this.newIndices.delete(t);
        }
        get debugDescription() {
          return this.oldIndices + "|" + this.newIndices;
        }
      }
      class a {
        constructor(t, e, i) {
          (this.oldIndex = t), (this.newIndex = e), (this.length = i);
        }
      }
      e.diff = function (t, e) {
        var i;
        const s = {},
          c = new n.IndexSet(),
          d = [];
        for (let t = 0; t < e.length; ++t) {
          const i = e[t].diffIdentifier,
            n = s[i];
          if (n) n.appearAtNew(t);
          else {
            const e = new r();
            e.appearAtNew(t), (s[i] = e);
          }
        }
        for (let e = 0; e < t.length; ++e)
          null === (i = s[t[e].diffIdentifier]) ||
            void 0 === i ||
            i.appearAtOld(e);
        const u = t.length,
          p = Array(u)
            .fill(0)
            .map((t, e) => e)
            .reverse(),
          h = new Set(p);
        function g() {
          if (p.length > 0) {
            const t = p.pop();
            t && h.delete(t);
          }
        }
        function f(t) {
          const e = p.indexOf(t);
          e >= 0 && p.splice(e, 1), h.delete(t);
        }
        for (; p.length > 0; ) {
          const e = p[p.length - 1],
            i = s[t[e].diffIdentifier];
          if (!i) {
            g(), c.addIndexes(e), t[e];
            continue;
          }
          if (0 == i.oldIndices.size) {
            g(), t[e];
            continue;
          }
          if (0 == i.newIndices.size) {
            g(), c.addIndexes(e), t[e];
            continue;
          }
          const n = Array.from(i.oldIndices)
            .map((e) => {
              let n = e + 1,
                o = i.newIndices;
              for (; h.has(n); ) {
                const e = s[t[n].diffIdentifier];
                if (!e) break;
                const i = new Set(Array.from(o).map((t) => t + 1)),
                  l = new Set(Array.from(e.newIndices).filter((t) => i.has(t)));
                if (0 == l.size) break;
                (o = l), (n += 1);
              }
              const l = n - e;
              return new a(e, Math.min(...o) - l + 1, l);
            })
            .sort((t, e) =>
              t.length == e.length
                ? e.oldIndex - t.oldIndex
                : t.length - e.length,
            )
            .pop();
          n.oldIndex, n.length, n.newIndex, n.length;
          for (let e = n.oldIndex; e < n.oldIndex + n.length; ++e) {
            f(e);
            const i = s[t[e].diffIdentifier];
            i &&
              (i.removeOldIndex(e),
              i.removeNewIndex(n.newIndex + (e - n.oldIndex)));
          }
          d.push([
            new o.IndexRange(n.oldIndex, n.oldIndex + n.length - 1),
            new o.IndexRange(n.newIndex, n.newIndex + n.length - 1),
          ]);
        }
        return (function (t, e, i) {
          const n = [];
          for (const e of t._ranges) n.push(new l(e.lowerBound, -1, e.count));
          for (const t of e._ranges) n.push(new l(-1, t.lowerBound, t.count));
          for (const t of i)
            n.push(new l(t[0].location, t[1].location, t[0].length));
          return n;
        })(
          c,
          new n.IndexSet(
            Object.values(s).reduce(
              (t, e) => t.concat(Array.from(e.newIndices)),
              [],
            ),
          ),
          d,
        );
      };
    },
    7875: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__awaiter) ||
          function (t, e, i, n) {
            return new (i || (i = Promise))(function (o, l) {
              function r(t) {
                try {
                  s(n.next(t));
                } catch (t) {
                  l(t);
                }
              }
              function a(t) {
                try {
                  s(n.throw(t));
                } catch (t) {
                  l(t);
                }
              }
              function s(t) {
                var e;
                t.done
                  ? o(t.value)
                  : ((e = t.value),
                    e instanceof i
                      ? e
                      : new i(function (t) {
                          t(e);
                        })).then(r, a);
              }
              s((n = n.apply(t, e || [])).next());
            });
          },
        o =
          (this && this.__importDefault) ||
          function (t) {
            return t && t.__esModule ? t : { default: t };
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.performMagicMoveTransitionEffect =
          e.computeMagicMoveTransitionEffect =
            void 0);
      const l = o(i(76030)),
        r = i(6776),
        a = i(10430),
        s = i(69738),
        c = i(95763),
        d = i(21695),
        u = i(59597),
        p = i(75327),
        h = i(97857),
        g = i(6512);
      function f(t) {
        var e, i;
        let n = null !== (e = t.box.opacity) && void 0 !== e ? e : 1,
          o = t.superview;
        for (; o && o instanceof a.BoxView; )
          (n *= null !== (i = o.box.opacity) && void 0 !== i ? i : 1),
            (o = o.superview);
        return n;
      }
      function m(t) {
        let e = t.superview;
        for (; e instanceof a.GroupView; ) {
          const t = e;
          if (
            void 0 === t.box.overflow ||
            t.box.contentWidth > t.box.bounds.width ||
            t.box.contentHeight > t.box.bounds.height
          )
            return e;
          e = e.superview;
        }
        return null;
      }
      function b(t) {
        var e, i, n;
        const o = m(t),
          l = h.extractTransform(
            null !== (e = t.box.transform) && void 0 !== e ? e : [],
          ),
          r = {
            x: 0,
            y: 0,
            width: t.box.bounds.width * l.scale.x,
            height: t.box.bounds.height * l.scale.y,
          };
        return (
          o &&
            (o.box.contentHeight > o.box.bounds.height
              ? ((r.y = null !== (i = o.scrollOffset) && void 0 !== i ? i : 0),
                (r.height = Math.min(o.box.bounds.height, r.height)))
              : o.box.contentWidth > o.box.bounds.width &&
                ((r.x = null !== (n = o.scrollOffset) && void 0 !== n ? n : 0),
                (r.width = Math.min(o.box.bounds.width, r.width)))),
          r
        );
      }
      function v(t) {
        const e = m(t);
        let i = 0,
          n = 0,
          o = 0,
          l = 0;
        const r = { x: 0, y: 0 };
        if (e) {
          const a = e.scrollOffset;
          e.contentHeight > e.box.bounds.height
            ? ((r.y = a),
              (i = Math.max(e.box.absBounds.y - (t.box.absBounds.y - a), 0)),
              (o = Math.max(
                t.box.absBounds.y -
                  a +
                  t.box.bounds.height -
                  (e.box.absBounds.y + e.box.absBounds.height),
                0,
              )))
            : e.contentWidth > e.box.bounds.width &&
              ((r.x = a),
              (l = Math.max(e.box.absBounds.x - (t.box.absBounds.x - a), 0)),
              (n = Math.max(
                t.box.absBounds.x -
                  a +
                  t.box.bounds.width -
                  (e.box.absBounds.x + e.box.absBounds.width),
                0,
              )));
        }
        return {
          clipPath: `rect(${i}px ${t.box.absBounds.width - n}px ${t.box.absBounds.height - o}px ${l}px)`,
          scrollOffsets: r,
        };
      }
      function x() {
        const t = document.createElement("div");
        return (
          (t.style.width = "100%"),
          (t.style.height = "100%"),
          (t.style.position = "absolute"),
          (t.style.left = "0"),
          (t.style.top = "0"),
          (t.style.transform = "translateZ(0)"),
          t
        );
      }
      (e.computeMagicMoveTransitionEffect = function (t, e, i) {
        const n = {
            effect: "magicMove",
            textDataSet: {},
            imageDataSet: {},
            hideDataSet: new Set(),
            shapeDataSet: {},
            backgroundShapeDataSet: {},
            backgroundColorBrickDataSet: new Set(),
            showDataSet: new Set(),
            unMoveDataSet: new Set(),
          },
          o = e.clone(),
          l = i.clone(),
          h = document.createElement("div");
        function x(t, e) {
          var i;
          return (
            null !==
              (i =
                null == e
                  ? void 0
                  : e.some((e) => {
                      var i;
                      return (
                        "mutate" === e.effect &&
                        (null === (i = e.finalState.boxes) || void 0 === i
                          ? void 0
                          : i.some((e) => e.id === t))
                      );
                    })) &&
            void 0 !== i &&
            i
          );
        }
        function y(r, a, s) {
          const c = { boxId: r },
            d = a.box.absBounds,
            u = s.box.absBounds,
            h = p.getClippedBoundsOfElement(a.el, o.el),
            g = p.getClippedBoundsOfElement(s.el, l.el),
            m = f(a),
            b = f(s),
            v = m > 0 && h.width >= 0.9 * d.width && h.height >= 0.9 * d.height,
            x = b > 0 && g.width >= 0.9 * u.width && g.height >= 0.9 * u.height;
          if (v && x) {
            const n = a.el.getBoundingClientRect(),
              o = s.el.getBoundingClientRect(),
              l = e.getBoxViewById(r);
            if (
              ("imageSource" in a.box &&
                "imageSource" in s.box &&
                a.box.imageSource === s.box.imageSource) ||
              ("svg" in a.box && "svg" in s.box && a.box.svg === s.box.svg)
            )
              l &&
                (c.source = {
                  left: n.x + "px",
                  top: n.y + "px",
                  animeParams: [
                    {
                      translateX: o.x - n.x,
                      translateY: o.y - n.y,
                      scaleX: o.width / Math.max(1, n.width),
                      scaleY: o.width / Math.max(1, n.width),
                      opacity: b,
                    },
                  ],
                });
            else {
              const e = i.getBoxViewById(r);
              if (l && e) {
                const i =
                    null == l
                      ? void 0
                      : l.box.roles.includes("imagePlaceholder"),
                  r = o.width / Math.max(1, n.width),
                  a = o.height / Math.max(1, n.height),
                  s = Math.max(r, a);
                c.source = {
                  left: n.x + "px",
                  top: n.y + "px",
                  animeParams: [
                    {
                      translateX: o.x - n.x,
                      translateY: o.y - n.y,
                      scaleX: [1, i ? s : r],
                      scaleY: [1, i ? s : a],
                    },
                    {
                      opacity: [m, 0],
                      duration: i ? 0.5 * t.duration : t.duration,
                    },
                  ],
                };
                const d =
                    null == e
                      ? void 0
                      : e.box.roles.includes("imagePlaceholder"),
                  u = n.width / Math.max(1, o.width),
                  p = n.height / Math.max(1, o.height),
                  h = Math.max(u, p);
                c.target = {
                  left: o.x + "px",
                  top: o.y + "px",
                  animeParams: [
                    {
                      translateX: [n.x - o.x, 0],
                      translateY: [n.y - o.y, 0],
                      scaleX: [d ? h : u, 1],
                      scaleY: [d ? h : p, 1],
                    },
                    {
                      opacity: [0, b],
                      duration: d ? 0.5 * t.duration : t.duration,
                      delay: d ? 0.5 * t.duration : 0,
                    },
                  ],
                };
              }
            }
          } else {
            if (v) {
              if (e.getBoxViewById(r)) {
                const t = a.el.getBoundingClientRect();
                c.source = {
                  left: t.x + "px",
                  top: t.y + "px",
                  animeParams: [{ opacity: b }],
                };
              }
            }
            if (x) {
              if (i.getBoxViewById(r)) {
                const t = s.el.getBoundingClientRect();
                c.target = {
                  left: t.x + "px",
                  top: t.y + "px",
                  animeParams: [{ opacity: [0, b] }],
                };
              }
            }
          }
          n.imageDataSet[r] = c;
        }
        (h.style.width = "0"),
          (h.style.height = "0"),
          (h.style.position = "absolute"),
          (h.style.left = "0"),
          (h.style.top = "0"),
          (h.style.pointerEvents = "none"),
          (h.style.opacity = "0"),
          (h.style.visibility = "hidden"),
          (h.style.overflow = "hidden"),
          document.body.insertBefore(h, document.body.firstElementChild),
          (o.el.style.position = "absolute"),
          (o.el.style.left = "0"),
          (o.el.style.top = "0"),
          (l.el.style.position = "absolute"),
          (l.el.style.left = "0"),
          (l.el.style.top = "0"),
          h.appendChild(o.el),
          h.appendChild(l.el);
        const S = new Set();
        return (
          o.forEachBoxView((i) => {
            if (
              !(function (e) {
                return (
                  !(function (t, e) {
                    var i, n;
                    return (
                      null !==
                        (n =
                          null === (i = null == e ? void 0 : e.boxes) ||
                          void 0 === i
                            ? void 0
                            : i.some((e) => e.id === t)) &&
                      void 0 !== n &&
                      n
                    );
                  })(e, t.targetSlideEnteringState) &&
                  !x(e, t.sourceSlideAnimations) &&
                  !x(e, t.targetSlideAnimations)
                );
              })(i.box.id)
            )
              return;
            const p = i.box.id,
              h = l.getBoxViewById(p);
            if (h && i instanceof a.TextView && h instanceof a.TextView)
              !(function (t, i, r) {
                var a, s;
                const c = {
                    x: 0,
                    y: 0,
                    width: e.slide.width,
                    height: e.slide.height,
                  },
                  d = m(i),
                  u = m(r),
                  p =
                    d &&
                    "none" ===
                      (null !== (a = d.box.transform) && void 0 !== a
                        ? a
                        : "none")
                      ? d.box.absBounds
                      : c,
                  h =
                    u &&
                    "none" ===
                      (null !== (s = u.box.transform) && void 0 !== s
                        ? s
                        : "none")
                      ? u.box.absBounds
                      : c,
                  b = {
                    boxId: t,
                    magicMove: new g.TextMagicMove(
                      {
                        textEl: i.textEl,
                        clipRect: new DOMRect(p.x, p.y, p.width, p.height),
                        rootEl: o.el,
                        opacity: f(i),
                      },
                      {
                        textEl: r.textEl,
                        clipRect: new DOMRect(h.x, h.y, h.width, h.height),
                        rootEl: l.el,
                        opacity: f(r),
                      },
                    ),
                  };
                d && (b.source = { mask: d.computeMaskImage() }),
                  u && (b.target = { mask: u.computeMaskImage() }),
                  (n.textDataSet[t] = b);
              })(p, i, h);
            else if (h && i instanceof a.ShapeView && h instanceof a.ShapeView)
              !(function (t, e, i) {
                var o, l;
                (null !== (o = e.box.opacity) && void 0 !== o ? o : 0) > 0 &&
                  (null !== (l = i.box.opacity) && void 0 !== l ? l : 0) > 0 &&
                  (n.shapeDataSet[t] = {
                    boxId: t,
                    source: v(e),
                    target: v(i),
                  });
              })(p, i, h);
            else if (
              h &&
              (i instanceof d.ImageView || i instanceof u.SVGTemplateView) &&
              (h instanceof d.ImageView || h instanceof u.SVGTemplateView)
            )
              i.box.roles.includes("watermark") &&
              i instanceof u.SVGTemplateView &&
              h instanceof u.SVGTemplateView
                ? (function (e, i, o) {
                    var l;
                    "topic" ===
                      (null === (l = t.sourceSlide) || void 0 === l
                        ? void 0
                        : l.type) && "centralTopic" === t.sourceSlide.topicLevel
                      ? t.sourceSlide.width < t.sourceSlide.height
                        ? y(e, i, o)
                        : n.hideDataSet.add(e)
                      : n.unMoveDataSet.add(e);
                  })(p, i, h)
                : y(p, i, h);
            else if (i instanceof c.BackgroundShapeView) {
              const t = (function (t, e, i) {
                const n = i.getBoxViewById(t.box.id);
                if (n instanceof c.BackgroundShapeView) return n;
                const o = r.filterBoxes(
                  i.boxViews.map((t) => t.box),
                  (e) =>
                    "background-shape" === e.contentType &&
                    e.shapeId === t.box.shapeId,
                );
                if (1 === o.length && !e.getBoxViewById(o[0].id)) {
                  const t = i.getBoxViewById(o[0].id);
                  if (t instanceof c.BackgroundShapeView) return t;
                }
                return null;
              })(i, o, l);
              t
                ? (function (t, e, i) {
                    n.backgroundShapeDataSet[t] = {
                      sourceBoxId: t,
                      targetBoxId: i.box.id,
                      sourceBoxVisibleRect: b(e),
                      targetBoxVisibleRect: b(i),
                    };
                  })(p, i, t)
                : n.hideDataSet.add(p);
            } else
              i instanceof s.BackgroundColorBrickView &&
              h instanceof s.BackgroundColorBrickView
                ? n.backgroundColorBrickDataSet.add(p)
                : n.hideDataSet.add(p);
            S.add(p);
          }),
          l.forEachBoxView((t) => {
            S.has(t.box.id) || n.showDataSet.add(t.box.id);
          }),
          document.body.removeChild(h),
          n
        );
      }),
        (e.performMagicMoveTransitionEffect = function (t, e, i, o) {
          return n(this, void 0, void 0, function* () {
            const n = l.default.timeline({
              easing: "easeInOutQuart",
              duration: t,
              autoplay: !1,
            });
            i.el.insertBefore(o.contentEl, i.contentEl.nextSibling),
              i.el.insertBefore(o.backgroundEl, i.backgroundEl.nextSibling);
            const r = i.el.parentElement,
              a = x();
            i.el.insertBefore(a, i.contentEl);
            const s = x();
            i.el.insertBefore(s, i.contentEl);
            const d = x();
            i.el.insertBefore(d, i.contentEl);
            const u = x();
            (u.style.clipPath = o.contentClipPath),
              null == r || r.appendChild(u);
            const g = [],
              f = [];
            function m(t) {
              const e = i.getBoxViewById(t);
              if (!e) return;
              f.push(e.el);
              const n = e.el.style.visibility;
              g.push(() => {
                e.el.style.visibility = n;
              });
            }
            function b(t) {
              const e = o.getBoxViewById(t);
              if (!e) return;
              const i = e.el.style.visibility;
              (e.el.style.visibility = "hidden"),
                g.push(() => {
                  e.el.style.visibility = i;
                });
            }
            i.forEachBoxView((l) => {
              const r = l.box.id;
              e.hideDataSet.has(r)
                ? (function (e) {
                    const o = i.getBoxViewById(e);
                    o &&
                      n.add(
                        { targets: o.el, opacity: 0, duration: 0.5 * t },
                        0,
                      );
                  })(r)
                : e.shapeDataSet[r]
                  ? (function (e) {
                      var l, r, a;
                      const s = i.getBoxViewById(e.boxId),
                        c = o.getBoxViewById(e.boxId);
                      if (s && c) {
                        const i = s.el.cloneNode(!0),
                          o = h.extractTransform(
                            null !== (l = c.box.transform) && void 0 !== l
                              ? l
                              : [],
                          ),
                          d = s.box.absBounds.x - e.source.scrollOffsets.x,
                          g = s.box.absBounds.y - e.source.scrollOffsets.y,
                          f = c.box.absBounds.x - e.target.scrollOffsets.x,
                          m = c.box.absBounds.y - e.target.scrollOffsets.y;
                        (i.style.left = p.toCSSLength(d)),
                          (i.style.top = p.toCSSLength(g)),
                          (i.style.willChange = "transform, opacity"),
                          u.appendChild(i),
                          n.add(
                            {
                              targets: [i],
                              width: p.toCSSLength(c.box.bounds.width),
                              height: p.toCSSLength(c.box.bounds.height),
                              viewBox: [
                                `0 0 ${s.box.bounds.width} ${s.box.bounds.height}`,
                                `0 0 ${c.box.bounds.width} ${c.box.bounds.height}`,
                              ],
                              translateX: f - d,
                              translateY: m - g,
                              clip: [e.source.clipPath, e.target.clipPath],
                              skewX: o.skew.ax,
                              skewY: o.skew.ay,
                              opacity: [
                                null !== (r = s.box.opacity) && void 0 !== r
                                  ? r
                                  : 1,
                                null !== (a = c.box.opacity) && void 0 !== a
                                  ? a
                                  : 1,
                              ],
                              duration: t,
                            },
                            0,
                          );
                        const b = i.getElementsByClassName(
                          "pancake-view-shape-path",
                        )[0];
                        b &&
                          !s.box.rough &&
                          (b.removeAttribute("stroke-dasharray"),
                          n.add(
                            {
                              targets: [b],
                              d: c.box.shapePath,
                              stroke: [s.box.strokeColor, c.box.strokeColor],
                              fill: [s.box.fillColor, c.box.fillColor],
                              duration: t,
                            },
                            0,
                          ));
                      }
                      m(e.boxId), b(e.boxId);
                    })(e.shapeDataSet[r])
                  : e.imageDataSet[r]
                    ? (function (e) {
                        if (e.source) {
                          const o = i.getBoxViewById(e.boxId);
                          if (o) {
                            const i = o.el.cloneNode(!0);
                            u.appendChild(i);
                            const l = i.style;
                            (l.left = e.source.left),
                              (l.top = e.source.top),
                              (l.transformOrigin = "0 0"),
                              e.source.animeParams.forEach((e) => {
                                n.add(
                                  Object.assign({ targets: i, duration: t }, e),
                                  0,
                                );
                              });
                          }
                        }
                        if (e.target) {
                          const i = o.getBoxViewById(e.boxId);
                          if (i) {
                            const o = i.el.cloneNode(!0);
                            u.appendChild(o),
                              (o.style.left = e.target.left),
                              (o.style.top = e.target.top),
                              (o.style.transformOrigin = "0 0"),
                              e.target.animeParams.forEach((e) => {
                                n.add(
                                  Object.assign({ targets: o, duration: t }, e),
                                  0,
                                );
                              });
                          }
                        }
                        m(e.boxId), b(e.boxId);
                      })(e.imageDataSet[r])
                    : e.textDataSet[r]
                      ? (function (e) {
                          var i, o;
                          const l = { from: null, to: null };
                          (null === (i = e.source) || void 0 === i
                            ? void 0
                            : i.mask) &&
                            ((l.from = document.createElement("div")),
                            l.from.style.setProperty(
                              "mask-image",
                              e.source.mask,
                            ),
                            l.from.style.setProperty(
                              "-webkit-mask-image",
                              e.source.mask,
                            )),
                            (null === (o = e.target) || void 0 === o
                              ? void 0
                              : o.mask) &&
                              ((l.to = document.createElement("div")),
                              l.to.style.setProperty(
                                "mask-image",
                                e.target.mask,
                              ),
                              l.to.style.setProperty(
                                "-webkit-mask-image",
                                e.target.mask,
                              )),
                            e.magicMove.play(t, u, n, l),
                            m(e.boxId),
                            b(e.boxId);
                        })(e.textDataSet[r])
                      : e.unMoveDataSet.has(r)
                        ? (function (t) {
                            var e;
                            const n = i.getBoxViewById(t);
                            n && (n.el.style.opacity = "0");
                            const l = o.getBoxViewById(t);
                            l &&
                              (l.el.style.opacity = `${null !== (e = l.box.opacity) && void 0 !== e ? e : 1}`);
                          })(r)
                        : e.backgroundShapeDataSet[r]
                          ? (function (e, i) {
                              var l, r, a, d;
                              const u = o.getBoxViewById(e.targetBoxId);
                              if (i && u instanceof c.BackgroundShapeView) {
                                const o = i.el.cloneNode(!0);
                                s.appendChild(o);
                                const c = h.extractTransform(
                                    null !== (l = i.box.transform) &&
                                      void 0 !== l
                                      ? l
                                      : [],
                                  ),
                                  p = h.extractTransform(
                                    null !== (r = u.box.transform) &&
                                      void 0 !== r
                                      ? r
                                      : [],
                                  );
                                n.add(
                                  {
                                    targets: [o],
                                    translateX: [
                                      i.box.absBounds.x +
                                        c.translate.x -
                                        e.sourceBoxVisibleRect.x,
                                      u.box.absBounds.x +
                                        p.translate.x -
                                        e.targetBoxVisibleRect.x,
                                    ],
                                    translateY: [
                                      i.box.absBounds.y +
                                        c.translate.y -
                                        e.sourceBoxVisibleRect.y,
                                      u.box.absBounds.y +
                                        p.translate.y -
                                        e.targetBoxVisibleRect.y,
                                    ],
                                    rotate: [c.rotate, p.rotate],
                                    scaleX: p.scale.x,
                                    scaleY: p.scale.y,
                                    opacity: [
                                      null !== (a = i.box.opacity) &&
                                      void 0 !== a
                                        ? a
                                        : 1,
                                      null !== (d = u.box.opacity) &&
                                      void 0 !== d
                                        ? d
                                        : 1,
                                    ],
                                    stroke: [
                                      i.box.strokeColor,
                                      u.box.strokeColor,
                                    ],
                                    fill: [i.box.fillColor, u.box.fillColor],
                                    duration:
                                      "bouncing" === u.box.privilegedAnimation
                                        ? 1.5 * t
                                        : t,
                                  },
                                  0,
                                ),
                                  n.add(
                                    {
                                      targets: [o.children[0]],
                                      d: [
                                        {
                                          value:
                                            i.el.children[0].getAttribute("d"),
                                        },
                                        {
                                          value:
                                            u.el.children[0].getAttribute("d"),
                                        },
                                      ],
                                      duration:
                                        "bouncing" === u.box.privilegedAnimation
                                          ? 1.5 * t
                                          : t,
                                    },
                                    0,
                                  );
                              }
                              m(e.sourceBoxId), b(e.targetBoxId);
                            })(e.backgroundShapeDataSet[r], l)
                          : e.backgroundColorBrickDataSet.has(r) &&
                            (function (e, i, o) {
                              const l = i.el.cloneNode(!0);
                              ("foreground" === o.box.elevation
                                ? d
                                : a
                              ).appendChild(l);
                              const r = i.box.absBounds,
                                s = o.box.absBounds;
                              (l.style.left = r.x + "px"),
                                (l.style.top = r.y + "px"),
                                (l.style.transformOrigin = "0 0"),
                                n.add(
                                  {
                                    targets: [l],
                                    translateX: s.x - r.x,
                                    translateY: s.y - r.y,
                                    width: [r.width, s.width],
                                    height: [r.height, s.height],
                                    delay: 300,
                                    duration: 0.5 * t,
                                    easing: i.box.transitionEasing,
                                  },
                                  0,
                                ),
                                m(e),
                                b(e);
                            })(r, l, o.getBoxViewById(r));
            }),
              o.forEachBoxView((i) => {
                const l = i.box.id;
                e.showDataSet.has(l) &&
                  (function (e) {
                    const i = o.getBoxViewById(e);
                    if (i) {
                      const e = {
                        targets: i.el,
                        opacity: [0, i.el.style.opacity],
                        duration: 0.5 * t,
                      };
                      n.add(e, 0.5 * t);
                    }
                  })(l);
              }),
              setTimeout(function () {
                for (const t of f) t.style.visibility = "hidden";
                n.restart();
              }, 0),
              yield n.finished,
              g.forEach((t) => t()),
              null == r || r.removeChild(u),
              i.el.removeChild(a),
              i.el.removeChild(s),
              i.el.removeChild(d),
              o.el.appendChild(o.contentEl),
              o.el.insertBefore(o.backgroundEl, o.el.firstChild);
          });
        });
    },
    6512: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.TextMagicMove = void 0);
      const n = i(89054),
        o = i(56382);
      function l(t) {
        return new Array().concat(...t);
      }
      function r() {
        const t = document.createElement("div");
        return (
          (t.style.position = "absolute"),
          (t.style.opacity = "0"),
          (t.style.visibility = "0"),
          (t.style.width = "0"),
          (t.style.height = "0"),
          t
        );
      }
      function a(t, e) {
        if (t === e) return !0;
        const i = Math.abs(t - e);
        return (
          i < Number.EPSILON ||
          i <= Number.EPSILON * Math.min(Math.abs(t), Math.abs(e))
        );
      }
      class s {
        constructor(t) {
          let e;
          for (; t; ) {
            if (t.nodeType == Node.ELEMENT_NODE) {
              e = t;
              break;
            }
            t = t.parentNode;
          }
          if (e) {
            const e = getComputedStyle(t);
            (this.background = e.background),
              (this.color = e.color),
              (this.font = e.font),
              (this.opacity = e.opacity),
              (this.writingMode = e.writingMode);
          } else
            (this.background = ""),
              (this.color = "black"),
              (this.font = ""),
              (this.opacity = "1"),
              (this.writingMode = "horizontal-tb");
        }
      }
      class c {
        constructor(t, e) {
          (this.node = t), (this.contentRange = e), (this.style = new s(t));
        }
      }
      class d {
        constructor(t, e) {
          (this.from = t), (this.to = e);
        }
        toString() {
          let t = "";
          return (
            this.from
              ? (t += `(${this.from.range.location}, ${this.from.range.length})=>`)
              : (t += "(nil, nil)=>"),
            this.to
              ? (t += `(${this.to.range.location}, ${this.to.range.length})`)
              : (t += "(nil, nil)"),
            t
          );
        }
      }
      class u {
        constructor(t) {
          (this.content = ""),
            (this.charRects = []),
            (this.unitBreakIndices = new Set()),
            (this.zeroKerningIndices = new Set()),
            (this.nodeInfos = []),
            (this.nonVisibleRanges = []),
            (this.clippedRanges = []),
            (this.visibleRange = new n.IndexRange(-1, -1));
          const e = t.textEl;
          (this.clipRect = t.clipRect),
            (this.rootElBBox = t.rootEl.getBoundingClientRect()),
            (this.opacity = t.opacity),
            this.handleElement(e),
            this.computeValidRanges(),
            this.findUnitBreakIndices();
          const i = e.getBoundingClientRect(),
            o = new Range();
          o.setStartBefore(e), o.setEndAfter(e);
          const l = o.getBoundingClientRect();
          this.containerBBox = new DOMRect(
            Math.min(i.x, l.x),
            Math.min(i.y, l.y),
            Math.max(i.width, l.width),
            Math.max(i.height, l.height),
          );
        }
        static get kerningTestWrapper() {
          if (!u._kerningTestWrapper) {
            const t = r();
            (t.style.overflow = "hidden"),
              (t.style.whiteSpace = "nowrap"),
              (u._kerningTestWrapper = t),
              document.body.appendChild(t);
          }
          return u._kerningTestWrapper;
        }
        handleElement(t) {
          var e, i;
          let o = t.firstChild;
          for (; o && o != t.lastChild; )
            switch (o.nodeType) {
              case Node.TEXT_NODE: {
                const n = o.nextSibling;
                n && n.nodeType == Node.TEXT_NODE
                  ? ((o.textContent =
                      (null !== (e = o.textContent) && void 0 !== e ? e : "") +
                      (null !== (i = n.textContent) && void 0 !== i ? i : "")),
                    t.removeChild(n))
                  : (o = n);
                break;
              }
              default:
                o = o.nextSibling;
            }
          const l = Array.prototype.slice.call(t.childNodes, 0);
          for (const e of l)
            if (e.nodeType == Node.TEXT_NODE) {
              const i = e.textContent;
              if (!i) continue;
              const o = this.content.length;
              this.nodeInfos.push(
                new c(t, new n.IndexRange(o, o + i.length - 1)),
              ),
                (this.content += i);
              const l = new Range();
              for (let t = 0; t < i.length; ++t) {
                l.setStart(e, t), l.setEnd(e, t + 1);
                let i = Array.prototype.slice
                  .call(l.getClientRects())
                  .filter((t) => 0 != t.width && 0 != t.height)[0];
                i || (i = l.getBoundingClientRect()),
                  (i.x -= this.rootElBBox.x),
                  (i.y -= this.rootElBBox.y),
                  this.charRects.push(i);
              }
            } else if (e.nodeType == Node.ELEMENT_NODE) {
              "BR" == e.tagName
                ? this.unitBreakIndices.add(this.content.length)
                : this.handleElement(e);
              continue;
            }
        }
        findUnitBreakIndices() {
          for (const t of this.nodeInfos) {
            if (t.style.writingMode.startsWith("vertical"))
              for (
                let e = t.contentRange.start + 1;
                e <= t.contentRange.end;
                ++e
              ) {
                const t = this.charRects[e - 1],
                  i = this.charRects[e];
                Math.abs(t.x - i.x) > t.width / 2 &&
                  this.unitBreakIndices.add(e);
              }
            else
              for (
                let e = t.contentRange.start + 1;
                e <= t.contentRange.end;
                ++e
              ) {
                const t = this.charRects[e - 1],
                  i = this.charRects[e];
                Math.abs(t.y - i.y) > t.height / 2 &&
                  this.unitBreakIndices.add(e);
              }
            this.unitBreakIndices.add(t.contentRange.upperBound);
          }
          for (const t of this.nonVisibleRanges)
            this.unitBreakIndices.add(t.upperBound);
          for (const t of this.clippedRanges)
            this.unitBreakIndices.add(t.upperBound);
          this.unitBreakIndices.add(this.visibleRange.upperBound),
            this.unitBreakIndices.delete(0);
        }
        computeValidRanges() {
          const t = this.clipRect.top,
            e = this.clipRect.right,
            i = this.clipRect.bottom,
            o = this.clipRect.left;
          for (let l = 0; l < this.charRects.length; ++l) {
            const r = this.charRects[l];
            if (r.bottom <= t || r.top >= i || r.right <= o || r.left >= e) {
              let t = this.nonVisibleRanges[this.nonVisibleRanges.length - 1];
              t && t.upperBound === l
                ? (t._end = l)
                : ((t = new n.IndexRange(l, l)), this.nonVisibleRanges.push(t));
            } else {
              const a = 0.12 * r.width,
                s = 0.12 * r.height;
              if (
                r.top + s >= t &&
                r.bottom - s <= i &&
                r.left + a >= o &&
                r.right - a <= e
              )
                -1 === this.visibleRange.start &&
                  (this.visibleRange._start = l),
                  (this.visibleRange._end = l);
              else {
                let t = this.clippedRanges[this.clippedRanges.length - 1];
                t && t.upperBound == l
                  ? (t._end = l)
                  : ((t = new n.IndexRange(l, l)), this.clippedRanges.push(t));
              }
            }
          }
        }
        computeKerning(t) {
          var e;
          const i = u.kerningTestWrapper;
          (i.innerHTML = ""), (i.style.fontKerning = "");
          const n = [];
          for (; t.length > 0; ) {
            const e = t[0],
              o = this.nodeInfos.find((t) => t.contentRange.contains(e));
            let l,
              r = 1;
            o &&
              ((l = document.createElement("div")),
              (l.style.font = o.style.font),
              (l.style.writingMode = o.style.writingMode),
              i.appendChild(l),
              (r = t.findIndex((t) => t >= 0 && !o.contentRange.contains(t))),
              -1 === r && (r = t.length)),
              n.push({ nodeInfo: o, testEl: l, indices: t.splice(0, r) });
          }
          const o = [];
          for (const t of n)
            for (const i of t.indices)
              if (
                i <= 0 ||
                this.unitBreakIndices.has(i) ||
                this.zeroKerningIndices.has(i)
              )
                o.push(void 0);
              else {
                const n = document.createElement("div");
                (n.textContent = this.content.substr(i - 1, 2)),
                  null === (e = t.testEl) || void 0 === e || e.appendChild(n),
                  o.push(n);
              }
          const l = new Range();
          function r(t) {
            return (null == t ? void 0 : t.firstChild)
              ? (l.setStart(t.firstChild, 1),
                l.setEnd(t.firstChild, 2),
                l.getBoundingClientRect().width)
              : 0;
          }
          const a = o.map(r);
          i.style.fontKerning = "none";
          const s = o.map(r);
          return a.map((t, e) => t - s[e]);
        }
        computeUnitStates(t) {
          const e = this.computeKerning(t.map((t) => (t ? t.start : -1)));
          return t.map((t, i) => {
            if (!t) return;
            if (-1 === t.start || -1 === t.end) return;
            const n = Math.min(
                ...this.charRects.slice(t.start, t.end + 1).map((t) => t.x),
              ),
              o = this.charRects[t.start].y;
            let l = 0;
            for (let e = t.start; e <= t.end; ++e)
              l = Math.max(l, this.charRects[e].height);
            return {
              range: t,
              style: this.nodeInfos.find((e) =>
                e.contentRange.contains(t.start),
              ).style,
              x: n,
              y: o,
              lineHeight: l,
              kerning: e[i],
            };
          });
        }
        getVisibleState(t) {
          return this.visibleRange.contains(t.start)
            ? { visible: !0, clipped: !1 }
            : this.clippedRanges.find((e) => e.contains(t.start))
              ? { visible: !0, clipped: !0 }
              : { visible: !1, clipped: !1 };
        }
        get visibleContent() {
          return this.content.substr(
            this.visibleRange.location,
            this.visibleRange.length,
          );
        }
      }
      const p =
        /[^\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,\-./:;<=>?@[\]^_`{|}~\s]+/g;
      class h {
        constructor(t, e) {
          if (((this.units = []), null == e)) {
            const e = t;
            (this.fromInfo = e.fromInfo),
              (this.toInfo = e.toInfo),
              (this.units = e.units);
          } else
            (this.fromInfo = new u(t)),
              (this.toInfo = new u(e)),
              this.fromInfo.visibleRange.start ===
                this.toInfo.visibleRange.start &&
              this.fromInfo.visibleRange.end === this.toInfo.visibleRange.end &&
              this.fromInfo.content === this.toInfo.content
                ? this.createUnitIdentical()
                : this.createUnit();
        }
        serialize() {
          return {
            fromInfo: this.fromInfo,
            toInfo: this.toInfo,
            units: this.units,
          };
        }
        static deserialize(t) {
          return new h(t, null);
        }
        createUnitIdentical() {
          const t = Array.from(
              new Set([
                ...Array.from(this.fromInfo.unitBreakIndices),
                ...Array.from(this.toInfo.unitBreakIndices),
              ]),
            )
              .sort((t, e) => t - e)
              .reduce((t, e) => {
                const i = 0 == t.length ? 0 : t[t.length - 1].upperBound;
                return t.push(new n.IndexRange(i, e - 1)), t;
              }, new Array()),
            e = this.fromInfo.computeUnitStates(t),
            i = this.toInfo.computeUnitStates(t),
            o = [];
          for (let n = 0; n < t.length; ++n) {
            const l = t[n],
              r = this.fromInfo.getVisibleState(l),
              a = this.toInfo.getVisibleState(l);
            !r.visible || r.clipped || !a.visible || a.clipped
              ? (r.visible && o.push(new d(e[n], void 0)),
                a.visible && o.push(new d(void 0, i[n])))
              : o.push(new d(e[n], i[n]));
          }
          this.units = o;
        }
        printUnits(t) {
          let e = "";
          for (const i of t)
            i.from
              ? (e +=
                  this.fromInfo.content.substring(
                    i.from.range.location,
                    i.from.range.upperBound,
                  ) + `(${i.from.range})`)
              : (e += "nil"),
              (e += "=>"),
              i.to
                ? (e +=
                    this.toInfo.content.substring(
                      i.to.range.location,
                      i.to.range.upperBound,
                    ) + `(${i.to.range})`)
                : (e += "nil"),
              (e += "\n");
        }
        play(t, e, i, n) {
          var o, l;
          const s = [];
          let c = null,
            d = null;
          const u = this.fromInfo.clipRect,
            p = this.toInfo.clipRect,
            h = r();
          (h.style.whiteSpace = "nowrap"), document.body.appendChild(h);
          for (const e of this.units) {
            if (!e.from && !e.to) continue;
            let r = null,
              g = null;
            if (
              (e.from &&
                ((r = document.createElement("span")),
                (r.textContent = this.fromInfo.content.substring(
                  e.from.range.location,
                  e.from.range.upperBound,
                )),
                this.styleLayer(r, e.from, e.from.style),
                (r.style.textIndent = e.from.kerning + "px"),
                h.appendChild(r)),
              e.to &&
                ((g = document.createElement("span")),
                (g.textContent = this.toInfo.content.substring(
                  e.to.range.location,
                  e.to.range.upperBound,
                )),
                this.styleLayer(g, e.to, e.to.style),
                (g.style.textIndent = e.to.kerning + "px"),
                h.appendChild(g)),
              r && g)
            ) {
              const n = e.from.x,
                o = e.from.y,
                l = r.clientWidth,
                c = r.clientHeight,
                d = e.to.x,
                u = e.to.y,
                p = g.clientWidth,
                h = g.clientHeight;
              if (
                !(
                  a(l, p) &&
                  a(c, h) &&
                  e.from.style.font == e.to.style.font &&
                  a(e.from.lineHeight, e.to.lineHeight) &&
                  a(e.from.kerning, e.to.kerning) &&
                  r.textContent == g.textContent
                )
              )
                i.add(
                  {
                    targets: r,
                    translateX: [0, d - n],
                    translateY: [0, u - o],
                    scaleX: [1, p / l],
                    scaleY: [1, h / c],
                  },
                  0,
                ),
                  i.add(
                    {
                      targets: g,
                      translateX: [n - d, 0],
                      translateY: [o - u, 0],
                      scaleX: [l / p, 1],
                      scaleY: [c / h, 1],
                    },
                    0,
                  ),
                  i.add(
                    {
                      targets: r,
                      easing: "easeInQuart",
                      opacity: [this.fromInfo.opacity, 0],
                      duration: 0.12 * t,
                    },
                    300,
                  ),
                  i.add(
                    {
                      targets: g,
                      easing: "easeOutQuart",
                      opacity: [0, this.toInfo.opacity],
                      duration: 0.12 * t,
                    },
                    300,
                  ),
                  s.push(r),
                  s.push(g);
              else {
                const l = { targets: r, duration: t };
                let c = !1;
                a(d, n) || ((l.translateX = [0, d - n]), (c = !0)),
                  a(u, o) || ((l.translateY = [0, u - o]), (c = !0));
                const p =
                    this.fromInfo.opacity * parseFloat(e.from.style.opacity),
                  h = this.toInfo.opacity * parseFloat(e.to.style.opacity);
                a(p, h) ||
                  ((r.style.opacity = ""), (l.opacity = [p, h]), (c = !0)),
                  e.from.style.color != e.to.style.color &&
                    ((l.color = [e.from.style.color, e.to.style.color]),
                    (c = !0)),
                  e.from.style.background != e.to.style.background &&
                    ((l.background = [
                      e.from.style.background,
                      e.to.style.background,
                    ]),
                    (c = !0)),
                  c && i.add(l, 0),
                  s.push(r);
              }
            } else
              r
                ? (c ||
                    ((c =
                      null !== (o = null == n ? void 0 : n.from) && void 0 !== o
                        ? o
                        : document.createElement("div")),
                    (c.style.overflow = "hidden"),
                    (c.style.position = "absolute"),
                    (c.style.left = u.x + "px"),
                    (c.style.top = u.y + "px"),
                    (c.style.width = u.width + "px"),
                    (c.style.height = u.height + "px"),
                    s.unshift(c)),
                  (r.style.transform = `translate(${-u.x}px, ${-u.y}px)`),
                  c.appendChild(r),
                  i.add(
                    {
                      targets: r,
                      opacity: [this.fromInfo.opacity, 0],
                      duration: 0.5 * t,
                    },
                    0,
                  ))
                : g &&
                  (d ||
                    ((d =
                      null !== (l = null == n ? void 0 : n.to) && void 0 !== l
                        ? l
                        : document.createElement("div")),
                    (d.style.overflow = "hidden"),
                    (d.style.position = "absolute"),
                    (d.style.left = p.x + "px"),
                    (d.style.top = p.y + "px"),
                    (d.style.width = p.width + "px"),
                    (d.style.height = p.height + "px"),
                    s.unshift(d)),
                  (g.style.transform = `translate(${-p.x}px, ${-p.y}px)`),
                  (g.style.opacity = "0"),
                  d.appendChild(g),
                  i.add(
                    {
                      targets: g,
                      opacity: [0, this.toInfo.opacity],
                      duration: 0.5 * t,
                    },
                    0.5 * t,
                  ));
          }
          document.body.removeChild(h);
          for (const t of s) e.appendChild(t);
        }
        styleLayer(t, e, i) {
          (t.style.position = "absolute"),
            (t.style.left = e.x + "px"),
            (t.style.top = e.y + "px"),
            (t.style.font = i.font),
            (t.style.background = i.background),
            (t.style.color = i.color),
            (t.style.transformOrigin = "0 0"),
            (t.style.whiteSpace = "nowrap"),
            (t.style.lineHeight = e.lineHeight + "px"),
            (t.style.transform = "translateZ(0)"),
            (t.style.willChange = "transform, opacity");
        }
        computeWords(t) {
          const e = [],
            i = [0];
          t.replace(p, function (t, e) {
            return i.push(e), i.push(e + t.length), t;
          }),
            i.push(t.length);
          for (let l = 1; l < i.length; ++l) {
            let r = i[l - 1],
              a = i[l];
            for (; r < a; ) {
              const e = t.charAt(r);
              if (" " != e && "\t" != e && "\n" != e) break;
              r += 1;
            }
            for (; a > r; ) {
              const e = t.charAt(a - 1);
              if (" " != e && "\t" != e && "\n" != e) break;
              a -= 1;
            }
            a > r && e.push(new o.Word(new n.IndexRange(r, a - 1), t));
          }
          return e;
        }
        createUnit() {
          const t = this.computeWords(this.fromInfo.visibleContent),
            e = this.computeWords(this.toInfo.visibleContent),
            i = { inserted: [], deleted: [] };
          let o = this.performDiff(t, e, i);
          function r(t, e) {
            const i = t.length > 0 ? t[t.length - 1] : void 0;
            if (i) {
              let n = i.range.upperBound;
              for (; n < i.base.length; ) {
                const t = i.base[n];
                if (" " != t && "\t" != t && "\n" != t) break;
                ++n;
              }
              if (n === e.range.lowerBound)
                return (i.range._end = e.range._end), t;
            }
            return t.push(e), t;
          }
          o = o.concat(this.handleCJKChange(i));
          const a = l(i.deleted).reduce(r, new Array()),
            s = l(i.inserted).reduce(r, new Array());
          if (s.length > 0 && a.length > 0) {
            const t = s[0],
              e = a[0];
            let i = t.value,
              l = e.value;
            i.endsWith("...") && i.length > 3
              ? ((i = i.replace("...", "")),
                l.startsWith(i) &&
                  (o.push({
                    from: new n.IndexRange(
                      e.range.start,
                      e.range.start + i.length - 1,
                    ),
                    to: new n.IndexRange(
                      t.range.start,
                      t.range.start + i.length - 1,
                    ),
                  }),
                  (t.range._start += i.length),
                  (e.range._start += i.length)))
              : l.endsWith("...") &&
                l.length > 3 &&
                ((l = l.replace("...", "")),
                i.startsWith(l) &&
                  (o.push({
                    from: new n.IndexRange(
                      e.range.start,
                      e.range.start + l.length - 1,
                    ),
                    to: new n.IndexRange(
                      t.range.start,
                      t.range.start + l.length - 1,
                    ),
                  }),
                  (t.range._start += l.length),
                  (e.range._start += l.length)));
          }
          (o = o.concat(a.map((t) => ({ from: t.range, to: void 0 })))),
            (o = o.concat(s.map((t) => ({ to: t.range, from: void 0 })))),
            (o = o.map((t) => {
              const e = this.fromInfo.visibleRange.start,
                i = this.toInfo.visibleRange.start;
              return (
                t.from &&
                  (t.from = new n.IndexRange(t.from.start + e, t.from.end + e)),
                t.to && (t.to = new n.IndexRange(t.to.start + i, t.to.end + i)),
                t
              );
            })),
            (o = o.concat(
              this.fromInfo.clippedRanges.map((t) => ({ from: t, to: void 0 })),
            )),
            (o = o.concat(
              this.toInfo.clippedRanges.map((t) => ({ from: void 0, to: t })),
            )),
            (o = l(
              o.map((t) => {
                let e = [];
                const i = t.from;
                i &&
                  ((e = e.concat(
                    Array.from(this.fromInfo.unitBreakIndices)
                      .filter((t) => t > i.start && t <= i.end)
                      .map((t) => t - i.start),
                  )),
                  e.push(i.upperBound - i.start));
                const o = t.to;
                o &&
                  ((e = e.concat(
                    Array.from(this.toInfo.unitBreakIndices)
                      .filter((t) => t > o.start && t <= o.end)
                      .map((t) => t - o.start),
                  )),
                  e.push(o.upperBound - o.start)),
                  (e = e.sort((t, e) => t - e));
                const l = [];
                let r = 0;
                for (const t of e) {
                  if (t === r) continue;
                  const e = { from: void 0, to: void 0 };
                  i &&
                    (e.from = new n.IndexRange(i.start + r, i.start + t - 1)),
                    o &&
                      (e.to = new n.IndexRange(o.start + r, o.start + t - 1)),
                    l.push(e),
                    (r = t);
                }
                return l;
              }),
            )),
            (o = o.sort((t, e) =>
              t.from && e.from
                ? t.from.start - e.from.start
                : t.to && e.to
                  ? t.to.start - e.to.start
                  : 0,
            ));
          const c = this.fromInfo.computeUnitStates(o.map((t) => t.from)),
            u = this.toInfo.computeUnitStates(o.map((t) => t.to));
          this.units = c.map((t, e) => new d(t, u[e]));
        }
        performDiff(t, e, i) {
          return o.diff(t, e).reduce(function (n, o) {
            if (o.oldIndex < 0 && o.newIndex < 0) return n;
            if (o.oldIndex < 0) {
              const t = e.slice(o.newIndex, o.newIndex + o.length);
              return i.inserted.push(t), n;
            }
            if (o.newIndex < 0) {
              const e = t.slice(o.oldIndex, o.oldIndex + o.length);
              return i.deleted.push(e), n;
            }
            let l = t[o.oldIndex].range,
              r = e[o.newIndex].range;
            for (let i = 0; i < o.length; ++i) {
              const a = t[o.oldIndex + i].range,
                s = e[o.newIndex + i].range;
              a.upperBound - l.location != s.upperBound - r.location
                ? (n.push({ from: l, to: r }), (l = a), (r = s))
                : ((l._end = a.upperBound - 1), (r._end = s.upperBound - 1));
            }
            return n.push({ from: l, to: r }), n;
          }, new Array());
        }
        hasCJKChar(t) {
          return !!t.match(h.cjkRegex);
        }
        handleCJKChange(t) {
          let e = !1;
          const i = (t) => {
              if (this.hasCJKChar(t.value)) {
                e = e || t.range.length > 1;
                const i = [];
                for (let e = 0; e < t.range.length; ++e)
                  i.push(
                    new o.Word(
                      new n.IndexRange(
                        t.range.lowerBound + e,
                        t.range.lowerBound + e,
                      ),
                      t.base,
                    ),
                  );
                return i;
              }
              return [t];
            },
            r = l(l(t.deleted).map(i)),
            a = l(l(t.inserted).map(i));
          if (!e) return [];
          const s = { inserted: [], deleted: [] },
            c = this.performDiff(r, a, s);
          return (t.deleted = s.deleted), (t.inserted = s.inserted), c;
        }
      }
      (e.TextMagicMove = h),
        (h.cjkRegex =
          /[\u4E00-\u9FFF\u3400-\u4DBF\u3040-\u30ff\uf900-\ufaff\uff66-\uff9f]/);
    },
    6168: function (t, e) {
      "use strict";
      var i =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.performNoTransitionEffect = e.computeNoTransitionEffect = void 0),
        (e.computeNoTransitionEffect = function () {
          return { effect: "none" };
        }),
        (e.performNoTransitionEffect = function () {
          return i(this, void 0, void 0, function* () {
            return Promise.resolve();
          });
        });
    },
    53399: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.mapValues = e.rangedIntegers = e.findClosestMatch = void 0),
        (e.findClosestMatch = function (t, e) {
          let i = null,
            n = t(!0);
          for (; null !== n; ) {
            const o = e(n);
            o && (i = n), (n = t(!o));
          }
          return i;
        }),
        (e.rangedIntegers = function (t, e) {
          const i = t < e,
            n = i ? Math.floor : Math.ceil;
          let o = null;
          return (l) => {
            if (null === o) return (o = t), t;
            if (l) {
              if (((t = o + (i ? 1 : -1)), i ? o >= e : o <= e)) return null;
            } else if (((e = o + (i ? -1 : 1)), i ? o <= t : o >= t))
              return null;
            return (o = n((t + e) / 2)), o;
          };
        }),
        (e.mapValues = function (t, e) {
          return (i) => {
            const n = t(i);
            return null === n ? null : e(n);
          };
        });
    },
    97857: (t, e) => {
      "use strict";
      function i(t, e) {
        return "none" === e
          ? t
          : e.reduce(
              (t, e) =>
                "translate" in e
                  ? n(t, e.translate)
                  : "scale" in e
                    ? o(t, e.scale)
                    : "rotate" in e
                      ? r(t, e.rotate)
                      : l(t, e.skew),
              t,
            );
      }
      function n({ x: t, y: e }, i) {
        return { x: t + i.x, y: e + i.y };
      }
      function o({ x: t, y: e }, i) {
        return {
          x: t * ("number" == typeof i ? i : i.x),
          y: e * ("number" == typeof i ? i : i.y),
        };
      }
      function l(t, e) {
        return t;
      }
      function r(t, e) {
        return t;
      }
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.intersectRect =
          e.intersectDOMRect =
          e.extractTransform =
          e.invertTransform =
          e.scaleSize =
          e.transformRect =
          e.rotatePoint =
          e.skewPoint =
          e.scalePoint =
          e.translatePoint =
          e.transformPoint =
          e.calc =
          e.zeroInsets =
          e.zeroSize =
          e.zeroPoint =
          e.zeroRect =
          e.isPointInRect =
            void 0),
        (e.isPointInRect = function (t, e) {
          return (
            e.x <= t.x &&
            e.y <= t.y &&
            e.x + e.width >= t.x &&
            e.y + e.height >= t.y
          );
        }),
        (e.zeroRect = function () {
          return { x: 0, y: 0, width: 0, height: 0 };
        }),
        (e.zeroPoint = function () {
          return { x: 0, y: 0 };
        }),
        (e.zeroSize = function () {
          return { width: 0, height: 0 };
        }),
        (e.zeroInsets = function () {
          return { left: 0, top: 0, right: 0, bottom: 0 };
        }),
        (e.calc = function (t, e, i) {
          switch (e) {
            case "vh":
              return i.height * t;
            case "vw":
              return i.width * t;
            case "vmax":
              return Math.max(i.width, i.height) * t;
            case "vmin":
              return Math.min(i.width, i.height) * t;
          }
        }),
        (e.transformPoint = i),
        (e.translatePoint = n),
        (e.scalePoint = o),
        (e.skewPoint = l),
        (e.rotatePoint = r),
        (e.transformRect = function (t, e) {
          if ("none" === e) return t;
          const n = i(t, e),
            o = i({ x: t.x + t.width, y: t.y + t.height }, e);
          return {
            x: Math.min(n.x, o.x),
            y: Math.min(n.y, o.y),
            width: Math.abs(o.x - n.x),
            height: Math.abs(o.y - n.y),
          };
        }),
        (e.scaleSize = function ({ width: t, height: e }, i) {
          return { width: t * i.x, height: e * i.y };
        }),
        (e.invertTransform = function (t) {
          return "none" === t
            ? "none"
            : t
                .map((t) => {
                  if ("translate" in t)
                    return {
                      translate: { x: -t.translate.x, y: -t.translate.y },
                    };
                  if ("scale" in t) {
                    return {
                      scale: {
                        x:
                          1 /
                          ("number" == typeof t.scale ? t.scale : t.scale.x),
                        y:
                          1 /
                          ("number" == typeof t.scale ? t.scale : t.scale.y),
                      },
                    };
                  }
                  return "rotate" in t
                    ? { rotate: -t.rotate }
                    : { skew: { ax: -t.skew.ax, ay: -t.skew.ay } };
                })
                .reverse();
        }),
        (e.extractTransform = function (t) {
          const e = {
            translate: { x: 0, y: 0 },
            scale: { x: 1, y: 1 },
            rotate: 0,
            skew: { ax: 0, ay: 0 },
          };
          return (
            "none" !== t &&
              t.forEach((t) => {
                if (
                  ("translate" in t &&
                    (e.translate = { x: t.translate.x, y: t.translate.y }),
                  "scale" in t)
                ) {
                  const i = "number" == typeof t.scale ? t.scale : t.scale.x,
                    n = "number" == typeof t.scale ? t.scale : t.scale.y;
                  e.scale = { x: i, y: n };
                }
                "rotate" in t && (e.rotate = t.rotate),
                  "skew" in t && (e.skew = { ax: t.skew.ax, ay: t.skew.ay });
              }),
            e
          );
        }),
        (e.intersectDOMRect = function (t, e) {
          return !(
            e.left > t.right ||
            e.right < t.left ||
            e.top > t.bottom ||
            e.bottom < t.top
          );
        }),
        (e.intersectRect = function (t, e) {
          return (
            !(!t || !e) &&
            !(
              e.x > t.x + t.width ||
              e.x + t.width < t.x ||
              e.y > t.y + t.height ||
              e.y + e.height < t.y
            )
          );
        });
    },
    86706: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateBraceListSlide =
          e.layoutBraceListSlide =
          e.computeBraceListLayoutVariant =
          e.isBraceListLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = i(14594),
        a = i(53399),
        s = i(51116),
        c = i(12851),
        d = i(35561),
        u = i(41432),
        p = i(90189),
        h = i(89391),
        g = i(7381),
        f = i(68605),
        m = i(55287),
        b = i(29744),
        v = i(14065),
        x = i(52614),
        y = i(28850),
        S = i(30207),
        w = "brace-list";
      function C(t, e, i, r, a, s = {}) {
        var c;
        const d = null !== (c = s.additionalRoles) && void 0 !== c ? c : [],
          u = `M 0 ${a / 2} L ${r} ${a / 2}`,
          p = {
            id: n.indicatorOfTopic(t),
            roles: ["indicator", ...d],
            bounds: { x: 0, y: 0, width: r, height: a },
            absBounds: o.zeroRect(),
            contentType: "shape",
            shapePath: u,
          };
        return l.initializeBoxStyle(p, e, i, { layout: w }), p;
      }
      (e.isBraceListLayoutEligibleFor = function (t) {
        return "list" === t;
      }),
        (e.computeBraceListLayoutVariant = function (t, e) {
          return S.hasImageableTopic(e) && !S.hasImageableSubtopics(e)
            ? 1 === e.subtopics.length
              ? "only-child-imageable-parent"
              : "imageable-parent-slide"
            : !S.hasImageableTopic(e) && S.hasImageableSubtopics(e)
              ? 1 === e.subtopics.length
                ? "only-imageable-child"
                : "imageable-children-slide"
              : S.hasImageableTopic(e) && S.hasImageableSubtopics(e)
                ? "imageable-list-slide"
                : 1 === e.subtopics.length
                  ? "only-child"
                  : t.width < t.height
                    ? "tree-chart"
                    : "brace-list";
        }),
        (e.layoutBraceListSlide = function (t, e, i = {}) {
          var h;
          const { topic: g, subtopics: y, headerTopic: S, topicLevel: T } = e,
            L =
              null !== (h = null == i ? void 0 : i.theme) && void 0 !== h
                ? h
                : l.defaultTheme,
            B = l.appearanceOf(L),
            M = l.dimensionOf(L, { width: t.width, height: t.height });
          l.initializeSlideStyle(t, M, B, { layout: w });
          const k = l.calcLength(M.hSlidePadding, t),
            F = l.calcLength(M.vSlidePadding, t),
            P = t.width - k - k,
            I = P * M.braceListSlideParentTopicZoneWidthRatio,
            O = t.height - F - F,
            _ = Math.round(
              l.calcLength(M.braceListSlideParentTopicMaxFontSize, t),
            ),
            z = Math.round(
              l.calcLength(M.braceListSlideParentTopicMinFontSize, t),
            ),
            E = l.calcLength(M.hPaddingXSmall, t),
            A = M.braceListSlideParentTopicMaxLineCount,
            W = M.braceListSlideParentTopicPreferredLineCount,
            R = l.calcLength(M.braceListSlideParentTopicRightPadding, t),
            V = l.calcLength(M.vPaddingXXSmall, t),
            H = l.calcLength({ pct: 2, unit: "vmin" }, t),
            D = l.calcLength(M.hPaddingSmall, t),
            $ = l.calcLength(M.braceListSlideBraceShapeGroupMaxWidth, t),
            j = t.height,
            G = l.calcLength(M.braceListSlideBraceShapeLineWidth, t),
            Z = {
              left: l.calcLength(M.braceListSlideSubtopicListLeftPadding, t),
              top: F,
              right: l.calcLength(M.braceListSlideSubtopicListRightPadding, t),
              bottom: F,
            },
            q = P - I - R - $,
            N =
              "underline" === t.braceSubtopicIndicatorShapeStyle
                ? q
                : l.calcLength(M.braceListSlideSubtopicMinWidth, t),
            X = t.height,
            Q = Math.round(
              l.calcLength(M.braceListSlideSubtopicMaxFontSize, t),
            ),
            J = Math.round(
              l.calcLength(M.braceListSlideSubtopicMinFontSize, t),
            ),
            U = l.calcLength(M.hPaddingXSmall, t),
            Y = l.calcLength(M.braceListSlideScrollFaderHeight, t),
            K =
              "centralTopic" === T
                ? M.braceListSlideCentralTopicPreferredSingleLineSubtopicsCount
                : M.braceListSlidePreferredSingleLineSubtopicsCount,
            tt = l.calcLength(M.hPaddingSmall, t),
            et =
              (X -
                Z.top -
                Z.bottom -
                K * Q * parseFloat(b.computeTextLineHeight(Q))) /
              (K - 1),
            it = (function (t, e, i, n, o) {
              var l;
              const {
                maxFontSize: s,
                minFontSize: d,
                markerRightMargin: h,
                traillingIconLeftMargin: g,
                maxWidth: b,
                maxLineCount: v,
                preferredLineCount: x,
              } = o;
              function y(t) {
                return t.textMeasurement.width <= b;
              }
              function S(t) {
                return t.textMeasurement.lineCount <= x;
              }
              function C(t) {
                return t.textMeasurement.lineCount <= v;
              }
              const T = null !== (l = t.markers) && void 0 !== l ? l : [],
                L = T.slice(0, i.maxMarkerCount),
                B = m.computePlaceholder(t);
              function M(i, o, l) {
                var r;
                return p.computeTopicTitleGroup(
                  e,
                  n,
                  w,
                  t.id,
                  t.title,
                  i,
                  null !== (r = t.hyperlink) && void 0 !== r ? r : null,
                  L,
                  {
                    maxWidth: b,
                    fontSize: o,
                    markerRightMargin: h,
                    traillingIconLeftMargin: g,
                    overflowWrap: l,
                    textRoles: ["title"],
                    requestForHit: { kind: "fastBackward" },
                    placeholder: B,
                    disallowShortTrailingLine: !0,
                  },
                );
              }
              const k = u.computeTopicTitle(t);
              let F = k,
                P = s,
                I = "normal",
                O = M(F, P, I);
              if (y(O) && S(O) && !O.textMeasurement.hasShortTrailingLine)
                return Object.assign(Object.assign({}, O), {
                  contentFeatures: f.computeContentFeaturesForTitleGroup(
                    O,
                    t.id,
                    k,
                    T,
                  ),
                });
              if (((P = d), (O = M(F, P, I)), y(O))) {
                if (S(O)) {
                  const t = a.rangedIntegers(s, d),
                    e = a.mapValues(t, (t) => ({
                      fontSize: t,
                      group: M(F, t, I),
                    })),
                    i = a.findClosestMatch(e, ({ group: t }) => y(t) && S(t));
                  if (!i)
                    throw new Error(
                      "Unable to find the best font size for parent topic of brace list slide",
                    );
                  (P = i.fontSize), (O = i.group);
                }
              } else {
                I = "break-word";
                const t = a.rangedIntegers(s, d),
                  e = a.mapValues(t, (t) => ({
                    fontSize: t,
                    group: M(F, t, I),
                  })),
                  i = a.findClosestMatch(e, ({ group: t }) => S(t));
                i
                  ? ((P = i.fontSize), (O = i.group))
                  : ((P = d), (O = M(F, P, I)));
              }
              if (!C(O)) {
                const t = a.rangedIntegers(F.length - 1, 1),
                  e = a.mapValues(t, (t) => c.getTruncatedText(F, t)),
                  i = a.mapValues(e, (t) => ({ text: t, group: M(t, P, I) })),
                  n = a.findClosestMatch(i, ({ group: t }) => C(t));
                n
                  ? ((F = n.text), (O = n.group))
                  : ((F = c.getTruncatedText(F, 1)), (O = M(F, P, I)));
              }
              if (
                O.textMeasurement.hasShortTrailingLine &&
                !(O.textBox.text.length < k.length)
              ) {
                const { lineCount: t, fontSize: e } = O.textMeasurement,
                  i = M(
                    O.textBox.text,
                    e * r.defaultFontSizeScaleRatioToEliminateShortTrailingLine,
                    I,
                  );
                i.textMeasurement.lineCount < t && (O = i);
              }
              return Object.assign(Object.assign({}, O), {
                contentFeatures: f.computeContentFeaturesForTitleGroup(
                  O,
                  t.id,
                  k,
                  T,
                ),
              });
            })(g, t, M, B, {
              maxFontSize: _,
              minFontSize: z,
              markerRightMargin: E,
              traillingIconLeftMargin: tt,
              maxWidth: I,
              maxLineCount: A,
              preferredLineCount: W,
            }),
            nt = (function (t, e, i, r, s, d) {
              const {
                paddings: h,
                minWidth: g,
                maxWidth: b,
                maxHeight: x,
                maxFontSize: y,
                minFontSize: S,
                preferredLineCount: T,
                maxLineCount: L,
                markerRightMargin: B,
                traillingIconLeftMargin: M,
                minSpacing: k,
                scrollFaderSize: F,
              } = d;
              function P(t) {
                return t.groupBox.bounds.height <= x;
              }
              function I(t) {
                return t.subtopicGroups.every(O);
              }
              function O(t) {
                return t.textMeasurement.lineCount <= T;
              }
              function _(t) {
                return t.textMeasurement.lineCount <= L;
              }
              const z = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: u.computeTopicTitle(t),
                  hyperLink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: m.computePlaceholder(t),
                };
              });
              function E(e) {
                let d = h.top,
                  u = 0,
                  m = 0,
                  y = 0;
                const S = [],
                  C = z.map(
                    ({
                      topicId: t,
                      title: n,
                      text: o,
                      hyperLink: l,
                      markers: g,
                      placeholder: v,
                    }) => {
                      var x;
                      const C = g.slice(0, r.maxMarkerCount),
                        T = b - h.left - h.right;
                      function L(o) {
                        return p.computeTopicTitleGroup(
                          i,
                          s,
                          w,
                          t,
                          n,
                          o,
                          l,
                          C,
                          {
                            maxWidth: T,
                            fontSize: e,
                            markerRightMargin: B,
                            traillingIconLeftMargin: M,
                            textRoles: ["subtopic"],
                            requestForHit: {
                              kind: "present",
                              topicId: t,
                              viaIntro: !0,
                            },
                            placeholder: v,
                          },
                        );
                      }
                      let F = L(o);
                      if (!_(F)) {
                        const t = a.rangedIntegers(o.length - 1, 1),
                          e = a.mapValues(t, (t) => c.getTruncatedText(o, t)),
                          i = a.mapValues(e, (t) => L(t));
                        F =
                          null !== (x = a.findClosestMatch(i, O)) &&
                          void 0 !== x
                            ? x
                            : L(c.getTruncatedText(o, 1));
                      }
                      const P = F.groupBox.bounds;
                      return (
                        (P.x = h.left),
                        (P.y = d),
                        (d += P.height + k),
                        (u = Math.max(u, P.width)),
                        m > 0 && (m += k),
                        (m += P.height),
                        (y += P.height),
                        S.push(
                          ...f.computeContentFeaturesForTitleGroup(F, t, o, g),
                        ),
                        F
                      );
                    },
                  );
                (u += h.left + h.right), (m += h.top + h.bottom);
                const T = Math.min(Math.max(u, g), b),
                  L = {
                    id: n.subtopicListGroupOfTopic(t),
                    roles: ["subtopicListGroup"],
                    bounds: { x: 0, y: 0, width: T, height: Math.min(m, x) },
                    absBounds: o.zeroRect(),
                    contentType: "group",
                    children: C.map((t) => t.groupBox),
                    contentWidth: T,
                    contentHeight: m,
                    overflow: m > x ? "scroll" : "hidden",
                    scrollFaderSize: F,
                    bottomScrollFaderOffset: v.computeBottomMaskOffset(i, F),
                  };
                return (
                  l.initializeBoxStyle(L, i, s, { layout: w }),
                  {
                    groupBox: L,
                    subtopicGroups: C,
                    subtopicTotalHeight: y,
                    contentFeatures: S,
                  }
                );
              }
              let A, W;
              const R = a.rangedIntegers(y, S),
                V = a.mapValues(R, (t) => ({ fontSize: t, group: E(t) })),
                H = a.findClosestMatch(V, ({ group: t }) => I(t));
              H ? ((A = H.fontSize), (W = H.group)) : ((A = S), (W = E(A)));
              if (!P(W) && A > S) {
                const t = a.rangedIntegers(A, S),
                  e = a.mapValues(t, (t) => ({ fontSize: t, group: E(t) })),
                  i = a.findClosestMatch(e, ({ group: t }) => P(t));
                i ? ((A = i.fontSize), (W = i.group)) : ((A = y), (W = E(A)));
              }
              if (W.groupBox.bounds.height < x && e.length > 1) {
                const t = Math.max(
                  k,
                  2 === e.length
                    ? (x - h.top - h.bottom - W.subtopicTotalHeight) / 3
                    : (x - h.top - h.bottom - W.subtopicTotalHeight) /
                        (e.length - 1),
                );
                if (t !== k) {
                  let e = h.top,
                    i = 0;
                  for (const n of W.subtopicGroups) {
                    const o = n.groupBox.bounds;
                    (o.y = e),
                      (e += o.height + t),
                      i > 0 && (i += t),
                      (i += o.height);
                  }
                  (i += h.top + h.bottom),
                    (W.groupBox.contentHeight = i),
                    (W.groupBox.bounds.height = Math.min(i, x));
                }
              }
              if ("leading-line" === i.braceSubtopicIndicatorShapeStyle) {
                const t = [];
                z.forEach((e, n) => {
                  const o = W.subtopicGroups[n].groupBox,
                    l = 0.375 * h.left,
                    r = C(e.topicId, i, s, l, o.bounds.height);
                  (r.bounds.x = 0.125 * h.left),
                    (r.bounds.y = o.bounds.y),
                    t.push(r);
                }),
                  W.groupBox.children.push(...t);
              }
              if ("underline" === i.braceSubtopicIndicatorShapeStyle) {
                const t = [];
                z.slice(0, -1).forEach((e, n) => {
                  const o = W.subtopicGroups[n].groupBox,
                    l = b,
                    r = C(e.topicId, i, s, l, k);
                  (r.bounds.x = o.bounds.x),
                    (r.bounds.y = o.bounds.y + o.bounds.height),
                    t.push(r);
                }),
                  W.groupBox.children.push(...t);
              }
              return W;
            })(g.id, y, t, M, B, {
              paddings: Z,
              minWidth: N,
              maxWidth: q,
              maxHeight: X,
              maxFontSize: Q,
              minFontSize: J,
              markerRightMargin: U,
              traillingIconLeftMargin: tt,
              preferredLineCount: 2,
              maxLineCount: 3,
              minSpacing: et,
              scrollFaderSize: Y,
            }),
            ot = x.computeBraceCurveShapeGroup(g.id, t, B, {
              width: $,
              height: nt.groupBox.bounds.height - Z.top - Z.bottom,
              leftPadding: D,
              verticalPadding:
                nt.subtopicGroups[0].textMeasurement.lineHeight / 2,
              braceLineWidth: G,
            }),
            lt = x.computeParentIndicatorShape(g.id, t, B, {
              width: it.groupBox.bounds.width,
              height: H,
            });
          let rt = k;
          if (ot.groupBox) {
            nt.groupBox.scrollPageLength =
              ot.groupBox.bounds.height -
              (nt.groupBox.children.length > 0
                ? nt.groupBox.children[0].bounds.height
                : 0);
            const t = k + (P - (I + R + $ + nt.groupBox.bounds.width)) / 2,
              e = k + P / 2 - $ - I - R;
            rt = Math.min(t, e);
          }
          const at = rt,
            st = at + I + R,
            ct = st + $,
            dt = F;
          (it.groupBox.bounds.x = at + (I - it.groupBox.bounds.width) / 2),
            (it.groupBox.bounds.y = dt + (O - it.groupBox.bounds.height) / 2),
            (nt.groupBox.bounds.x = ct),
            (nt.groupBox.bounds.y = 0 + (X - nt.groupBox.bounds.height) / 2),
            ot.groupBox &&
              ((ot.groupBox.bounds.x = st),
              (ot.groupBox.bounds.y = 0 + (j - ot.groupBox.bounds.height) / 2)),
            lt &&
              ((lt.bounds.x = it.groupBox.bounds.x),
              (lt.bounds.y =
                it.groupBox.bounds.y + it.groupBox.bounds.height + V)),
            t.boxes.push(it.groupBox),
            t.boxes.push(nt.groupBox),
            ot.groupBox && t.boxes.push(ot.groupBox),
            lt && t.boxes.push(lt),
            S && d.addHeaderBoxes(t, S, M, B, w),
            s.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(
              t,
              ...it.contentFeatures,
              ...nt.contentFeatures,
            );
        }),
        (e.generateBraceListSlide = function (t, e, i, o = {}) {
          var l;
          const { subtopics: r } = e,
            {
              numberOfVisibleTopics: a = 0,
              numberOfVisitedTopics: s = 0,
              inSlideScroll: c = !1,
            } = o,
            d = Object.assign({}, t);
          r.forEach(({ id: t }, e) => {
            e > a &&
              (h.computePendingBoxStates(d, n.titleOfTopic(t)),
              h.computePendingBoxStates(d, n.indicatorOfTopic(t)));
          });
          const u = n.assertBox(
            n.getBoxById(
              d.boxes,
              n.subtopicListGroupOfTopic(d.topicId),
              "group",
            ),
          );
          c && u.contentHeight > u.bounds.height && n.addMultistepBox(d, u.id);
          const p = a !== r.length ? a : s;
          g.computeSubtopicListScrollingStates(
            d,
            n.subtopicListGroupOfTopic(d.topicId),
            n.titleOfTopic(r[p].id),
            (t, e) => e.bounds.height / 2 - t.bounds.height / 2,
          ),
            y.addBackgroundBoxes(d, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0 } = i,
                r = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                });
              if ("background-shape" === (null == r ? void 0 : r.contentType)) {
                const e = n.getBoxById(
                    t.boxes,
                    n.topCurlyBraceOfTopic(t.topicId),
                    "shape",
                  ),
                  i = n.getBoxById(
                    t.boxes,
                    n.bottomCurlyBraceOfTopic(t.topicId),
                    "shape",
                  );
                e &&
                  i &&
                  ((e.strokeColor = r.fillColor),
                  (i.strokeColor = r.fillColor));
              }
              const a = n.filterBoxes(t.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              });
              o.forEach(({ id: e }, i) => {
                var o;
                const s =
                  null == a
                    ? void 0
                    : a.find(
                        (t) =>
                          "background-shape" === t.contentType &&
                          -1 !== t.id.indexOf(e),
                      );
                s && (s.opacity = i <= l ? 1 : 0);
                const c = n.getBoxById(t.boxes, n.indicatorOfTopic(e), "shape");
                c &&
                  (c.strokeColor =
                    null !== (o = null == s ? void 0 : s.fillColor) &&
                    void 0 !== o
                      ? o
                      : "background-shape" ===
                          (null == r ? void 0 : r.contentType)
                        ? r.fillColor
                        : c.strokeColor);
              });
            })(d, e, o);
          let f = null,
            m = null,
            b = null;
          if (a < r.length) {
            const t = r[a].id;
            (f = n.assertBox(n.getBoxById(d.boxes, n.titleOfTopic(t)))),
              (m = n.getBoxById(d.boxes, n.indicatorOfTopic(t)));
            const e = n.filterBoxes(d.boxes, (t) => {
              var e;
              return (
                "background-shape" === t.contentType &&
                "subtopic" ===
                  (null === (e = t.relativePosition) || void 0 === e
                    ? void 0
                    : e.referenceBoxRole)
              );
            });
            b =
              null !==
                (l =
                  null == e
                    ? void 0
                    : e.find(
                        (e) =>
                          "background-shape" === e.contentType &&
                          -1 !== e.id.indexOf(t),
                      )) && void 0 !== l
                ? l
                : null;
          }
          return (
            (function (
              t,
              e,
              { titleBox: i, curlyBraceIndicatorBox: o, shapeRefSubtopic: l },
            ) {
              var r, a;
              const s = n.assertBox(
                  n.getBoxById(t.boxes, n.subtopicListGroupOfTopic(t.topicId)),
                ),
                c = n.getBoxById(t.boxes, n.topCurlyBraceOfTopic(t.topicId)),
                d = n.getBoxById(t.boxes, n.bottomCurlyBraceOfTopic(t.topicId)),
                u = n.getBoxById(t.boxes, n.primaryIndicatorOfTopic(t.topicId)),
                p = [],
                h = [];
              if (
                null === (r = t.aliases) || void 0 === r
                  ? void 0
                  : r.some(
                      (e) =>
                        "listOfTopic" === e.kind &&
                        e.topicId === t.topicId &&
                        0 === e.index,
                    )
              ) {
                if (
                  (p.push({ id: s.id, opacity: 0 }),
                  h.push({
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: s.id, opacity: 1 }] },
                  }),
                  u &&
                    (p.push({ id: u.id, opacity: 0, strokeOffset: 1 }),
                    h.push(
                      {
                        on: "postTransition",
                        groups: ["curlyBracesVisible"],
                        durationMultiplier: 0,
                        delayMultiplier: 0.5,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: u.id, opacity: 1 }] },
                      },
                      {
                        after: "curlyBracesVisible",
                        groups: ["curlyBracesReady"],
                        durationMultiplier: 1,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: u.id, strokeOffset: 0 }] },
                      },
                    )),
                  c &&
                    d &&
                    (p.push(
                      { id: c.id, opacity: 0, strokeOffset: 1 },
                      { id: d.id, opacity: 0, strokeOffset: 1 },
                    ),
                    h.push(
                      {
                        on: "postTransition",
                        groups: ["curlyBracesVisible"],
                        durationMultiplier: 0,
                        delayMultiplier: 0.5,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [
                            { id: c.id, opacity: 1 },
                            { id: d.id, opacity: 1 },
                          ],
                        },
                      },
                      {
                        after: "curlyBracesVisible",
                        groups: ["curlyBracesReady"],
                        durationMultiplier: 1,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [
                            { id: c.id, strokeOffset: 0 },
                            { id: d.id, strokeOffset: 0 },
                          ],
                        },
                      },
                    )),
                  i && o)
                ) {
                  const e = i.bounds.y + i.bounds.height / 2 < o.bounds.y,
                    r = [
                      { id: o.id, strokeOffset: 1, opacity: 0 },
                      { id: i.id, opacity: 0 },
                    ];
                  l && r.push({ id: l.id, opacity: 0 }),
                    n.addSlideAdditionalEnteringStates(t, [
                      {
                        state: { boxes: r },
                        when: {
                          request: "forward",
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                    ]),
                    h.push(
                      {
                        after: "curlyBracesReady",
                        durationMultiplier: 1,
                        delayMultiplier: e ? 1 : 0,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: o.id, strokeOffset: 0 }] },
                        when: {
                          request: "forward",
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                      {
                        after: "curlyBracesReady",
                        durationMultiplier: 1,
                        delayMultiplier: e ? 1 : 0,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: o.id, opacity: 1 }] },
                        when: {
                          request: "forward",
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                      {
                        after: "curlyBracesReady",
                        durationMultiplier: 1,
                        delayMultiplier: e ? 0 : 1,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                        when: {
                          request: "forward",
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                    ),
                    l &&
                      h.push({
                        after: "curlyBracesReady",
                        durationMultiplier: 1,
                        delayMultiplier: e ? 0 : 1,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                        when: {
                          request: "forward",
                          sourceSlideTopicId: t.topicId,
                        },
                      });
                }
              } else if (i && o) {
                const r = i.bounds.y + i.bounds.height / 2 < o.bounds.y;
                if (
                  "one-by-one-drill-in" !== e.computedListSlideDelivery ||
                  !(null === (a = t.aliases) || void 0 === a
                    ? void 0
                    : a.some(
                        (e) =>
                          "listOfTopic" === e.kind &&
                          e.topicId === t.topicId &&
                          1 === e.index,
                      ))
                ) {
                  const e = [
                    { id: o.id, strokeOffset: 1, opacity: 0 },
                    { id: i.id, opacity: 0 },
                  ];
                  l && e.push({ id: l.id, opacity: 0 }),
                    n.addSlideAdditionalEnteringStates(t, [
                      {
                        state: { boxes: e },
                        when: {
                          request: "forward",
                          sourceSlideType: t.type,
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                    ]),
                    h.push(
                      {
                        on: "postTransition",
                        durationMultiplier: 1,
                        delayMultiplier: r ? 1 : 0,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: o.id, strokeOffset: 0 }] },
                        when: {
                          request: "forward",
                          sourceSlideType: t.type,
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                      {
                        on: "postTransition",
                        durationMultiplier: 1,
                        delayMultiplier: r ? 1 : 0,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: o.id, opacity: 1 }] },
                        when: {
                          request: "forward",
                          sourceSlideType: t.type,
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                      {
                        on: "postTransition",
                        durationMultiplier: 1,
                        delayMultiplier: r ? 0 : 1,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                        when: {
                          request: "forward",
                          sourceSlideType: t.type,
                          sourceSlideTopicId: t.topicId,
                        },
                      },
                    ),
                    l &&
                      h.push({
                        on: "postTransition",
                        durationMultiplier: 1,
                        delayMultiplier: r ? 0 : 1,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                        when: {
                          request: "forward",
                          sourceSlideTopicId: t.topicId,
                        },
                      });
                }
              }
              n.setSlideEnteringState(t, { boxes: p }),
                n.addSlideEnteringAnimations(t, h);
            })(d, e, {
              titleBox: f,
              curlyBraceIndicatorBox: m,
              shapeRefSubtopic: b,
            }),
            d
          );
        });
    },
    38533: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateBulletListSlide =
          e.layoutBulletListSlide =
          e.computeBulletListLayoutVariant =
          e.isBulletListLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = i(53399),
        a = i(51116),
        s = i(12851),
        c = i(35561),
        d = i(41432),
        u = i(90189),
        p = i(89391),
        h = i(7381),
        g = i(68605),
        f = i(55287),
        m = i(14065),
        b = i(28850),
        v = i(30207),
        x = i(423),
        y = "bullet-list";
      (e.isBulletListLayoutEligibleFor = function (t) {
        return "list" === t;
      }),
        (e.computeBulletListLayoutVariant = function (t, e) {
          return v.hasImageableTopic(e) && !v.hasImageableSubtopics(e)
            ? 1 === e.subtopics.length
              ? "only-child-imageable-parent"
              : "imageable-parent-slide"
            : !v.hasImageableTopic(e) && v.hasImageableSubtopics(e)
              ? 1 === e.subtopics.length
                ? "only-imageable-child"
                : "imageable-children-slide"
              : v.hasImageableTopic(e) && v.hasImageableSubtopics(e)
                ? "imageable-list-slide"
                : 1 === e.subtopics.length
                  ? "only-child"
                  : "bullet-list";
        }),
        (e.layoutBulletListSlide = function (t, e, i = {}) {
          var p, h;
          const { topic: b, subtopics: v, headerTopic: S, topicLevel: w } = e,
            C = null !== (p = i.numberOfVisibleTopics) && void 0 !== p ? p : 0,
            T =
              null !== (h = null == i ? void 0 : i.theme) && void 0 !== h
                ? h
                : l.defaultTheme,
            L = l.appearanceOf(T),
            B = l.dimensionOf(T, { width: t.width, height: t.height });
          l.initializeSlideStyle(t, B, L, { layout: y });
          const M = l.calcLength(B.hSlidePadding, t),
            k = l.calcLength(B.vSlidePadding, t),
            F = l.calcLength(B.bulletListSlideContentLeftPadding, t),
            P = t.width - M - M,
            I = l.calcLength(B.bulletListSlideParentTopicMaxFontSize, t),
            O = l.calcLength(B.bulletListSlideParentTopicMinFontSize, t),
            _ = l.calcLength(B.hPaddingXSmall, t),
            z = l.calcLength(
              "centralTopic" === w
                ? B.bulletListSlideCentralTopicParentTopicBottomMargin
                : B.bulletListSlideParentTopicBottomMargin,
              t,
            ),
            E = {
              left: M,
              top: l.calcLength(B.vPaddingNormal, t),
              right: M,
              bottom: k,
            },
            A = l.calcLength(B.scrollFaderHeight, t),
            W = Math.round(
              l.calcLength(B.bulletListSlideSubtopicMaxFontSize, t),
            ),
            R = Math.round(
              l.calcLength(B.bulletListSlideSubtopicMinFontSize, t),
            ),
            V = l.calcLength(B.hPaddingXSmall, t),
            H = l.calcLength(
              "centralTopic" === w
                ? B.bulletListSlideCentralTopicSubtopicSpacing
                : B.bulletListSlideSubtopicSpacing,
              t,
            ),
            D = B.bulletListSlideBulletDotSizeRatio,
            $ = l.calcLength(B.bulletListSlideBulletDotStrokeLineWidth, t),
            j = l.calcLength(B.bulletListSlideBulletDotRightMargin, t),
            G = l.calcLength(B.hPaddingSmall, t),
            Z = (function (t, e, i, n, o) {
              var l;
              const {
                maxFontSize: a,
                minFontSize: c,
                markerRightMargin: p,
                traillingIconLeftMargin: h,
                maxWidth: m,
                maxLineCount: b,
              } = o;
              function v(t) {
                return t.textMeasurement.lineCount <= b;
              }
              const x = null !== (l = t.markers) && void 0 !== l ? l : [],
                S = x.slice(0, i.maxMarkerCount),
                w = f.computePlaceholder(t);
              function C(i, o) {
                var l;
                return u.computeTopicTitleGroup(
                  e,
                  n,
                  y,
                  t.id,
                  t.title,
                  i,
                  null !== (l = t.hyperlink) && void 0 !== l ? l : null,
                  S,
                  {
                    maxWidth: m,
                    fontSize: o,
                    markerRightMargin: p,
                    traillingIconLeftMargin: h,
                    overflowWrap: "break-word",
                    textRoles: ["title"],
                    requestForHit: { kind: "fastBackward" },
                    placeholder: w,
                  },
                );
              }
              const T = d.computeTopicTitle(t);
              let L;
              if (a > c) {
                const e = r.rangedIntegers(a, c),
                  i = r.mapValues(e, (t) => ({ fontSize: t, group: C(T, t) })),
                  n = r.findClosestMatch(i, ({ group: t }) => v(t));
                if (n)
                  return (
                    (L = n.group),
                    Object.assign(Object.assign({}, L), {
                      contentFeatures: g.computeContentFeaturesForTitleGroup(
                        L,
                        t.id,
                        T,
                        x,
                      ),
                    })
                  );
              }
              let B = T;
              if (B.length > 1) {
                const t = r.rangedIntegers(B.length, 1),
                  e = r.mapValues(t, (t) => s.getTruncatedText(B, t)),
                  i = r.mapValues(e, (t) => ({ text: t, group: C(t, a) })),
                  n = r.findClosestMatch(i, ({ group: t }) => v(t));
                n
                  ? ((B = n.text), (L = n.group))
                  : ((B = s.getTruncatedText(B, 1)), (L = C(B, a)));
              } else L = C(B, a);
              return Object.assign(Object.assign({}, L), {
                contentFeatures: g.computeContentFeaturesForTitleGroup(
                  L,
                  t.id,
                  T,
                  x,
                ),
              });
            })(b, t, B, L, {
              maxFontSize: I,
              minFontSize: O,
              markerRightMargin: _,
              traillingIconLeftMargin: G,
              maxWidth: P,
              maxLineCount: 1,
            }),
            q = t.width,
            N = t.height - k - Z.groupBox.bounds.height - z,
            X = (function (t, e, i, a, c, p) {
              const {
                paddings: h,
                maxWidth: b,
                maxHeight: v,
                maxFontSize: S,
                minFontSize: w,
                preferredLineCount: C,
                maxLineCount: T,
                markerRightMargin: L,
                traillingIconLeftMargin: B,
                subtopicSpacing: M,
                scrollFaderSize: k,
                numberOfVisibleTopics: F,
                bulletDotSizeRatio: P,
                bulletDotStrokeLineWidth: I,
                bulletDotRightMargin: O,
              } = p;
              function _(t) {
                return t.groupBox.contentHeight <= v;
              }
              function z(t) {
                return t.subtopicGroups.every(E);
              }
              function E(t) {
                return t.textMeasurement.lineCount <= C;
              }
              function A(t) {
                return t.textMeasurement.lineCount <= T;
              }
              const W = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: d.computeTopicTitle(t),
                  hyperLink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: f.computePlaceholder(t),
                };
              });
              function R(e) {
                const d = [],
                  p = [],
                  f = e * P,
                  S = [];
                let w = h.top,
                  C = 0;
                W.forEach(
                  (
                    {
                      topicId: t,
                      title: o,
                      text: l,
                      hyperLink: m,
                      markers: v,
                      placeholder: T,
                    },
                    k,
                  ) => {
                    var P;
                    const _ = k > F,
                      z = b - h.left - f - O - h.right,
                      W = v.slice(0, a.maxMarkerCount);
                    function R(l) {
                      return u.computeTopicTitleGroup(i, c, y, t, o, l, m, W, {
                        maxWidth: z,
                        fontSize: e,
                        markerRightMargin: L,
                        traillingIconLeftMargin: B,
                        textRoles: ["subtopic"],
                        groupRoles: n.toBoxRoles({ pending: _ }),
                        requestForHit: {
                          kind: "present",
                          topicId: t,
                          viaIntro: !0,
                        },
                        placeholder: T,
                      });
                    }
                    let V = R(l);
                    if (!A(V)) {
                      const t = r.rangedIntegers(l.length - 1, 1),
                        e = r.mapValues(t, (t) => s.getTruncatedText(l, t)),
                        i = r.mapValues(e, (t) => R(t));
                      V =
                        null !== (P = r.findClosestMatch(i, E)) && void 0 !== P
                          ? P
                          : R(s.getTruncatedText(l, 1));
                    }
                    const H = f,
                      D = V.textMeasurement.lineHeight,
                      $ = x.computeBulletDotBox(t, i, c, {
                        width: H,
                        height: D,
                        bulletDotStrokeLineWidth: I,
                        index: k,
                        additionalRoles: n.toBoxRoles({ pending: _ }),
                      }),
                      j = V.groupBox.bounds;
                    ($.bounds.x = h.left),
                      (j.x = $.bounds.x + $.bounds.width + O),
                      ($.bounds.y = w),
                      (j.y = w),
                      (w += j.height + M),
                      C > 0 && (C += M),
                      (C += j.height),
                      d.push(V),
                      p.push($),
                      S.push(
                        ...g.computeContentFeaturesForTitleGroup(V, t, l, v),
                      );
                  },
                ),
                  (C += h.top + h.bottom);
                const T = Math.min(C, v),
                  _ = {
                    id: n.subtopicListGroupOfTopic(t),
                    roles: ["subtopicListGroup"],
                    bounds: { x: 0, y: 0, width: b, height: T },
                    absBounds: o.zeroRect(),
                    contentType: "group",
                    children: [...d.map((t) => t.groupBox), ...p],
                    contentWidth: b,
                    contentHeight: C,
                    overflow: C > v ? "scroll" : "hidden",
                    scrollFaderSize: k,
                    bottomScrollFaderOffset: m.computeBottomMaskOffset(i, k),
                    scrollPageLength: 0.85 * T,
                  };
                return (
                  l.initializeBoxStyle(_, i, c, { layout: y }),
                  {
                    groupBox: _,
                    subtopicGroups: d,
                    bulletDotShapes: p,
                    contentFeatures: S,
                  }
                );
              }
              let V, H;
              const D = r.rangedIntegers(S, w),
                $ = r.mapValues(D, (t) => ({ fontSize: t, group: R(t) })),
                j = r.findClosestMatch($, ({ group: t }) => z(t));
              j ? ((V = j.fontSize), (H = j.group)) : ((V = w), (H = R(V)));
              if (!_(H) && V > w) {
                const t = r.rangedIntegers(V, w),
                  e = r.mapValues(t, (t) => ({ fontSize: t, group: R(t) })),
                  i = r.findClosestMatch(e, ({ group: t }) => _(t));
                i ? ((V = i.fontSize), (H = i.group)) : ((V = S), (H = R(V)));
              }
              return H;
            })(b.id, v, t, B, L, {
              paddings: E,
              maxWidth: q,
              maxHeight: N,
              maxFontSize: W,
              minFontSize: R,
              markerRightMargin: V,
              traillingIconLeftMargin: G,
              preferredLineCount: 2,
              maxLineCount: 3,
              subtopicSpacing: H,
              scrollFaderSize: A,
              numberOfVisibleTopics: C,
              bulletDotSizeRatio: D,
              bulletDotStrokeLineWidth: $,
              bulletDotRightMargin: j,
            });
          (Z.groupBox.bounds.x = M + F),
            (Z.groupBox.bounds.y = k),
            (X.groupBox.bounds.x = F),
            (X.groupBox.bounds.y =
              Z.groupBox.bounds.y + Z.groupBox.bounds.height + z),
            t.boxes.push(Z.groupBox),
            t.boxes.push(X.groupBox),
            S && c.addHeaderBoxes(t, S, B, L, y),
            a.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(
              t,
              ...Z.contentFeatures,
              ...X.contentFeatures,
            );
        }),
        (e.generateBulletListSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            {
              numberOfVisibleTopics: r = 0,
              numberOfVisitedTopics: a = 0,
              inSlideScroll: s = !1,
            } = o,
            c = Object.assign({}, t);
          l.forEach(({ id: t }, e) => {
            e > r &&
              (p.computePendingBoxStates(c, n.titleOfTopic(t)),
              p.computePendingBoxStates(c, n.bulletDotOfTopic(t)));
          });
          const d = n.assertBox(
            n.getBoxById(
              c.boxes,
              n.subtopicListGroupOfTopic(c.topicId),
              "group",
            ),
          );
          s && d.contentHeight > d.bounds.height && n.addMultistepBox(c, d.id);
          const u = r !== l.length ? r : a;
          return (
            h.computeSubtopicListScrollingStates(
              c,
              n.subtopicListGroupOfTopic(c.topicId),
              n.titleOfTopic(l[u].id),
              (t, e) => e.bounds.height / 2 - t.bounds.height / 2,
            ),
            (function (t) {
              var e;
              const i = n.assertBox(
                n.getBoxById(t.boxes, n.subtopicListGroupOfTopic(t.topicId)),
              );
              (null === (e = t.aliases) || void 0 === e
                ? void 0
                : e.some(
                    (e) =>
                      "listOfTopic" === e.kind &&
                      e.topicId === t.topicId &&
                      0 === e.index,
                  )) &&
                (n.setSlideEnteringState(t, {
                  boxes: [{ id: i.id, opacity: 0 }],
                }),
                n.addSlideEnteringAnimations(t, [
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  },
                ]));
            })(c),
            b.addBackgroundBoxes(c, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0, numberOfVisitedTopics: r = 0 } =
                  i,
                a = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                }),
                s = n.filterBoxes(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "subtopic" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                }),
                c = l !== o.length ? l : r;
              o.forEach(({ id: e }, i) => {
                var o;
                const l =
                  null == s
                    ? void 0
                    : s.find(
                        (t) =>
                          "background-shape" === t.contentType &&
                          -1 !== t.id.indexOf(e),
                      );
                l && (l.opacity = i <= c ? 1 : 0);
                const r = n.getBoxById(t.boxes, n.bulletDotOfTopic(e), "shape");
                r &&
                  (r.fillColor =
                    null !== (o = null == l ? void 0 : l.fillColor) &&
                    void 0 !== o
                      ? o
                      : "background-shape" ===
                          (null == a ? void 0 : a.contentType)
                        ? a.fillColor
                        : r.fillColor);
              });
            })(c, e, o),
            c
          );
        });
    },
    51116: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeHitRegionBounds = e.computeAbsoluteBounds = void 0),
        (e.computeAbsoluteBounds = function t(e, i = { x: 0, y: 0 }) {
          for (const n of e)
            (n.absBounds.x = n.bounds.x + i.x),
              (n.absBounds.y = n.bounds.y + i.y),
              (n.absBounds.width = n.bounds.width),
              (n.absBounds.height = n.bounds.height),
              "group" === n.contentType && t(n.children, n.absBounds);
        }),
        (e.computeHitRegionBounds = function t(e, i, n, o, l, r) {
          var a, s, c;
          for (const d of i) {
            if (d.id === e) {
              const t = Object.assign({}, d.absBounds),
                e = t.y + t.height / 2;
              return (
                (t.x = Math.max(t.x, o.x) - l),
                (t.y = Math.max(t.y - r, o.y)),
                (t.width =
                  Math.min(t.x + t.width + l + l, o.x + o.width) - t.x),
                (t.height =
                  Math.min(e + t.height / 2 + r, o.y + o.height) - t.y),
                Object.assign(t, {
                  opacity: t.height / (d.absBounds.height + r + r),
                })
              );
            }
            if ("group" === d.contentType) {
              const i = "visible" === d.overflow ? o : d.absBounds;
              let u = i;
              const p =
                null !==
                  (c =
                    null !==
                      (s =
                        null === (a = n.find((t) => t.id === d.id)) ||
                        void 0 === a
                          ? void 0
                          : a.scrollOffset) && void 0 !== s
                      ? s
                      : d.scrollOffset) && void 0 !== c
                  ? c
                  : 0;
              p > 0 &&
                (u = Object.assign(Object.assign({}, i), { y: i.y + p }));
              const h = t(e, d.children, n, u, l, r);
              if (h) {
                const t =
                  p > 0
                    ? Object.assign(Object.assign({}, h), { y: h.y - p })
                    : h;
                if (t.y + t.height < i.y || t.y > i.y + i.height) return null;
                if (t.y < i.y) {
                  t.y = i.y;
                  const e = t.height - (i.y - t.y);
                  (t.opacity = e / t.height), (t.height = e);
                }
                return t;
              }
            }
          }
          return null;
        });
    },
    52614: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeParentIndicatorShape = e.computeBraceCurveShapeGroup =
          void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = "brace-list",
        a = {
          none: { compute: () => null },
          default: {
            compute: function (t, e, i, a) {
              const {
                  width: s,
                  height: c,
                  leftPadding: d,
                  verticalPadding: u,
                } = a,
                p = { left: 20, mid: 20, right: 10 },
                h = { top: 20, mid: 30, bottom: 20 },
                g = d,
                f = p.right,
                m = c / 2,
                b = c / 2 - h.mid - h.top - u,
                v = [];
              if (b > 0) {
                const a = { x: 0, y: 0, width: s, height: Math.ceil(c / 2) },
                  d = `M${g} ${m}      c${p.left / 2} 0 ${p.left} ${-h.mid / 2} ${p.left} ${-h.mid}      l0 ${-b}      c0 ${-h.top / 2} ${p.mid / 2} ${-h.top} ${p.mid} ${-h.top}      l${f} 0`,
                  u = {
                    id: n.topCurlyBraceOfTopic(t),
                    roles: ["curlyBrace"],
                    bounds: Object.assign({}, a),
                    absBounds: o.zeroRect(),
                    contentType: "shape",
                    shapePath: d,
                  };
                l.initializeBoxStyle(u, e, i, { layout: r });
                const x = {
                    x: 0,
                    y: Math.floor(c / 2),
                    width: s,
                    height: c / 2,
                  },
                  y = `M${g} 0      c${p.left / 2} 0 ${p.left} ${h.mid / 2} ${p.left} ${h.mid}      l0 ${b}      c0 ${h.bottom / 2} ${p.mid / 2} ${h.bottom} ${p.mid} ${h.bottom}      l${f} 0`,
                  S = {
                    id: n.bottomCurlyBraceOfTopic(t),
                    roles: ["curlyBrace"],
                    bounds: Object.assign({}, x),
                    absBounds: o.zeroRect(),
                    contentType: "shape",
                    shapePath: y,
                  };
                l.initializeBoxStyle(S, e, i, { layout: r }),
                  v.push(u),
                  v.push(S);
              } else {
                const a = { x: 0, y: 0, width: s, height: c },
                  d = {
                    id: n.topCurlyBraceOfTopic(t),
                    roles: ["curlyBrace"],
                    bounds: Object.assign({}, a),
                    absBounds: o.zeroRect(),
                    contentType: "shape",
                    shapePath: `M${g} ${m} l50 0`,
                  };
                l.initializeBoxStyle(d, e, i, { layout: r });
                const u = {
                  id: n.bottomCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, a),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: `M${g} ${m} l50 0`,
                };
                l.initializeBoxStyle(u, e, i, { layout: r }),
                  v.push(d),
                  v.push(u);
              }
              const x = { x: 0, y: 0, width: s, height: c };
              return {
                id: n.curlyBraceOfTopic(t),
                roles: ["curlyBraceGroup"],
                bounds: Object.assign({}, x),
                absBounds: o.zeroRect(),
                contentType: "group",
                children: v,
                contentWidth: x.width,
                contentHeight: x.height,
                overflow: "visible",
                opacity: 1,
              };
            },
          },
          innocence: {
            compute: function (t, e, i, a) {
              const { width: s, height: c } = a,
                d = [],
                u = (c / 640) * 13,
                p = { x: 0, y: u, width: s, height: Math.ceil(c / 2) },
                h = {
                  id: n.topCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, p),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  viewport: { x: 0, y: 0, width: 67, height: 320 },
                  shapePath:
                    "M6.5 310.5C23.3333 298.667 56.8 262.6 56 213C55 151 18 109.5 56 4",
                  clipPath:
                    "M34.2206 109.294C26.8755 57.4886 44.4007 22.3347 54.7096 10C37.6999 63.2859 46.6438 113.067 52.39 146.915C57.4156 176.519 58.962 207.972 58.962 207.972C60.1217 261.628 34.4783 299.043 20.3036 308.5H6C51.7358 271.77 51.398 218.661 49.5237 199.328C49.0387 194.325 48.1018 189.497 47.2573 184.617L34.2206 109.294Z",
                };
              l.initializeBoxStyle(h, e, i, { layout: r });
              const g = {
                  x: 0,
                  y: Math.floor(c / 2) - u,
                  width: s,
                  height: c / 2,
                },
                f = {
                  id: n.bottomCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, g),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  viewport: { x: 0, y: 0, width: 68, height: 320 },
                  shapePath:
                    "M7 9C23.8333 20.8333 57.3 56.9 56.5 106.5C55.5 168.5 18.5 210 56.5 315.5",
                  clipPath:
                    "M35.2206 214.206C27.8755 266.011 45.4007 301.165 55.7096 313.5C38.6999 260.214 47.6438 210.433 53.39 176.585C58.4156 146.981 59.962 115.528 59.962 115.528C61.1217 61.8719 35.4783 24.4566 21.3036 15H7C52.7358 51.7305 52.398 104.839 50.5237 124.172C50.0387 129.175 49.1018 134.003 48.2573 138.883L35.2206 214.206Z",
                };
              l.initializeBoxStyle(f, e, i, { layout: r }),
                d.push(h),
                d.push(f);
              const m = { x: 0, y: 0, width: s, height: c };
              return {
                id: n.curlyBraceOfTopic(t),
                roles: ["curlyBraceGroup"],
                bounds: Object.assign({}, m),
                absBounds: o.zeroRect(),
                contentType: "group",
                children: d,
                contentWidth: m.width,
                contentHeight: m.height,
                overflow: "visible",
                opacity: 1,
              };
            },
          },
          "shape-for-you": {
            compute: function (t, e, i, a) {
              const { width: s, height: c, braceLineWidth: d } = a,
                u = c / 2,
                p = [],
                h = { x: 0, y: 0, width: s, height: Math.ceil(c / 2) },
                g = `M0 ${u} L ${s - d} ${u} L ${s - d} ${d}`,
                f = {
                  id: n.topCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, h),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: g,
                };
              l.initializeBoxStyle(f, e, i, { layout: r });
              const m = { x: 0, y: Math.floor(c / 2), width: s, height: c / 2 },
                b = `M0 0 L${s - d} 0 L ${s - d} ${c / 2 - d}`,
                v = {
                  id: n.bottomCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, m),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: b,
                };
              l.initializeBoxStyle(v, e, i, { layout: r }),
                p.push(f),
                p.push(v);
              const x = { x: 0, y: 0, width: s, height: c };
              return {
                id: n.curlyBraceOfTopic(t),
                roles: ["curlyBraceGroup"],
                bounds: Object.assign({}, x),
                absBounds: o.zeroRect(),
                contentType: "group",
                children: p,
                contentWidth: x.width,
                contentHeight: x.height,
                overflow: "visible",
                opacity: 1,
              };
            },
          },
          "hubble-bubble": {
            compute: function (t, e, i, a) {
              const {
                  width: s,
                  height: c,
                  braceLineWidth: d,
                  verticalPadding: u,
                  leftPadding: p,
                } = a,
                h = [],
                g = { x: 0, y: 0, width: s, height: Math.ceil(c / 2) },
                f = `M ${p} ${g.height} L ${s / 2} ${g.height}\n    A ${s} ${c / 2} 0 0 1 ${s - d} ${u}`,
                m = {
                  id: n.topCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, g),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: f,
                };
              l.initializeBoxStyle(m, e, i, { layout: r });
              const b = { x: 0, y: Math.floor(c / 2), width: s, height: c / 2 },
                v = `M ${p} 0 L ${s / 2} 0\n    A ${s} ${c / 2} 0 0 0 ${s - d} ${b.height - u}`,
                x = {
                  id: n.bottomCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, b),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: v,
                };
              l.initializeBoxStyle(x, e, i, { layout: r }),
                h.push(m),
                h.push(x);
              const y = { x: 0, y: 0, width: s, height: c };
              return {
                id: n.curlyBraceOfTopic(t),
                roles: ["curlyBraceGroup"],
                bounds: Object.assign({}, y),
                absBounds: o.zeroRect(),
                contentType: "group",
                children: h,
                contentWidth: y.width,
                contentHeight: y.height,
                overflow: "visible",
                opacity: 1,
              };
            },
          },
          "hand-drawn": {
            compute: function (t, e, i, a) {
              const { width: s, height: c } = a,
                d = [],
                u = Math.ceil(c / 2),
                p = { x: 0, y: 0, width: 140, height: 356 },
                h = s / u,
                g = p.width / p.height,
                f = { x: 0, y: h > g ? 7.5 : 15, width: s, height: u },
                m = {
                  id: n.topCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, f),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  viewport: p,
                  preserveAspectRatio: "xMidYMid " + (h > g ? "meet" : "slice"),
                  shapePath: "M7 342.5L72 311.5L64 21.5L134 47.5",
                  clipPath:
                    "M85.6388 21.5485C100.176 22.2229 116.05 29.7909 126.021 36.1239C129.517 38.3447 130.552 42.9795 128.331 46.476C126.11 49.9724 121.475 51.0065 117.979 48.7857C108.854 42.9898 95.6324 37.0282 84.9437 36.5324C79.7497 36.2915 75.9945 37.3723 73.4374 39.4635C70.9602 41.4892 68.4318 45.4265 67.6558 53.4285C66.6139 64.1721 68.2198 84.4951 70.9013 110.305C71.7601 118.572 72.7218 127.345 73.7173 136.427C75.777 155.219 77.9819 175.334 79.722 195.028C82.3027 224.236 83.9188 253.081 82.5168 276.139C81.8169 287.65 80.3469 298.09 77.6944 306.556C75.1034 314.825 70.989 322.485 64.053 326.652C63.8346 326.783 63.6097 326.903 63.3791 327.011L25.1882 344.948C21.439 346.709 16.9722 345.097 15.2113 341.348C13.4504 337.599 15.0623 333.132 18.8115 331.371L56.5925 313.627C58.7678 312.181 61.2716 308.802 63.3805 302.071C65.5137 295.263 66.8781 286.188 67.5444 275.229C68.8748 253.349 67.3502 225.436 64.7802 196.348C63.0535 176.806 60.8808 156.987 58.8305 138.284C57.8297 129.154 56.858 120.291 55.9816 111.855C53.3553 86.5763 51.5064 64.5551 52.7258 51.9806C53.7589 41.328 57.4741 33.1407 63.9417 27.8518C70.3292 22.6283 78.2198 21.2044 85.6388 21.5485Z",
                };
              l.initializeBoxStyle(m, e, i, { layout: r });
              const b = c / 2,
                v = { x: 0, y: 0, width: 135, height: 340 },
                x = s / b,
                y = v.width / v.height,
                S = {
                  x: 0,
                  y: Math.floor(c / 2) - (x > y ? 7.5 : 15),
                  width: s,
                  height: b,
                },
                w = {
                  id: n.bottomCurlyBraceOfTopic(t),
                  roles: ["curlyBrace"],
                  bounds: Object.assign({}, S),
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  viewport: { x: 0, y: 0, width: 135, height: 340 },
                  preserveAspectRatio: "xMidYMid " + (x > y ? "meet" : "slice"),
                  shapePath: "M9 15L63 45.5L68 330L143 326.5",
                  clipPath:
                    "M18.9486 13.6054C20.3596 9.711 24.6605 7.69781 28.5549 9.10881C34.9 11.4077 43.0541 14.4219 50.6678 18.8305C58.293 23.2459 65.9157 29.3585 70.7625 38.1699C72.9528 42.1518 74.1532 47.9838 74.9479 54.1518C75.7825 60.6297 76.2892 68.6002 76.5635 77.5983C77.1125 95.6112 76.745 118.333 76.0219 142.647C75.5197 159.534 74.8475 177.178 74.1828 194.626C72.9236 227.681 71.691 260.035 71.691 285.216C71.691 285.325 71.6886 285.435 71.6838 285.545C71.2131 296.266 73.7203 309.066 80.5924 315.984C83.7549 319.167 88.0883 321.386 94.4522 321.496C101.053 321.61 110.184 319.443 122.49 312.925C126.15 310.986 130.689 312.381 132.628 316.042C134.567 319.702 133.171 324.241 129.511 326.18C115.887 333.397 104.201 336.666 94.1938 336.494C83.9496 336.317 75.8835 332.528 69.9505 326.555C58.6838 315.213 56.1869 297.224 56.6911 285.056C56.6963 259.627 57.946 226.799 59.2096 193.605C59.8709 176.235 60.5359 158.765 61.0285 142.201C61.7502 117.935 62.105 95.5909 61.5705 78.0553C61.303 69.2792 60.8164 61.8551 60.0709 56.0686C59.2854 49.9723 58.3187 46.6703 57.6196 45.3993C54.5732 39.861 49.4656 35.4677 43.1513 31.8114C36.8253 28.1484 29.8305 25.5251 23.4452 23.2117C19.5508 21.8007 17.5377 17.4998 18.9486 13.6054Z",
                };
              l.initializeBoxStyle(w, e, i, { layout: r }),
                d.push(m),
                d.push(w);
              const C = { x: 0, y: 0, width: s, height: c };
              return {
                id: n.curlyBraceOfTopic(t),
                roles: ["curlyBraceGroup"],
                bounds: Object.assign({}, C),
                absBounds: o.zeroRect(),
                contentType: "group",
                children: d,
                contentWidth: C.width,
                contentHeight: C.height,
                overflow: "visible",
                opacity: 1,
              };
            },
          },
        };
      (e.computeBraceCurveShapeGroup = function (t, e, i, n) {
        var o;
        return {
          groupBox: a[
            null !== (o = e.braceCurveShapeStyle) && void 0 !== o
              ? o
              : "default"
          ].compute(t, e, i, n),
        };
      }),
        (e.computeParentIndicatorShape = function (t, e, i, a) {
          if ("underline" !== e.braceParentTopicIndicatorShapeStyle)
            return null;
          const { width: s, height: c } = a,
            d = {
              id: n.primaryIndicatorOfTopic(t),
              roles: ["primaryIndicator"],
              bounds: { x: 0, y: 0, width: s, height: c },
              absBounds: o.zeroRect(),
              contentType: "shape",
              preserveAspectRatio: "xMidYMid slice",
              viewport: { x: 0, y: 0, width: 517, height: 34 },
              shapePath: "M1 19.5L516.5 15",
              clipPath:
                "M498.5 10.9755C486.1 3.77549 174 7.97549 19.5 10.9755L25.5 24.9746C175.333 25.6413 478.1 26.5746 490.5 24.9746C502.9 23.3746 501 14.9752 498.5 10.9755Z",
            };
          return l.initializeBoxStyle(d, e, i, { layout: r }), d;
        });
    },
    423: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeBulletDotBox = void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = "bullet-list",
        a = {
          default: {
            compute: function (t, e, i, a) {
              const {
                  width: s,
                  height: c,
                  bulletDotStrokeLineWidth: d,
                  additionalRoles: u = [],
                } = a,
                p = Math.min(s, c) / 2 - d / 2,
                h = `M ${s / 2 - p},${c / 2} a ${p},${p} 0 1,1 ${2 * p},0 a ${p},${p} 0 1,1 -${2 * p},0`,
                g = {
                  id: n.bulletDotOfTopic(t),
                  roles: ["bulletDot", ...u],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: h,
                };
              return l.initializeBoxStyle(g, e, i, { layout: r }), g;
            },
          },
          "midnight-rose": {
            compute: function (t, e, i, a) {
              const { width: s, height: c, additionalRoles: d = [] } = a,
                u = {
                  id: n.bulletDotOfTopic(t),
                  roles: ["bulletDot", ...d],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  absBounds: o.zeroRect(),
                  contentType: "svg-template",
                  svg: '<svg width="35" height="40" viewBox="0 0 35 40" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M34.43 9.93909V29.8173L17.215 39.7563L0 29.8173L1.32915e-07 9.93909L17.215 0L34.43 9.93909Z" fill="#0C1548"/>\n    <path d="M27.4685 19.9776L22.3417 28.8574L12.0882 28.8574L6.96141 19.9776L12.0882 11.0978H22.3417L27.4685 19.9776Z" fill="#2C47D8"/>\n    </svg>',
                };
              return l.initializeBoxStyle(u, e, i, { layout: r }), u;
            },
          },
          "hand-drawn": {
            compute: function (t, e, i, a) {
              const {
                  width: s,
                  height: c,
                  index: d,
                  additionalRoles: u = [],
                } = a,
                p = [
                  '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M3.08754 16.8914C-4.14712 10.4499 2.98498 3.15086 7.66728 0.150389C7.82422 0.0498214 8.00259 -0.00233094 8.18865 0.00893921C10.3862 0.142057 15.1689 1.80232 18.856 7.67789C23.6741 15.3558 12.2858 25.0811 3.08754 16.8914Z" fill="#2F4DB5"/>\n      </svg>',
                  '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M19.9856 11.1247C19.4703 1.03775 8.17467 -0.433261 2.59129 0.0921004C1.94706 0.0921004 0.529742 2.29862 0.0143536 11.1247C-0.629882 22.1573 20.6299 23.7334 19.9856 11.1247Z" fill="#2F4DB5"/>\n      </svg>',
                  '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M2.33868 1.53037C-0.243585 7.68691 -2.86273 20 7.31875 20C27.239 20 22.259 -6.55009 2.33868 1.53037Z" fill="#2F4DB5"/>\n      </svg>',
                  '<svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M3.03566 17.9995C-3.75006 11.1889 2.40736 3.49542 6.33428 0.5C16.1359 0.5 19.5288 7.43675 20 10.9051C17.1726 16.1077 9.82139 24.8102 3.03566 17.9995Z" fill="#2F4DB5"/>\n      </svg>',
                ],
                h = p[d % p.length],
                g = {
                  id: n.bulletDotOfTopic(t),
                  roles: ["bulletDot", ...u],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  absBounds: o.zeroRect(),
                  contentType: "svg-template",
                  svg: h,
                };
              return l.initializeBoxStyle(g, e, i, { layout: r }), g;
            },
          },
        };
      e.computeBulletDotBox = function (t, e, i, n) {
        var o;
        return a[
          null !== (o = e.bulletDotShapeStyle) && void 0 !== o ? o : "default"
        ].compute(t, e, i, n);
      };
    },
    68605: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeContentFeaturesForTitleGroup = void 0),
        (e.computeContentFeaturesForTitleGroup = function (t, e, i, n) {
          var o;
          const l = [];
          return (
            l.push({
              kind: "title",
              topicId: e,
              integrity:
                (null !== (o = null == t ? void 0 : t.textBox.text) &&
                void 0 !== o
                  ? o
                  : "") !== i
                  ? "partial"
                  : "full",
            }),
            t &&
              t.markerImageBoxes.length > 0 &&
              l.push({
                kind: "markers",
                topicId: e,
                integrity:
                  t.markerImageBoxes.length < n.length ? "partial" : "full",
              }),
            l
          );
        });
    },
    20110: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeFishboneHeadShape = e.computeFishboneShape = void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199);
      (e.computeFishboneShape = function (t, e, i, r, a, s, c, d, u = {}) {
        var p;
        const h = null !== (p = u.additionalRoles) && void 0 !== p ? p : [],
          g = `M ${c}, ${c / 2} L ${d - c}, ${c / 2}`,
          f = {
            id: n.fishboneOfTopic(t),
            roles: ["fishbone", ...h],
            bounds: { x: a, y: s, width: d, height: c },
            absBounds: o.zeroRect(),
            contentType: "shape",
            shapePath: g,
          };
        return l.initializeBoxStyle(f, e, i, { layout: r }), f;
      }),
        (e.computeFishboneHeadShape = function (
          t,
          e,
          i,
          r,
          a,
          s,
          c,
          d,
          u,
          p,
          h = {},
        ) {
          var g;
          const f = null !== (g = h.additionalRoles) && void 0 !== g ? g : [],
            m = u * (Math.PI / 180),
            b = d * Math.sin(m),
            v = d * Math.cos(m),
            x =
              "above" === p
                ? `M ${c / 2}, ${v} L ${b - c / 2}, ${c}`
                : `M ${c / 2}, 0 L ${b - c / 2}, ${v - c}`,
            y = {
              id: n.fishboneHeadOfTopic(t),
              roles: ["fishboneHead", ...f],
              bounds: { x: a, y: s, width: b, height: v },
              absBounds: o.zeroRect(),
              contentType: "shape",
              shapePath: x,
            };
          return l.initializeBoxStyle(y, e, i, { layout: r }), y;
        });
    },
    28900: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.layoutFlex = void 0);
      const n = i(97857);
      e.layoutFlex = function (t, e = {}) {
        var i, o, l, r, a, s, c, d, u;
        const p = null !== (i = e.direction) && void 0 !== i ? i : "row",
          h = Object.assign(
            {},
            null !== (o = e.paddings) && void 0 !== o ? o : n.zeroInsets(),
          );
        "column" === p &&
          (t.forEach((t) => {
            const { width: e, height: i } = t.bounds;
            (t.bounds.width = i), (t.bounds.height = e);
          }),
          ([h.left, h.top] = [h.top, h.left]),
          ([h.right, h.bottom] = [h.bottom, h.right]));
        const g =
            "column" === p
              ? null !== (l = e.maxHeight) && void 0 !== l
                ? l
                : 0
              : null !== (r = e.maxWidth) && void 0 !== r
                ? r
                : 0,
          f = null !== (a = e.spacings) && void 0 !== a ? a : [],
          m = null !== (s = e.wrap) && void 0 !== s ? s : "nowrap",
          b = null !== (c = e.justifyContent) && void 0 !== c ? c : "start",
          v = null !== (d = e.alignItems) && void 0 !== d ? d : "start",
          x = null !== (u = e.lineSpacing) && void 0 !== u ? u : 0;
        let y = h.left,
          S = h.top,
          w = 0,
          C = 0;
        const T = [];
        let L = { width: 0, height: 0, boxes: [] };
        function B() {
          (w = Math.max(w, L.width)),
            T.length > 0 && (C += x),
            (C += L.height),
            (y = h.left),
            (S += L.height + x),
            T.push(L),
            (L = { width: 0, height: 0, boxes: [] });
        }
        t.forEach((t, e) => {
          var i, n;
          L.boxes.length > 0 &&
            (L.width += null !== (i = f[e - 1]) && void 0 !== i ? i : 0);
          const { width: o, height: l } = t.bounds;
          "wrap" === m && g > 0 && y + o + h.right > g && B(),
            (t.bounds.x = y),
            (t.bounds.y = S);
          const r = null !== (n = f[e]) && void 0 !== n ? n : 0;
          (y += o + r),
            (L.width += o),
            (L.height = Math.max(L.height, l)),
            L.boxes.push(t);
        }),
          L.boxes.length > 0 && B();
        for (const t of T) {
          const e =
            "center" === b && w > 0
              ? (w - t.width) / 2
              : "end" === b && w > 0
                ? w - t.width
                : 0;
          t.boxes.forEach((i) => {
            i.bounds.x += e;
            const n =
              "center" === v
                ? (t.height - i.bounds.height) / 2
                : "end" === v
                  ? t.height - i.bounds.height
                  : 0;
            i.bounds.y += n;
          });
        }
        return (
          "column" === p &&
            t.forEach((t) => {
              const e = t.bounds,
                { x: i, y: n, width: o, height: l } = e;
              (e.x = n), (e.y = i), (e.width = l), (e.height = o);
            }),
          "column" === p
            ? { width: C + h.top + h.bottom, height: w + h.left + h.right }
            : { width: w + h.left + h.right, height: C + h.top + h.bottom }
        );
      };
    },
    80412: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeHittableBoxStates = void 0);
      const n = i(6776);
      e.computeHittableBoxStates = function (t, e, i) {
        var o, l;
        const r = n.getBoxById(t.boxes, e);
        if (r)
          if ("group" === r.contentType) {
            const e = n.filterBoxes(
                r.children,
                (t) => "text" === t.contentType,
              ),
              a = n.filterBoxes(
                r.children,
                (t) =>
                  "svg-template" === t.contentType &&
                  t.roles.includes("imagePlaceholder"),
              ),
              s =
                null !==
                  (l =
                    null === (o = e.find((t) => !!t.textAlignment)) ||
                    void 0 === o
                      ? void 0
                      : o.textAlignment) && void 0 !== l
                  ? l
                  : "leading",
              c = (function (t, e, i) {
                if (t.transformOrigin) return t.transformOrigin;
                const n = t.contentHeight > i.height / 2 ? "25%" : "50%";
                switch (e) {
                  case "center":
                    return `50% ${n}`;
                  case "leading":
                    return `0 ${n}`;
                  case "trailing":
                    return `100% ${n}`;
                }
              })(r, s, t),
              d = r.contentHeight > t.height / 2 ? 1.01 : 1.02;
            switch (i) {
              case "enter":
                return {
                  boxes: [
                    {
                      id: r.id,
                      transform: [{ scale: { x: d, y: d } }],
                      transformOrigin: c,
                      transition:
                        "transform 0.5s cubic-bezier(1, -0.41, 0, 1.41)",
                    },
                    ...e.map((e) => ({
                      id: e.id,
                      textColor: t.hitRegionHighlightTextColor,
                      transition: "color 0.5s cubic-bezier(1, -0.41, 0, 1.41)",
                    })),
                    ...a.map((e) => ({
                      id: e.id,
                      fillColor: t.hitRegionHighlightTextColor,
                      transition: "fill 0.5s cubic-bezier(1, -0.41, 0, 1.41)",
                    })),
                  ],
                };
              case "leave":
                return {
                  boxes: [
                    {
                      id: r.id,
                      transform: [{ scale: { x: 1, y: 1 } }],
                      transformOrigin: c,
                      transition:
                        "transform 0.3s cubic-bezier(0.7, -0.4, 0.4, 1.4)",
                    },
                    ...e.map((t) => ({
                      id: t.id,
                      textColor: t.textColor,
                      transition:
                        "color 0.3s cubic-bezier(0.7, -0.4, 0.4, 1.4)",
                    })),
                    ...a.map((t) => ({
                      id: t.id,
                      fillColor: t.fillColor,
                      transition: "fill 0.3s cubic-bezier(0.7, -0.4, 0.4, 1.4)",
                    })),
                  ],
                };
              case "captured":
                return {
                  boxes: [
                    {
                      id: r.id,
                      transform: [{ scale: { x: 1, y: 1 } }],
                      transformOrigin: c,
                      transition:
                        "transform 0.3s cubic-bezier(1, -0.41, 0, 1.41)",
                    },
                    ...e.map((t) => ({
                      id: t.id,
                      textColor: t.textColor,
                      transition:
                        "color 0.3s cubic-bezier(0.7, -0.4, 0.4, 1.4)",
                    })),
                    ...a.map((t) => ({
                      id: t.id,
                      fillColor: t.fillColor,
                      transition: "fill 0.3s cubic-bezier(0.7, -0.4, 0.4, 1.4)",
                    })),
                  ],
                };
            }
          } else if ("image" === r.contentType && r.requestForHit)
            switch (i) {
              case "enter":
                return {
                  boxes: [
                    {
                      id: r.id,
                      outlineColor: t.hitRegionHighlightTextColor,
                      outlineWidth: 2,
                      outlineOffset: -2,
                    },
                  ],
                };
              case "leave":
              case "captured":
                return {
                  boxes: [
                    {
                      id: r.id,
                      outlineColor: "",
                      outlineWidth: 0,
                      outlineOffset: 0,
                    },
                  ],
                };
            }
          else if ("svg-template" === r.contentType)
            switch (i) {
              case "enter":
                return {
                  boxes: [
                    {
                      id: r.id,
                      borderColor: t.hitRegionHighlightTextColor,
                      transition:
                        "border-color 0.5s cubic-bezier(1, -0.41, 0, 1.41)",
                    },
                  ],
                };
              case "leave":
              case "captured":
                return {
                  boxes: [
                    {
                      id: r.id,
                      borderColor: "transparent",
                      transition:
                        "border-color 0.5s cubic-bezier(1, -0.41, 0, 1.41)",
                    },
                  ],
                };
            }
        return null;
      };
    },
    28674: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeBestMatchedImageSubtopicsGridPacking = void 0);
      const n = i(14337);
      e.computeBestMatchedImageSubtopicsGridPacking = function (t, e) {
        const { maxWidth: i, maxHeight: o, subtopicsSpacing: l } = e,
          r = t.map((t) => t.size.width / t.size.height),
          a = t
            .map((e, o) =>
              (function (e) {
                const o =
                    (i - l * (e - 1)) /
                    r.slice(0, e).reduce((t, e) => t + e, 0),
                  a = r.map((t) => t * o),
                  s = t.map((t, e) => (t.size.height / t.size.width) * a[e]),
                  c = new n.GridPacking(a, l, i).toGrid(),
                  d =
                    c
                      .map((t) => s[t.row[0]] * t.scale)
                      .reduce((t, e) => t + e, 0) +
                    l * (c.length - 1);
                return {
                  packing: c,
                  actualWidthOfImages: a,
                  contentWidth: i,
                  contentHeight: d,
                };
              })(o + 1),
            )
            .sort((t, e) => e.contentHeight - t.contentHeight);
        let s = a.find((t) => t.contentHeight <= o);
        if (!s) {
          const t = a[a.length - 1],
            e =
              (o - l * (t.packing.length - 1)) /
              (t.contentHeight - l * (t.packing.length - 1));
          for (let i = 0; i < t.packing.length; i++) t.packing[i].scale *= e;
          const i = t.packing[0].row
            .map((e) => t.actualWidthOfImages[e])
            .reduce((i, n) => i + n * t.packing[0].scale * e, 0);
          s = Object.assign(Object.assign({}, t), {
            contentWidth: i,
            contentHeight: o,
          });
        }
        return s;
      };
    },
    90010: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeLabelGroup =
          e.computeLabelListGroupBox =
          e.labelMaxLineCount =
            void 0);
      const n = i(6776),
        o = i(75327),
        l = i(97857),
        r = i(91199),
        a = i(14594),
        s = i(53399),
        c = i(12851),
        d = i(28900),
        u = i(29744);
      (e.labelMaxLineCount = 1),
        (e.computeLabelListGroupBox = function (t, e, i, o, a, s) {
          var c;
          const {
              maxWidth: u,
              labelSpacing: p,
              lineSpacing: h,
              alignment: g,
            } = s,
            f = null !== (c = s.listRoles) && void 0 !== c ? c : [],
            m = new Array(a.length - 1).fill(p),
            b = a.map((t) =>
              Object.assign(Object.assign({}, t), {
                bounds: Object.assign({}, t.bounds),
              }),
            ),
            v = d.layoutFlex(b, {
              spacings: m,
              direction: "row",
              wrap: "wrap",
              maxWidth: u,
              justifyContent:
                "leading" === g ? "start" : "trailing" === g ? "end" : "center",
              lineSpacing: h,
            }),
            x = v.width,
            y = v.height,
            S = {
              id: n.labelListOfTopic(o),
              roles: [...f],
              bounds: { x: 0, y: 0, width: x, height: y },
              absBounds: l.zeroRect(),
              contentType: "group",
              children: [...b],
              contentWidth: v.width,
              contentHeight: v.height,
              overflow: "visible",
            };
          return r.initializeBoxStyle(S, t, e, { layout: i }), S;
        }),
        (e.computeLabelGroup = function (t, i, d, p, h, g, f) {
          var m, b, v, x, y;
          const {
              maxWidth: S,
              minWidth: w,
              fontSize: C,
              leftPadding: T,
              rightPadding: L,
            } = f,
            B = null !== (m = f.groupRoles) && void 0 !== m ? m : [],
            M = null !== (b = f.textRoles) && void 0 !== b ? b : [],
            k = null !== (v = f.borderRoles) && void 0 !== v ? v : [],
            F = S - T - L;
          function P(e) {
            const s = {
              id: n.labelTextOfTopic(p, g),
              roles: ["label", ...M],
              bounds: l.zeroRect(),
              absBounds: l.zeroRect(),
              contentType: "text",
              text: e,
              fontSize: o.toCSSLength(C),
              lineHeight: u.computeTextLineHeight(C),
              overflowWrap: "normal",
            };
            r.initializeBoxStyle(s, t, i, { layout: d });
            const c = a.measureText(s, { maxWidth: F });
            return (
              (s.bounds.width = c.width),
              (s.bounds.height = c.height),
              { textBox: s, textMeasurement: c }
            );
          }
          const I = s.rangedIntegers(h.length, 1),
            O = s.mapValues(I, (t) => c.getTruncatedText(h, t)),
            _ = s.mapValues(O, P),
            z =
              null !==
                (x = s.findClosestMatch(
                  _,
                  (t) =>
                    (function ({ textMeasurement: t }) {
                      return t.width <= F;
                    })(t) &&
                    (function ({ textMeasurement: t }) {
                      return t.lineCount <= e.labelMaxLineCount;
                    })(t),
                )) && void 0 !== x
                ? x
                : P(c.getTruncatedText(h, 1)),
            { textBox: E, textMeasurement: A } = z,
            W = Math.max(w, Math.min(S, E.bounds.width + T + L)),
            R = A.lineHeight,
            V = (W - T - L - E.bounds.width) / 2,
            H = (R - E.bounds.height) / 2;
          (E.bounds.x = T + V), (E.bounds.y = H);
          const D = {
            id: n.labelBorderOfTopic(p, g),
            roles: ["labelBorder", ...k],
            bounds: { x: 0, y: 0, width: W, height: R },
            absBounds: l.zeroRect(),
            contentType: "shape",
            shapePath: "",
          };
          r.initializeBoxStyle(D, t, i, { layout: d }),
            (D.shapePath = (function (t, e) {
              const i = (t.height - e) / 2,
                n = e / 2,
                o = 2 * i + e,
                l = Math.max(t.width - o, 0),
                r = Math.max(t.height - o, 0);
              return `\n    M${i + n},${n}\n    h${l}\n    a${i},${i} 0 0 1 ${i},${i}\n    v${r}\n    a${i},${i} 0 0 1 -${i},${i}\n    h-${l}\n    a${i},${i} 0 0 1 -${i},-${i}\n    v-${r}\n    a${i},${i} 0 0 1 ${i},-${i}\n    z`;
            })(
              { x: 0, y: 0, width: W, height: R },
              null !== (y = D.lineWidth) && void 0 !== y ? y : 1,
            ));
          const $ = {
            id: n.labelOfTopic(p, g),
            roles: [...B],
            bounds: { x: 0, y: 0, width: W, height: R },
            absBounds: l.zeroRect(),
            contentType: "group",
            children: [D, E],
            contentWidth: W,
            contentHeight: R,
            overflow: "visible",
          };
          return (
            r.initializeBoxStyle($, t, i, { layout: d }),
            { groupBox: $, textBox: E, textMeasurement: A, borderShapeBox: D }
          );
        });
    },
    41992: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.layoutVariantEngines = void 0);
      const n = i(86706),
        o = i(38533),
        l = i(63746),
        r = i(17241),
        a = i(35262),
        s = i(74825),
        c = i(54710),
        d = i(28747),
        u = i(91410),
        p = i(68839),
        h = i(3494),
        g = i(96818),
        f = i(95907),
        m = i(53209),
        b = i(45614),
        v = i(99688),
        x = i(62100),
        y = i(14064);
      e.layoutVariantEngines = {
        "topic-slide": {
          id: "topic-slide",
          layoutTemplateSlide: g.layoutTopicSlide,
          generatePresentationalSlide: g.generateTopicSlide,
        },
        "image-topic-slide": {
          id: "image-topic-slide",
          layoutTemplateSlide: a.layoutImageTopicSlide,
          generatePresentationalSlide: a.generateImageTopicSlide,
        },
        "brace-list": {
          id: "brace-list",
          layoutTemplateSlide: n.layoutBraceListSlide,
          generatePresentationalSlide: n.generateBraceListSlide,
        },
        "bullet-list": {
          id: "bullet-list",
          layoutTemplateSlide: o.layoutBulletListSlide,
          generatePresentationalSlide: o.generateBulletListSlide,
        },
        "lyric-list": {
          id: "lyric-list",
          layoutTemplateSlide: s.layoutLyricListSlide,
          generatePresentationalSlide: s.generateLyricListSlide,
        },
        fishbone: {
          id: "fishbone",
          layoutTemplateSlide: l.layoutFishboneSlide,
          generatePresentationalSlide: l.generateFishboneSlide,
        },
        "fishbone-head": {
          id: "fishbone-head",
          layoutTemplateSlide: r.layoutFishboneHeadSlide,
          generatePresentationalSlide: r.generateFishboneHeadSlide,
        },
        timeline: {
          id: "timeline",
          layoutTemplateSlide: p.layoutTimelineSlide,
          generatePresentationalSlide: p.generateTimelineSlide,
        },
        "timeline-head": {
          id: "timeline-head",
          layoutTemplateSlide: h.layoutTimelineHeadSlide,
          generatePresentationalSlide: h.generateTimelineHeadSlide,
        },
        summary: {
          id: "summary",
          layoutTemplateSlide: d.layoutSummarySlide,
          generatePresentationalSlide: d.generateSummarySlide,
        },
        "only-child": {
          id: "only-child",
          layoutTemplateSlide: c.layoutOnlyChildListSlide,
          generatePresentationalSlide: c.generateOnlyChildListSlide,
        },
        "tree-chart": {
          id: "tree-chart",
          layoutTemplateSlide: f.layoutTreeChartSlide,
          generatePresentationalSlide: f.generateTreeChartSlide,
        },
        "scrollable-summary": {
          id: "scrollable-summary",
          layoutTemplateSlide: u.layoutScrollableSummarytSlide,
          generatePresentationalSlide: u.generateScrollableSummarySlide,
        },
        "imageable-parent-slide": {
          id: "imageable-parent-slide",
          layoutTemplateSlide: m.layoutImageableParentSlide,
          generatePresentationalSlide: m.generateImageableParentSlide,
        },
        "imageable-children-slide": {
          id: "imageable-children-slide",
          layoutTemplateSlide: b.layoutImageableChildrenSlide,
          generatePresentationalSlide: b.generateImageableChildrenSlide,
        },
        "imageable-list-slide": {
          id: "imageable-list-slide",
          layoutTemplateSlide: v.layoutImageableListSlide,
          generatePresentationalSlide: v.generateImageableListSlide,
        },
        "only-child-imageable-parent": {
          id: "only-child-imageable-parent",
          layoutTemplateSlide: x.layoutOnlyChildImageableParentSlide,
          generatePresentationalSlide: x.generateOnlyChildImageableParentSlide,
        },
        "only-imageable-child": {
          id: "only-imageable-child",
          layoutTemplateSlide: y.layoutOnlyImageableChildSlide,
          generatePresentationalSlide: y.generateOnlyImageableChildSlide,
        },
      };
    },
    53988: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeArrowShapeGroup = void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = "lyric-list",
        a = {
          default: {
            compute: function (t, e, i, a) {
              const { arrowWidth: s, arrowHeight: c, arrowCornerRadius: d } = a,
                u = s * (1 - (2 * d) / c),
                p = `M 0 0    L ${u} ${c / 2 - d}    C ${s - d} ${(c - d) / 2} ${s - d} ${(c + d) / 2} ${u} ${c / 2 + d}    L 0 ${c}    Z`,
                h = {
                  id: n.arrowOfTopic(t),
                  roles: ["arrow"],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: p,
                };
              return l.initializeBoxStyle(h, e, i, { layout: r }), h;
            },
          },
          innocence: {
            compute: function (t, e, i, a) {
              const { arrowWidth: s, arrowHeight: c } = a,
                d = {
                  id: n.arrowOfTopic(t),
                  roles: ["arrow"],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  viewport: { x: 0, y: 0, width: 38, height: 34 },
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath:
                    "M34.8116 12.3787C38.9332 14.0811 38.9332 19.9189 34.8116 21.6213L6.90881 33.1464C3.61727 34.5059 -1.48996e-06 32.0863 -1.33429e-06 28.5251L-3.2674e-07 5.47494C-1.71072e-07 1.91367 3.61726 -0.505916 6.9088 0.853634L34.8116 12.3787Z",
                };
              return l.initializeBoxStyle(d, e, i, { layout: r }), d;
            },
          },
          "hand-drawn": {
            compute: function (t, e, i, a) {
              const { arrowWidth: s, arrowHeight: c } = a,
                d = {
                  id: n.arrowOfTopic(t),
                  roles: ["arrow"],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  preserveAspectRatio: "xMidYMid slice",
                  viewport: { x: 0, y: 0, width: 86, height: 62 },
                  shapePath: "M0 31L86 31",
                  clipPath:
                    "M33.5123 45.6122V58L84 28.7658L33.5123 3V18.8555H2L2.21006 45.6122H33.5123Z",
                };
              return l.initializeBoxStyle(d, e, i, { layout: r }), d;
            },
          },
        };
      e.computeArrowShapeGroup = function (t, e, i, n) {
        var o;
        return a[
          null !== (o = e.lyricArrowShapeStyle) && void 0 !== o ? o : "default"
        ].compute(t, e, i, n);
      };
    },
    89391: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computePendingBoxStates = void 0);
      const n = i(6776);
      e.computePendingBoxStates = function (t, e) {
        t.boxes = n.mutateBoxes(t.boxes, (i) => {
          var o;
          if (i.id !== e) return i;
          i.roles.push("pending");
          return (
            n.setBoxStateForPresenterPerspectiveMode(t, {
              id: i.id,
              opacity:
                null !==
                  (o =
                    t.opacityForPendingSubtopicsUnderPresenterPerspectiveMode) &&
                void 0 !== o
                  ? o
                  : 0.5,
            }),
            n.setBoxStateForRevertedPresenterPerspectiveMode(t, {
              id: i.id,
              opacity: 0,
            }),
            Object.assign(Object.assign({}, i), { opacity: 0 })
          );
        });
      };
    },
    55287: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computePlaceholder = void 0),
        (e.computePlaceholder = function (t) {
          return t.image ? "image" : "none";
        });
    },
    7381: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeCenteredScrollOffsetForTextBox =
          e.computeSubtopicListScrollingStates =
            void 0);
      const n = i(6776);
      function o(t, e, i, n) {
        const o = t + n,
          l = Math.min(t, o),
          r = i - e;
        return Math.max(0, Math.min(r, l));
      }
      (e.computeSubtopicListScrollingStates = function (t, e, i, l) {
        t.boxes = n.mutateBoxes(t.boxes, (t) => {
          if (t.id !== e || "group" !== t.contentType) return t;
          const n = t.children.find((t) => t.id === i);
          if (!n) return t;
          if (t.contentHeight > t.bounds.height) {
            const e = o(n.bounds.y, t.bounds.height, t.contentHeight, l(t, n));
            return Object.assign(Object.assign({}, t), { scrollOffset: e });
          }
          if (t.contentWidth > t.bounds.width) {
            const e = o(n.bounds.x, t.bounds.width, t.contentWidth, l(t, n));
            return Object.assign(Object.assign({}, t), { scrollOffset: e });
          }
          return t;
        });
      }),
        (e.computeCenteredScrollOffsetForTextBox = o);
    },
    28850: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.addBackgroundBoxes = void 0);
      const n = i(6776),
        o = i(75327),
        l = i(97857),
        r = i(91199),
        a = i(51116);
      function s(t, e) {
        var i, o, l;
        const r = e["16:9"],
          a = null !== (i = n.slideSizeIdOf(t)) && void 0 !== i ? i : "16:9",
          s = e[a];
        return s || "4:3" !== a
          ? s || "3:4" !== a
            ? null != s
              ? s
              : r
            : null !== (l = e["9:16"]) && void 0 !== l
              ? l
              : r
          : null !== (o = e["16:9"]) && void 0 !== o
            ? o
            : r;
      }
      function c(t, e, i, n, o, r) {
        const { id: a } = e,
          {
            clipPath: s,
            relativePosition: c,
            privilegedAnimation: d,
            opacity: u,
            scale: p,
            rotate: h,
            fillColor: g,
            strokeColor: f,
          } = o;
        return {
          id: `background-shape:${a}:${t}`,
          roles: ["backgroundShape"],
          bounds: l.zeroRect(),
          absBounds: l.zeroRect(),
          contentType: "background-shape",
          shapeId: a,
          content: n,
          clipPath: s,
          relativePosition: c,
          opacity: u,
          transform: [
            { scale: null != p ? p : 1 },
            { rotate: null != h ? h : 0 },
            { translate: i },
          ],
          fillColor: g,
          strokeColor: f,
          privilegedAnimation: r ? void 0 : d,
        };
      }
      function d(t, e, i, n) {
        var o, l, a, s, c, d;
        const u =
          null !==
            (l =
              null === (o = e.relativePosition) || void 0 === o
                ? void 0
                : o.referenceAnchor) && void 0 !== l
            ? l
            : { x: "left", y: "middle" };
        let p = 0,
          h = 0;
        (p =
          "center" === u.x
            ? i.x + i.width / 2 - n.width / 2
            : "left" === u.x
              ? i.x
              : i.x + i.width),
          (h =
            "middle" === u.y
              ? i.y + i.height / 2 - n.height / 2
              : "top" === u.y
                ? i.y
                : i.y + i.height);
        return {
          x:
            p +
            r.calcLength(
              null !==
                (s =
                  null === (a = e.translate) || void 0 === a ? void 0 : a.x) &&
                void 0 !== s
                ? s
                : 0,
              t,
            ),
          y:
            h +
            r.calcLength(
              null !==
                (d =
                  null === (c = e.translate) || void 0 === c ? void 0 : c.y) &&
                void 0 !== d
                ? d
                : 0,
              t,
            ),
        };
      }
      e.addBackgroundBoxes = function (
        t,
        { subtopics: e, mainBranchIndex: i },
        u,
      ) {
        var p, h;
        null === (p = t.backgroundShapeTemplates) ||
          void 0 === p ||
          p.forEach((l) => {
            var p;
            const h = s(t, l.styles);
            if (!h) return;
            const {
              content: g,
              groupIndex: f,
              relativePosition: m,
              elevation: b,
              translate: v,
            } = h;
            if (
              void 0 !== f &&
              f !==
                (t.backgroundShapeGroupCount
                  ? (null != i ? i : 0) % t.backgroundShapeGroupCount
                  : i)
            )
              return;
            const { width: x, height: y } = o.computeSVGShapeSize(g);
            if (m) {
              if (void 0 !== m.referenceBoxRole) {
                if ("title" === m.referenceBoxRole) {
                  const e = n.getBoxById(t.boxes, n.titleOfTopic(t.topicId));
                  if (e) {
                    const i = d(t, h, e.absBounds, { width: x, height: y }),
                      n = c(t.topicId, l, i, g, h, u);
                    (n.bounds.width = x),
                      (n.bounds.height = y),
                      t.boxes.unshift(n),
                      a.computeAbsoluteBounds([n]);
                  }
                }
                if (
                  "subtopic" === m.referenceBoxRole &&
                  void 0 !== m.relativeIndex
                )
                  for (
                    let i = m.relativeIndex;
                    i < e.length;
                    i +=
                      null !== (p = t.backgroundShapeGroupCount) && void 0 !== p
                        ? p
                        : e.length
                  ) {
                    const { id: o } = e[i],
                      s = n.getBoxById(t.boxes, n.titleOfTopic(o));
                    if (s) {
                      const e = c(
                        o,
                        l,
                        v && "string" != typeof v.x && "string" != typeof v.y
                          ? { x: r.calcLength(v.x, t), y: r.calcLength(v.y, t) }
                          : {
                              x: s.bounds.x,
                              y: s.bounds.y + s.bounds.height / 2 - y / 2,
                            },
                        g,
                        h,
                        u,
                      );
                      (e.bounds.width = x), (e.bounds.height = y);
                      const i = n.getBoxById(
                        t.boxes,
                        n.subtopicListGroupOfTopic(t.topicId),
                        "group",
                      );
                      i &&
                        (i.children.unshift(e),
                        a.computeAbsoluteBounds([e], i.absBounds));
                    }
                  }
                if ("topicSecondaryContentDecorGroup" === m.referenceBoxRole) {
                  const e = n.findBox(t.boxes, (t) =>
                    t.roles.includes("topicSecondaryContentDecorGroup"),
                  );
                  if (e && "group" === e.contentType) {
                    const i =
                        v && "string" != typeof v.x && "string" != typeof v.y
                          ? { x: r.calcLength(v.x, t), y: r.calcLength(v.y, t) }
                          : {
                              x: e.bounds.x,
                              y: e.bounds.y + e.bounds.height / 2 - y / 2,
                            },
                      n = c(t.topicId, l, i, g, h, u);
                    (n.bounds.width = x),
                      (n.bounds.height = y),
                      e.children.unshift(n),
                      a.computeAbsoluteBounds([n], e.absBounds);
                  }
                }
              }
              if ("contentGroup" === m.referenceBoxRole) {
                const e = n.getBoxById(
                  t.boxes,
                  n.contentGroupOfTopic(t.topicId),
                );
                if (e) {
                  const i = d(t, h, e.absBounds, { width: x, height: y }),
                    n = c(t.topicId, l, i, g, h, u);
                  (n.bounds.width = x),
                    (n.bounds.height = y),
                    t.boxes.unshift(n),
                    a.computeAbsoluteBounds([n]);
                }
              }
            } else if (v && "string" != typeof v.x && "string" != typeof v.y) {
              const e = c(
                t.topicId,
                l,
                { x: r.calcLength(v.x, t), y: r.calcLength(v.y, t) },
                g,
                h,
                u,
              );
              (e.bounds.width = x),
                (e.bounds.height = y),
                "background" === b
                  ? t.backgroundBoxes.push(e)
                  : t.boxes.unshift(e),
                a.computeAbsoluteBounds([e]);
            }
          }),
          null === (h = t.backgroundColorBricks) ||
            void 0 === h ||
            h.forEach((e) => {
              const i = s(t, e.styles);
              if (!i) return;
              const n = (function (t, e) {
                  const {
                      id: i,
                      relativePosition: n,
                      elevation: o,
                      transitionEasing: r,
                    } = t,
                    { color: a } = e;
                  return {
                    id: `background-color-brick:${i}`,
                    roles: ["backgroundColorBrick"],
                    bounds: l.zeroRect(),
                    absBounds: l.zeroRect(),
                    contentType: "background-color-brick",
                    relativePosition: n,
                    elevation: o,
                    color: a,
                    transitionEasing: r,
                  };
                })(e, i),
                {
                  offsetRatio: o = { x: 0, y: 0 },
                  sizeRatio: r = { width: 1, height: 1 },
                } = i;
              (n.bounds.x = t.width * o.x),
                (n.bounds.y = t.height * o.y),
                (n.bounds.width = t.width * r.width),
                (n.bounds.height = t.height * r.height),
                t.boxes.unshift(n),
                a.computeAbsoluteBounds([n]);
            });
      };
    },
    35561: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.addHeaderBoxes = void 0);
      const n = i(6776),
        o = i(91199),
        l = i(97857),
        r = i(53399),
        a = i(90189),
        s = i(41432),
        c = i(12851),
        d = i(55287);
      e.addHeaderBoxes = function (t, e, i, u, p, h = {}) {
        var g, f;
        const m = h.compact
            ? o.calcLength(i.headerZoneCompactWidth, t)
            : o.calcLength(i.headerZoneWidth, t),
          b = Math.round(o.calcLength(i.headerZoneHeight, t)),
          v = Math.round(o.calcLength(i.headerTextFontSize, t)),
          x = o.calcLength(i.hPaddingSmall, t),
          y = o.calcLength(i.headerMarkerRightMargin, t),
          S = o.calcLength(i.headerTextTopMargin, t),
          w = o.calcLength(i.headerTextLeftMargin, t),
          C = o.calcLength(i.headerLineTopMargin, t),
          T = Math.round(o.calcLength(i.headerLineLength, t)),
          L = Math.round(o.calcLength(i.headerLineWidth, t)),
          B = o.calcLength(i.headerImagePlaceHolderTopMargin, t),
          M = null !== (g = e.markers) && void 0 !== g ? g : [];
        function k(i) {
          return a.computeTopicTitleGroup(t, u, p, e.id, e.title, i, null, M, {
            maxWidth: m,
            fontSize: v,
            markerRightMargin: y,
            traillingIconLeftMargin: x,
            overflowWrap: "normal",
            lineHeight: b,
            textRoles: ["header"],
            requestForHit: { kind: "fastBackward", topicId: e.id },
          });
        }
        const F = d.computePlaceholder(e);
        if (
          a.shouldShowPlaceholder(e.title.length > 0, M.length > 0) &&
          "image" === F
        ) {
          const i = {
            id: n.titleOfTopic(e.id),
            roles: ["header"],
            bounds: { x: w, y: B, width: T, height: T },
            absBounds: l.zeroRect(),
            contentType: "svg-template",
            fillColor: t.foregroundColor,
            svg: a.getPlaceholderImageSource(),
            requestForHit: { kind: "fastBackward", topicId: e.id },
          };
          o.initializeBoxStyle(i, t, u, { layout: p }), t.boxes.push(i);
        } else {
          const i = s.computeTopicTitle(e),
            n = r.rangedIntegers(i.length, 1),
            o = r.mapValues(n, (t) => c.getTruncatedText(i, t)),
            l = r.mapValues(o, k),
            a =
              null !==
                (f = r.findClosestMatch(l, function (t) {
                  return t.textMeasurement.lineCount <= 1;
                })) && void 0 !== f
                ? f
                : k(c.getTruncatedText(i, 1));
          (a.groupBox.bounds.x = w),
            (a.groupBox.bounds.y = S),
            t.boxes.push(a.groupBox);
        }
        const P = {
          id: n.headerLineOfTopic(e.id),
          roles: ["headerLine"],
          bounds: { x: w, y: S + b + C, width: T, height: L },
          absBounds: l.zeroRect(),
          contentType: "shape",
          shapePath: `M${L / 2} ${L / 2} l${T - L} 0`,
          lineWidth: L,
        };
        o.initializeBoxStyle(P, t, u, { layout: p }), t.boxes.push(P);
      };
    },
    29744: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeTextLineHeight = void 0),
        (e.computeTextLineHeight = function (t) {
          return t >= 50 && t < 90 ? "1.4em" : t >= 90 ? "1.3em" : "1.5em";
        });
    },
    90351: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeHandDrawnTimelineTimePointShape =
          e.computeDefaultTimelineTimePointShape =
          e.computeTimelineTimePointShape =
          e.computeTimelineVerticalLineShape =
          e.computeTimelineMainLineShape =
            void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199);
      (e.computeTimelineMainLineShape = function (
        t,
        e,
        i,
        r,
        a,
        s,
        c,
        d,
        u = {},
      ) {
        var p;
        const h = null !== (p = u.additionalRoles) && void 0 !== p ? p : [],
          g = `M ${c}, ${c / 2} L ${d - c}, ${c / 2}`,
          f = {
            id: n.timelineMainLineOfTopic(t),
            roles: ["timelineMain", ...h],
            bounds: { x: a, y: s, width: d, height: c },
            absBounds: o.zeroRect(),
            contentType: "shape",
            shapePath: g,
          };
        return l.initializeBoxStyle(f, e, i, { layout: r }), f;
      }),
        (e.computeTimelineVerticalLineShape = function (
          t,
          e,
          i,
          r,
          a,
          s,
          c,
          d,
          u,
          p,
          h = {},
        ) {
          var g;
          const f = null !== (g = h.additionalRoles) && void 0 !== g ? g : [],
            m = d,
            b =
              "above" === u
                ? `M ${c / 2}, ${m - p} L ${c / 2}, ${c}`
                : `M ${c / 2}, ${p} L ${c / 2}, ${m - c}`,
            v = {
              id: n.timelineVerticalLineOfTopic(t),
              roles: ["timelineVertical", ...f],
              bounds: { x: a, y: s, width: c, height: m },
              absBounds: o.zeroRect(),
              contentType: "shape",
              shapePath: b,
            };
          return l.initializeBoxStyle(v, e, i, { layout: r }), v;
        });
      const r = { default: { compute: a }, "hand-drawn": { compute: s } };
      function a(t, e, i, r, a) {
        const { timePointRadius: s, additionalRoles: c = [] } = a,
          d = `M 0, ${s} A ${s}, ${s} 0 1,1 ${2 * s}, ${s} A ${s}, ${s} 0 1,1 0, ${s} `,
          u = {
            id: n.timelineTimePointOfTopic(t),
            roles: ["timelineTimePoint", ...c],
            bounds: { x: 0, y: 0, width: 2 * s, height: 2 * s },
            absBounds: o.zeroRect(),
            contentType: "shape",
            shapePath: d,
          };
        return l.initializeBoxStyle(u, e, i, { layout: r }), u;
      }
      function s(t, e, i, r, a) {
        const { index: s, timePointRadius: c, additionalRoles: d = [] } = a,
          u = [
            '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M3.08754 16.8914C-4.14712 10.4499 2.98498 3.15086 7.66728 0.150389C7.82422 0.0498214 8.00259 -0.00233094 8.18865 0.00893921C10.3862 0.142057 15.1689 1.80232 18.856 7.67789C23.6741 15.3558 12.2858 25.0811 3.08754 16.8914Z" fill="#2F4DB5"/>\n      </svg>',
            '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M19.9856 11.1247C19.4703 1.03775 8.17467 -0.433261 2.59129 0.0921004C1.94706 0.0921004 0.529742 2.29862 0.0143536 11.1247C-0.629882 22.1573 20.6299 23.7334 19.9856 11.1247Z" fill="#2F4DB5"/>\n      </svg>',
            '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M2.33868 1.53037C-0.243585 7.68691 -2.86273 20 7.31875 20C27.239 20 22.259 -6.55009 2.33868 1.53037Z" fill="#2F4DB5"/>\n      </svg>',
            '<svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M3.03566 17.9995C-3.75006 11.1889 2.40736 3.49542 6.33428 0.5C16.1359 0.5 19.5288 7.43675 20 10.9051C17.1726 16.1077 9.82139 24.8102 3.03566 17.9995Z" fill="#2F4DB5"/>\n      </svg>',
          ],
          p = u[s % u.length],
          h = {
            id: n.timelineTimePointOfTopic(t),
            roles: ["timelineTimePoint", ...d],
            bounds: { x: 0, y: 0, width: 2 * c, height: 2 * c },
            absBounds: o.zeroRect(),
            contentType: "svg-template",
            svg: p,
          };
        return l.initializeBoxStyle(h, e, i, { layout: r }), h;
      }
      (e.computeTimelineTimePointShape = function (t, e, i, n, o) {
        var l;
        return r[
          null !== (l = e.timelineTimePointShapeStyle) && void 0 !== l
            ? l
            : "default"
        ].compute(t, e, i, n, o);
      }),
        (e.computeDefaultTimelineTimePointShape = a),
        (e.computeHandDrawnTimelineTimePointShape = s);
    },
    12284: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeCalloutTextBox = void 0);
      const n = i(6776),
        o = i(75327),
        l = i(97857),
        r = i(91199),
        a = i(14594),
        s = i(29744);
      e.computeCalloutTextBox = function (t, e, i, c, d, u) {
        var p;
        const { maxWidth: h, fontSize: g } = u,
          f = null !== (p = u.roles) && void 0 !== p ? p : [],
          m = {
            id: n.calloutOfTopic(c),
            roles: ["callout", ...f],
            bounds: l.zeroRect(),
            absBounds: l.zeroRect(),
            contentType: "text",
            text: d,
            fontSize: o.toCSSLength(g),
            lineHeight: s.computeTextLineHeight(g),
            overflowWrap: "break-word",
          };
        "textAlignment" in u && (m.textAlignment = u.textAlignment),
          r.initializeBoxStyle(m, t, e, { layout: i });
        const b = a.measureText(m, { maxWidth: h });
        return (m.bounds.width = b.width), (m.bounds.height = b.height), m;
      };
    },
    68852: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeTopicImageSource = void 0);
      const n = i(75327);
      e.computeTopicImageSource = function (t, e) {
        if (n.isSvg(t.source)) {
          const i = new DOMParser().parseFromString(
            t.source,
            "image/svg+xml",
          ).documentElement;
          e && i.setAttribute("fill", e);
          const n = new XMLSerializer().serializeToString(i);
          return `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(n)))}`;
        }
        return t.source;
      };
    },
    4898: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeNoteTextBox = void 0);
      const n = i(6776),
        o = i(75327),
        l = i(97857),
        r = i(91199),
        a = i(14594),
        s = i(29744);
      e.computeNoteTextBox = function (t, e, i, c, d, u, p) {
        var h;
        const { maxWidth: g, fontSize: f, contentPrincipal: m } = p,
          b = null !== (h = p.roles) && void 0 !== h ? h : [],
          v = {
            id: n.noteOfTopic(c),
            roles: ["note", ...b],
            bounds: l.zeroRect(),
            absBounds: l.zeroRect(),
            contentType: "text",
            text: d,
            html: u,
            fontSize: o.toCSSLength(f),
            lineHeight: s.computeTextLineHeight(f),
            overflowWrap: "break-word",
          };
        "textAlignment" in p && (v.textAlignment = p.textAlignment),
          r.initializeBoxStyle(v, t, e, { layout: i, contentPrincipal: m });
        const x = v.html
          ? a.measureHtml(Object.assign({ hyperText: v.html }, v), {
              maxWidth: g,
            })
          : a.measureText(v, { maxWidth: g });
        return (
          (v.bounds.width = x.width),
          (v.bounds.height = x.height),
          (v.lineCount = x.lineCount),
          v
        );
      };
    },
    70188: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.searchForBestTopicSlideContent = e.computeTopicSlideContentGroup =
          void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = i(53399),
        a = i(28900),
        s = i(14065);
      (e.computeTopicSlideContentGroup = function (t, e, i, r, c, d) {
        const {
            maxWidth: u,
            maxHeight: p,
            paddings: h,
            contentAlignment: g,
            spacingBetweenTitleAndLabelList: f,
            spacingBetweenTitleAndNote: m,
            spacingBetweenLabelListAndNote: b,
            spacingBetweenCalloutAndTitle: v,
            scrollFaderSize: x,
            imagePlacement: y,
            spacingAroundImage: S,
          } = d,
          w = [],
          C = [],
          T = c.imageBox ? Object.assign({}, c.imageBox) : null;
        T &&
          "aboveTitle" === y &&
          (w.push(T),
          C.push(null != S ? S : 0),
          (T.bounds = Object.assign({}, T.bounds)));
        const L = c.calloutTextBox ? Object.assign({}, c.calloutTextBox) : null;
        L &&
          (w.push(L),
          C.push(null != v ? v : 0),
          (L.bounds = Object.assign({}, L.bounds)),
          (L.textAlignment = g));
        const B = c.titleGroup
          ? Object.assign(Object.assign({}, c.titleGroup), {
              groupBox: Object.assign({}, c.titleGroup.groupBox),
            })
          : null;
        B &&
          ((B.groupBox.bounds = Object.assign({}, B.groupBox.bounds)),
          w.push(B.groupBox));
        const M = c.labelListGroupBox
          ? Object.assign({}, c.labelListGroupBox)
          : null;
        M &&
          (C.push(null != f ? f : 0),
          w.push(M),
          (M.bounds = Object.assign({}, M.bounds))),
          T &&
            "belowTitle" === y &&
            (w.push(T),
            C.push(null != S ? S : 0),
            (T.bounds = Object.assign({}, T.bounds)));
        const k = c.noteTextBox ? Object.assign({}, c.noteTextBox) : null;
        if (k) {
          const t =
            T && "belowTitle" === y
              ? null != S
                ? S
                : 0
              : M
                ? null != b
                  ? b
                  : 0
                : null != m
                  ? m
                  : 0;
          C.push(t),
            w.push(k),
            (k.bounds = Object.assign({}, k.bounds)),
            (k.textAlignment = g);
        }
        const F = a.layoutFlex(w, {
            spacings: C,
            maxWidth: u,
            maxHeight: p,
            paddings: h,
            direction: "column",
            alignItems:
              "leading" === g ? "start" : "trailing" === g ? "end" : "center",
          }),
          P = Math.min(u, F.width),
          I = Math.min(p, F.height),
          O = {
            id: n.contentGroupOfTopic(r),
            roles: [],
            bounds: { x: 0, y: 0, width: P, height: I },
            absBounds: o.zeroRect(),
            contentType: "group",
            children: w,
            contentWidth: F.width,
            contentHeight: F.height,
            overflow: F.height > p ? "scroll" : "visible",
            scrollFaderSize: x,
            bottomScrollFaderOffset: s.computeBottomMaskOffset(t, x),
            scrollPageLength: t.width < t.height ? 0.7 * I : void 0,
            scrollFaderType: "twoStops",
          };
        return (
          l.initializeBoxStyle(O, t, e, { layout: i }),
          {
            groupBox: O,
            titleGroup: B,
            labelListGroupBox: M,
            noteTextBox: k,
            calloutTextBox: L,
            imageBox: T,
          }
        );
      }),
        (e.searchForBestTopicSlideContent = function (t, e, i, n) {
          var o;
          const {
              maxHeight: l,
              singleLineTitleMaxFontSize: a,
              singleLineTitleMinFontSize: s,
              doubleLineTitleMaxFontSize: c,
              doubleLineTitleMinFontSize: d,
              multilineTitleMaxFontSize: u,
              multilineTitleMinFontSize: p,
              scrollableTitleFontSize: h,
            } = n,
            g = null !== (o = n.compactMaxHeight) && void 0 !== o ? o : null;
          let f = r.rangedIntegers(a, s),
            m = r.mapValues(f, (e) => t(e)),
            b = r.findClosestMatch(m, (t) => e(t) <= 1);
          if (b) return b;
          if (
            ((f = r.rangedIntegers(c, d)),
            (m = r.mapValues(f, (e) => t(e))),
            (b = r.findClosestMatch(m, (t) => e(t) <= 2)),
            b)
          )
            return b;
          if (null !== g) {
            if (
              ((f = r.rangedIntegers(u, p)),
              (m = r.mapValues(f, (e) => t(e))),
              (b = r.findClosestMatch(m, (t) => i(t) <= g)),
              b)
            )
              return b;
            const e = t(p);
            if (i(e) <= l) return e;
          } else if (
            ((f = r.rangedIntegers(u, p)),
            (m = r.mapValues(f, (e) => t(e))),
            (b = r.findClosestMatch(m, (t) => i(t) <= l)),
            b)
          )
            return b;
          return t(h);
        });
    },
    90189: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.getHyperlinkImageSource =
          e.getPlaceholderImageSource =
          e.shouldShowPlaceholder =
          e.computeTopicTitleGroup =
            void 0);
      const n = i(6776),
        o = i(14065),
        l = i(75327),
        r = i(97857),
        a = i(91199),
        s = i(14594),
        c = i(29744);
      function d(t, e) {
        return !t && !e;
      }
      function u() {
        return '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">\n  <path fill-rule="evenodd" clip-rule="evenodd" d="M31.3636 7H8.63636C6.62806 7 5 8.72453 5 10.8519V29.1481C5 31.2755 6.62805 33 8.63636 33H31.3636C33.3719 33 35 31.2755 35 29.1481V10.8519C35 8.72453 33.3719 7 31.3636 7ZM7.27273 10.8519C7.27273 10.0541 7.88325 9.40741 8.63636 9.40741H31.3636C32.1168 9.40741 32.7273 10.0541 32.7273 10.8519V20.6372L26.3613 15.2447C25.9431 14.8905 25.3566 14.9241 24.9733 15.3242L17.6883 22.9287L13.3107 19.7103C12.9189 19.4223 12.4048 19.4502 12.04 19.7792L7.27273 24.0795V10.8519ZM7.27273 26.9802V29.1481C7.27273 29.9459 7.88325 30.5926 8.63636 30.5926H31.3636C32.1168 30.5926 32.7273 29.9459 32.7273 29.1481V23.4906C32.5666 23.4577 32.4102 23.3833 32.2713 23.2656L25.782 17.7687L18.5407 25.3275C18.177 25.707 17.6272 25.7591 17.2113 25.4533L12.7825 22.1973L7.75455 26.7327C7.60978 26.8632 7.44386 26.9451 7.27273 26.9802Z"/>\n  <path d="M32.7273 20.6372L32.6626 20.7135C32.6924 20.7386 32.734 20.7443 32.7693 20.7279C32.8047 20.7115 32.8273 20.6761 32.8273 20.6372H32.7273ZM26.3613 15.2447L26.4259 15.1684L26.3613 15.2447ZM24.9733 15.3242L25.0455 15.3934L24.9733 15.3242ZM17.6883 22.9287L17.629 23.0092C17.6695 23.039 17.7257 23.0341 17.7605 22.9979L17.6883 22.9287ZM13.3107 19.7103L13.2514 19.7909L13.3107 19.7103ZM12.04 19.7792L12.107 19.8535H12.107L12.04 19.7792ZM7.27273 24.0795H7.17273C7.17273 24.119 7.19599 24.1548 7.23209 24.1708C7.2682 24.1869 7.31037 24.1802 7.33971 24.1537L7.27273 24.0795ZM7.27273 26.9802L7.25265 26.8822C7.20613 26.8918 7.17273 26.9327 7.17273 26.9802H7.27273ZM32.7273 23.4906H32.8273C32.8273 23.4431 32.7939 23.4022 32.7474 23.3926L32.7273 23.4906ZM32.2713 23.2656L32.2067 23.3419L32.2713 23.2656ZM25.782 17.7687L25.8466 17.6924C25.8063 17.6582 25.7463 17.6614 25.7098 17.6995L25.782 17.7687ZM18.5407 25.3275L18.6129 25.3966L18.5407 25.3275ZM17.2113 25.4533L17.2706 25.3728L17.2113 25.4533ZM12.7825 22.1973L12.8417 22.1167C12.8035 22.0886 12.7508 22.0913 12.7155 22.123L12.7825 22.1973ZM7.75455 26.7327L7.68757 26.6584H7.68757L7.75455 26.7327ZM8.63636 7.1H31.3636V6.9H8.63636V7.1ZM5.1 10.8519C5.1 8.77426 6.68863 7.1 8.63636 7.1V6.9C6.56748 6.9 4.9 8.67481 4.9 10.8519H5.1ZM5.1 29.1481V10.8519H4.9V29.1481H5.1ZM8.63636 32.9C6.68863 32.9 5.1 31.2257 5.1 29.1481H4.9C4.9 31.3252 6.56748 33.1 8.63636 33.1V32.9ZM31.3636 32.9H8.63636V33.1H31.3636V32.9ZM34.9 29.1481C34.9 31.2257 33.3114 32.9 31.3636 32.9V33.1C33.4325 33.1 35.1 31.3252 35.1 29.1481H34.9ZM34.9 10.8519V29.1481H35.1V10.8519H34.9ZM31.3636 7.1C33.3114 7.1 34.9 8.77426 34.9 10.8519H35.1C35.1 8.67481 33.4325 6.9 31.3636 6.9V7.1ZM8.63636 9.30741C7.82267 9.30741 7.17273 10.0044 7.17273 10.8519H7.37273C7.37273 10.1038 7.94382 9.50741 8.63636 9.50741V9.30741ZM31.3636 9.30741H8.63636V9.50741H31.3636V9.30741ZM32.8273 10.8519C32.8273 10.0044 32.1773 9.30741 31.3636 9.30741V9.50741C32.0562 9.50741 32.6273 10.1038 32.6273 10.8519H32.8273ZM32.8273 20.6372V10.8519H32.6273V20.6372H32.8273ZM26.2966 15.321L32.6626 20.7135L32.7919 20.5609L26.4259 15.1684L26.2966 15.321ZM25.0455 15.3934C25.393 15.0308 25.9195 15.0016 26.2966 15.321L26.4259 15.1684C25.9667 14.7794 25.3203 14.8174 24.9011 15.2551L25.0455 15.3934ZM17.7605 22.9979L25.0455 15.3934L24.9011 15.2551L17.6161 22.8595L17.7605 22.9979ZM13.2514 19.7909L17.629 23.0092L17.7475 22.8481L13.3699 19.6297L13.2514 19.7909ZM12.107 19.8535C12.4371 19.5557 12.8985 19.5314 13.2514 19.7909L13.3699 19.6297C12.9393 19.3132 12.3726 19.3446 11.973 19.705L12.107 19.8535ZM7.33971 24.1537L12.107 19.8535L11.973 19.705L7.20575 24.0052L7.33971 24.1537ZM7.17273 10.8519V24.0795H7.37273V10.8519H7.17273ZM7.17273 26.9802V29.1481H7.37273V26.9802H7.17273ZM7.17273 29.1481C7.17273 29.9956 7.82267 30.6926 8.63636 30.6926V30.4926C7.94382 30.4926 7.37273 29.8962 7.37273 29.1481H7.17273ZM8.63636 30.6926H31.3636V30.4926H8.63636V30.6926ZM31.3636 30.6926C32.1773 30.6926 32.8273 29.9956 32.8273 29.1481H32.6273C32.6273 29.8962 32.0562 30.4926 31.3636 30.4926V30.6926ZM32.8273 29.1481V23.4906H32.6273V29.1481H32.8273ZM32.7474 23.3926C32.6034 23.3631 32.4623 23.2964 32.3359 23.1893L32.2067 23.3419C32.3582 23.4703 32.5298 23.5522 32.7072 23.5886L32.7474 23.3926ZM32.3359 23.1893L25.8466 17.6924L25.7173 17.845L32.2067 23.3419L32.3359 23.1893ZM25.7098 17.6995L18.4685 25.2583L18.6129 25.3966L25.8542 17.8379L25.7098 17.6995ZM18.4685 25.2583C18.1386 25.6026 17.6449 25.648 17.2706 25.3728L17.1521 25.5339C17.6096 25.8702 18.2155 25.8115 18.6129 25.3966L18.4685 25.2583ZM17.2706 25.3728L12.8417 22.1167L12.7233 22.2779L17.1521 25.5339L17.2706 25.3728ZM12.7155 22.123L7.68757 26.6584L7.82152 26.8069L12.8495 22.2716L12.7155 22.123ZM7.68757 26.6584C7.55579 26.7773 7.40598 26.8508 7.25265 26.8822L7.2928 27.0782C7.48173 27.0394 7.66378 26.9492 7.82153 26.8069L7.68757 26.6584Z"/>\n  <circle cx="16" cy="15" r="2"/>\n  </svg>';
      }
      function p(t) {
        switch (t) {
          case "webpage":
            return '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M11 10.6428C10.1716 10.6428 9.5 11.3144 9.5 12.1428V29C9.5 29.8284 10.1716 30.5 11 30.5H27.8571C28.6856 30.5 29.3571 29.8284 29.3571 29V21.2932C29.3571 20.4648 30.0287 19.7932 30.8571 19.7932C31.6856 19.7932 32.3571 20.4648 32.3571 21.2932V29C32.3571 31.4852 30.3424 33.5 27.8571 33.5H11C8.51472 33.5 6.5 31.4852 6.5 29V12.1428C6.5 9.65755 8.51472 7.64282 11 7.64282H18.7068C19.5352 7.64282 20.2068 8.3144 20.2068 9.14282C20.2068 9.97125 19.5352 10.6428 18.7068 10.6428H11Z"/>\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M32.6955 7.24488C33.2813 7.83067 33.2813 8.78042 32.6955 9.3662L21.6321 20.4296C21.0463 21.0154 20.0966 21.0154 19.5108 20.4296C18.925 19.8438 18.925 18.8941 19.5108 18.3083L30.5742 7.24488C31.16 6.6591 32.1097 6.6591 32.6955 7.24488Z"/>\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M23.4936 8C23.4936 7.30964 24.0532 6.75 24.7436 6.75H32.0451C32.7354 6.75 33.2951 7.30964 33.2951 8V15.3015C33.2951 15.9918 32.7354 16.5515 32.0451 16.5515C31.3547 16.5515 30.7951 15.9918 30.7951 15.3015V9.25H24.7436C24.0532 9.25 23.4936 8.69036 23.4936 8Z"/>\n      </svg>';
          case "local":
            return '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">\n      <g>\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M18.5048 8.54545C18.2971 8.54545 18.099 8.63687 17.9597 8.79708L10.6386 17.2173C10.5165 17.3576 10.449 17.5401 10.449 17.7293V30.6909C10.449 31.1127 10.7779 31.4545 11.1837 31.4545H28.8163C29.2221 31.4545 29.551 31.1127 29.551 30.6909V9.30909C29.551 8.88735 29.2221 8.54545 28.8163 8.54545H18.5048ZM16.1428 7.09038C16.7464 6.39615 17.6046 6 18.5048 6H28.8163C30.5746 6 32 7.48153 32 9.30909V30.6909C32 32.5185 30.5746 34 28.8163 34H11.1837C9.42538 34 8 32.5185 8 30.6909V17.7293C8 16.9095 8.2928 16.1188 8.82165 15.5106L16.1428 7.09038Z"/>\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M18.7755 7.27271V16.9454C18.7755 17.6483 18.2273 18.2182 17.551 18.2182H9.22449V15.6727H16.3265V7.27271H18.7755Z"/>\n      </g>\n      </svg>';
          case "topic":
            return '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">\n      <g>\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M17.9453 8.72494L17.9677 8.68423C19.9659 5.1558 24.3828 3.95594 27.8352 5.98911C31.2913 8.02438 32.4827 12.5344 30.4832 16.0669L29.0494 18.6001C28.6501 19.3054 27.7706 19.543 27.0846 19.139C26.3956 18.7332 26.1557 17.83 26.5565 17.1217L27.9904 14.5885C29.187 12.4744 28.4784 9.77014 26.3986 8.54534C24.3306 7.3275 21.6963 8.03684 20.4859 10.119L20.4844 10.1216L17.2132 15.8999C16.016 18.0149 16.7245 20.7218 18.8033 21.946C19.4924 22.3518 19.7323 23.2551 19.3314 23.9633C18.9322 24.6686 18.0526 24.9062 17.3667 24.5022C13.9101 22.4667 12.7217 17.9541 14.7197 14.4228L14.7391 14.3894L17.9453 8.72494ZM20.1317 16.7724C20.5309 16.0671 21.4105 15.8296 22.0964 16.2335C25.5534 18.2693 26.7417 22.7827 24.7428 26.3143C24.7342 26.3294 24.7252 26.3443 24.7162 26.359L21.4392 32.1468L21.4384 32.1482C19.4185 35.6126 15.0438 36.778 11.6183 34.7608C8.16225 32.7255 6.97084 28.2155 8.97031 24.683L10.5016 21.9777C10.9008 21.2724 11.7804 21.0348 12.4663 21.4388C13.1554 21.8446 13.3953 22.7478 12.9944 23.4561L11.4631 26.1614C10.2665 28.2754 10.9751 30.9797 13.0549 32.2045C15.1378 33.4312 17.7955 32.7028 18.9938 30.5858L19.006 30.5647L22.2499 24.836C23.4471 22.7209 22.7387 20.014 20.6598 18.7897C19.9707 18.3839 19.7308 17.4807 20.1317 16.7724Z"/>\n      </g>\n      </svg>';
          case "attachment":
            return '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">\n      <g>\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M17.8285 7.58637C21.0705 4.20234 26.4443 4.12948 29.7763 7.42438C33.1124 10.7233 33.1124 16.1229 29.7763 19.4218L21.3896 27.7152C19.6078 29.4772 16.7971 29.6331 14.8325 28.0789C12.4877 26.2239 12.2949 22.7266 14.4216 20.6236L20.5073 14.6057C21.0719 14.0474 21.9809 14.0539 22.5375 14.6204C23.0941 15.1869 23.0875 16.0987 22.5229 16.6571L16.4372 22.675C15.5409 23.5613 15.6222 25.0353 16.6104 25.8171C17.4384 26.4721 18.623 26.4064 19.374 25.6638L27.7607 17.3705C29.956 15.1997 29.956 11.6466 27.7607 9.47574C25.5681 7.30758 22.032 7.35552 19.8986 9.58233L10.8957 18.9796C8.05825 21.9414 8.22436 26.6704 11.2626 29.4245L12.1639 30.2414C14.9337 32.7521 19.1504 32.7448 21.9115 30.2245L30.5982 22.2953C31.1847 21.76 32.0926 21.8029 32.6262 22.3913C33.1598 22.9796 33.117 23.8905 32.5305 24.4258L23.8439 32.3549C19.9902 35.8726 14.1047 35.8828 10.2389 32.3786L9.33765 31.5617C5.09715 27.7178 4.8653 21.1174 8.82558 16.9836L17.8285 7.58637Z"/>\n      </g>\n      </svg>';
        }
      }
      (e.computeTopicTitleGroup = function (t, e, i, h, g, f, m, b, v) {
        var x, y, S, w, C;
        const {
            maxWidth: T,
            fontSize: L,
            markerRightMargin: B,
            traillingIconLeftMargin: M,
            placeholder: k,
            maxHeight: F,
            scrollFaderSize: P,
            disallowShortTrailingLine: I,
          } = v,
          O = null !== (x = v.textRoles) && void 0 !== x ? x : [],
          _ = null !== (y = v.markerRoles) && void 0 !== y ? y : [],
          z = null !== (S = v.imagePlaceholderRoles) && void 0 !== S ? S : [],
          E = null !== (w = v.groupRoles) && void 0 !== w ? w : [],
          A = b.length,
          W = L,
          R = L,
          V = L,
          H = L,
          D = (W + B) * A,
          $ = v.lineHeight
            ? l.toCSSLength(v.lineHeight)
            : c.computeTextLineHeight(L),
          j = {
            id: n.titleTextOfTopic(h),
            roles: [...O],
            bounds: r.zeroRect(),
            absBounds: r.zeroRect(),
            contentType: "text",
            text: f,
            fontSize: l.toCSSLength(L),
            textIndent: l.toCSSLength(D),
            lineHeight: $,
          };
        "textAlignment" in v
          ? (j.textAlignment = v.textAlignment)
          : (A > 0 || m) && (j.textAlignment = "leading"),
          "overflowWrap" in v && (j.overflowWrap = v.overflowWrap),
          a.initializeBoxStyle(j, t, e, { layout: i });
        const G = { width: L, height: L },
          Z = s.measureText(j, {
            maxWidth: T,
            traillingIconSize: m ? G : void 0,
            traillingIconLeftMargin: M,
            disallowShortTrailingLine: I,
          }),
          { lineHeight: q, width: N, height: X } = Z;
        (j.bounds.width = N),
          (j.bounds.height = X),
          (j.lineCount = Z.lineCount);
        const Q = [],
          J = q;
        let U,
          Y,
          K,
          tt = 0,
          et = 0;
        for (let o = 0; o < A; o++) {
          const l = b[o],
            s = {
              id: n.markerOfTopic(h, o),
              roles: ["marker", ..._],
              bounds: { x: et, y: (J - R) / 2, width: W, height: R },
              absBounds: r.zeroRect(),
              contentType: "image",
              imageSource: l.imageSource,
            };
          a.initializeBoxStyle(s, t, e, { layout: i }),
            (et += W + B),
            tt > 0 && (tt += B),
            (tt += W),
            Q.push(s);
        }
        d(f.length > 0, A > 0) && "image" === k
          ? ((Y = q),
            (K = q),
            (U = {
              id: n.imageOfTopic(h),
              roles: ["imagePlaceholder", ...z],
              bounds: { x: (Y - V) / 2, y: (K - H) / 2, width: V, height: H },
              absBounds: r.zeroRect(),
              contentType: "svg-template",
              fillColor: t.foregroundColor,
              svg: u(),
            }),
            a.initializeBoxStyle(U, t, e, { layout: i }))
          : ((Y = 0), (K = 0), (U = null));
        let it = null;
        m &&
          Z.traillingIconOffset &&
          ((it = {
            id: n.hyperlinkOfTopic(h),
            roles: ["hyperlink"],
            bounds: Object.assign(Object.assign({}, Z.traillingIconOffset), G),
            absBounds: r.zeroRect(),
            contentType: "svg-template",
            fillColor: t.foregroundColor,
            svg: p(m.type),
            requestForHit: {
              type: "hyperlink",
              href: m.href,
              topicId: h,
              title: g,
            },
          }),
          U && (it.bounds.x += U.bounds.width + M),
          a.initializeBoxStyle(it, t, e, { layout: i }),
          (it.bounds.y -=
            null !== (C = it.borderWidth) && void 0 !== C ? C : 0));
        const nt = Math.max(N, tt, Y),
          ot = Math.max(X, q, J, K),
          lt = F && ot > F ? F : ot,
          rt = {
            id: n.titleOfTopic(h),
            roles: [...E],
            bounds: { x: 0, y: 0, width: nt, height: lt },
            absBounds: r.zeroRect(),
            contentType: "group",
            children: [j, ...Q, ...(U ? [U] : []), ...(it ? [it] : [])],
            contentWidth: nt,
            contentHeight: ot,
            overflow: lt < ot ? "scroll" : "visible",
            scrollFaderSize: P,
            bottomScrollFaderOffset: o.computeBottomMaskOffset(t, P),
          };
        return (
          "requestForHit" in v && (rt.requestForHit = v.requestForHit),
          a.initializeBoxStyle(rt, t, e, { layout: i }),
          {
            groupBox: rt,
            textBox: j,
            markerImageBoxes: Q,
            textMeasurement: Z,
            imagePlaceholderBox: U,
          }
        );
      }),
        (e.shouldShowPlaceholder = d),
        (e.getPlaceholderImageSource = u),
        (e.getHyperlinkImageSource = p);
    },
    41432: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeTopicTitle = void 0),
        (e.computeTopicTitle = function (t) {
          var e, i, n, o;
          const l = t.title,
            r =
              null !==
                (i =
                  null === (e = t.markers) || void 0 === e
                    ? void 0
                    : e.length) && void 0 !== i
                ? i
                : 0;
          return 0 === l.length &&
            0 === r &&
            !t.image &&
            ((t.note &&
              (null !==
                (o =
                  null !== (n = t.note.html) && void 0 !== n
                    ? n
                    : t.note.plainText) && void 0 !== o
                ? o
                : ""
              ).length > 0) ||
              (t.labels && t.labels.length > 0))
            ? " ".repeat(6)
            : l;
        });
    },
    55136: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeTreeBranchShape = void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = "tree-chart",
        a = {
          default: {
            compute: function (t, e, i, a, s, c, d, u = {}) {
              var p;
              const h =
                null !== (p = u.additionalRoles) && void 0 !== p ? p : [];
              let g, f;
              if (((s = s + a / 2 + c / 2), d))
                g = `M ${c / 2}, ${c / 2}      L ${c / 2}, ${s - a / 2 - c / 2}      A ${a / 2} ${a / 2} 0 0 0 ${a / 2 + c / 2} ${s - c / 2}      L ${a - c / 2}, ${s - c / 2}`;
              else {
                const t = Math.sqrt(
                  Math.pow(a / 2 + c / 2, 2) - Math.pow(a / 2 - c / 2, 2),
                );
                g = `M ${c / 2}, ${t}      L ${c / 2}, ${s - a / 2 - c / 2}      A ${a / 2} ${a / 2} 0 0 0 ${a / 2 + c / 2} ${s - c / 2}      L ${a - c / 2}, ${s - c / 2}`;
                f = {
                  size: { width: c, height: t },
                  ref: { x: c / 2, y: t },
                  path: `M 0, 0      L 0, ${t}      L ${c}, ${t}      A ${a / 2 + c / 2} ${a / 2 + c / 2} 0 0 1 0,0`,
                };
              }
              const m = {
                id: n.treeBranchOfTopic(t),
                roles: ["treeBranch", ...h],
                bounds: { x: 0, y: 0, width: a, height: s },
                absBounds: o.zeroRect(),
                contentType: "shape",
                shapePath: g,
                markerStart: f,
              };
              return l.initializeBoxStyle(m, e, i, { layout: r }), m;
            },
          },
          "shape-for-you": {
            compute: function (t, e, i, a, s, c, d, u = {}) {
              var p;
              const h =
                null !== (p = u.additionalRoles) && void 0 !== p ? p : [];
              let g;
              g = `M ${c / 2}, 0       L ${c / 2}, ${s - c / 2}`;
              const f = {
                id: n.treeBranchOfTopic(t),
                roles: ["treeBranch", ...h],
                bounds: { x: 0, y: 0, width: a, height: s },
                absBounds: o.zeroRect(),
                contentType: "shape",
                shapePath: g,
                markerStart: undefined,
              };
              return l.initializeBoxStyle(f, e, i, { layout: r }), f;
            },
          },
          none: { compute: () => null },
        };
      e.computeTreeBranchShape = function (t, e, i, n, o, l, r, s = {}) {
        var c;
        return a[
          null !== (c = e.treeChartTreeBranchShapeStyle) && void 0 !== c
            ? c
            : "default"
        ].compute(t, e, i, n, o, l, r, s);
      };
    },
    12851: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.getTruncatedText = void 0),
        (e.getTruncatedText = function (t, e) {
          return e === t.length ? t : t.slice(0, e) + "...";
        });
    },
    17241: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateFishboneHeadSlide =
          e.layoutFishboneHeadSlide =
          e.computeFishboneHeadLayoutVariant =
          e.isFishboneHeadLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(53399),
        l = i(97857),
        r = i(91199),
        a = i(51116),
        s = i(68605),
        c = i(55287),
        d = i(35561),
        u = i(41432),
        p = i(90189),
        h = i(12851),
        g = i(89391),
        f = i(14065),
        m = i(7381),
        b = i(20110),
        v = i(28850),
        x = "fishbone-head";
      (e.isFishboneHeadLayoutEligibleFor = function (t, { parentTopic: e }) {
        return "list" === t && !!e;
      }),
        (e.computeFishboneHeadLayoutVariant = function (t) {
          return t.width < t.height ? "tree-chart" : "fishbone-head";
        }),
        (e.layoutFishboneHeadSlide = function (t, e, i = {}) {
          var g, m, v;
          const {
              topic: y,
              subtopics: S,
              headerTopic: w,
              parentTopic: C,
              siblingTopics: T,
            } = e,
            L = null !== (g = i.numberOfVisibleTopics) && void 0 !== g ? g : 0,
            B =
              null !== (m = null == i ? void 0 : i.theme) && void 0 !== m
                ? m
                : r.defaultTheme,
            M = r.appearanceOf(B),
            k = r.dimensionOf(B, { width: t.width, height: t.height });
          if (!C)
            throw new Error(
              `No parent topic in fishbone-head layout of ${y.id}.`,
            );
          r.initializeSlideStyle(t, k, M, { layout: x });
          const F = r.calcLength(k.hSlidePadding, t),
            P = r.calcLength(k.vSlidePadding, t),
            I = r.calcLength(k.fishboneHeadSlideFishboneHeadInterval, t),
            O = F,
            _ = r.calcLength(k.fishboneSlideFishboneLineWidth, t),
            z = r.calcLength(k.fishboneSlideFishboneHeadLineWidth, t),
            E = r.calcLength(k.fishboneHeadSlideFishboneHeadLength, t),
            A = k.fishboneHeadSlideFishboneHeadAngle,
            W = A * (Math.PI / 180),
            R = r.calcLength(k.fishboneHeadSlideFishboneHeadLeftOffset, t),
            V = r.calcLength(k.fishboneSlideParentTopicAreaWidth, t),
            H = Math.round(
              r.calcLength(k.fishboneHeadSlideParentTopicDefaultFontSize, t),
            ),
            D = t.width - F - R,
            $ = r.calcLength(k.hPaddingXSmall, t),
            j = t.width - F - V,
            G = F,
            Z = P,
            q = R,
            N = r.calcLength(k.vPaddingXSmall, t),
            X =
              r.calcLength(k.vPaddingMedium, t) -
              r.calcLength(k.vPaddingXSmall, t),
            Q = r.calcLength(k.fishboneHeadSlideSubtopicGroupTrailingOffset, t),
            J = q,
            U = r.calcLength(k.fishboneHeadSlideSubtopicTitleLeftMargin, t),
            Y = 0.8 * U,
            K = r.calcLength(k.fishboneHeadSlideSubtopicLeadingLineWidth, t),
            tt = t.width - J - F,
            et = Math.round(
              r.calcLength(k.fishboneHeadSlideSubtopicMaxFontSize, t),
            ),
            it = Math.round(
              r.calcLength(k.fishboneHeadSlideSubtopicMinFontSize, t),
            ),
            nt = r.calcLength(k.hPaddingXSmall, t),
            ot = r.calcLength(k.vPaddingNormal, t),
            lt = r.calcLength(k.vPaddingMedium, t),
            rt = r.calcLength(k.braceListSlideScrollFaderHeight, t),
            at = r.calcLength(k.hPaddingSmall, t),
            st = (function (t, e) {
              const i = e.map((t) => t.id),
                n = i.indexOf(t),
                o = n % 2 == 0 ? n : n - 1,
                l = e.slice(o, o + 4);
              return l;
            })(y.id, T),
            ct = (function (t, e, i, a, d, g) {
              const {
                maxWidth: f,
                fontSize: m,
                preferredLineCount: v,
                maxLineCount: y,
                subtopicMaxWidth: S,
                markerRightMargin: w,
                traillingIconLeftMargin: C,
                numberOfVisibleTopics: T,
                scrollFaderSize: L,
                fishboneLineWidth: B,
                fishboneHeadLineWidth: M,
                fishboneHeadLength: k,
                fishboneHeadAngle: F,
                fishboneInterval: P,
                leadingFishboneHeadOffset: I,
                parentTopicBottomMargin: O,
                siblingTopicGroupVerticalPadding: _,
              } = g;
              function z(t) {
                return t.textMeasurement.lineCount <= v;
              }
              function E(t) {
                return t.textMeasurement.lineCount <= y;
              }
              const A = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: u.computeTopicTitle(t),
                  hyperlink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: c.computePlaceholder(t),
                };
              });
              function W(e) {
                const c = [],
                  u = [],
                  g = [],
                  m = F * (Math.PI / 180),
                  v = k * Math.sin(m),
                  y = k * Math.cos(m);
                A.forEach(
                  (
                    {
                      topicId: t,
                      title: l,
                      text: r,
                      hyperlink: f,
                      markers: m,
                      placeholder: L,
                    },
                    B,
                  ) => {
                    var A;
                    const W = B > T,
                      R = m.slice(0, a.maxMarkerCount);
                    function V(o) {
                      return p.computeTopicTitleGroup(i, d, x, t, l, o, f, R, {
                        maxWidth: S,
                        fontSize: e,
                        markerRightMargin: w,
                        traillingIconLeftMargin: C,
                        textRoles: ["title"],
                        groupRoles: n.toBoxRoles({ pending: W }),
                        requestForHit: {
                          kind: "present",
                          topicId: t,
                          viaIntro: !0,
                        },
                        placeholder: L,
                      });
                    }
                    let H = V(r);
                    if (!E(H)) {
                      const t = o.rangedIntegers(r.length - 1, 1),
                        e = o.mapValues(t, (t) => h.getTruncatedText(r, t)),
                        i = o.mapValues(e, (t) => V(t));
                      H =
                        null !== (A = o.findClosestMatch(i, z)) && void 0 !== A
                          ? A
                          : V(h.getTruncatedText(r, 1));
                    }
                    c.push(H);
                    const D = 2 * (y + c[0].groupBox.bounds.height + _ + O),
                      $ = Math.floor(B / 2),
                      j = B % 2 == 0 ? "above" : "below",
                      G = I + P * $ + ("above" === j ? 0 : y) + v,
                      Z = D / 2 + ("above" === j ? -y : 0),
                      q = b.computeFishboneHeadShape(
                        t,
                        i,
                        d,
                        x,
                        G,
                        Z,
                        M,
                        k,
                        F,
                        j,
                      );
                    (H.groupBox.bounds.x = G + v),
                      (H.groupBox.bounds.y =
                        Z +
                        ("above" === j
                          ? -c[B].groupBox.bounds.height - O
                          : y + O)),
                      u.push(q),
                      g.push(
                        ...s.computeContentFeaturesForTitleGroup(H, t, r, m),
                      );
                  },
                );
                const W =
                    c[c.length - 1].groupBox.bounds.x +
                    c[c.length - 1].groupBox.bounds.width,
                  R = 2 * (y + c[0].groupBox.bounds.height + _ + O),
                  V = 0,
                  H = R / 2 - B / 2,
                  D = b.computeFishboneShape(t, i, d, x, V, H, B, W),
                  $ = {
                    id: n.subtopicListGroupOfTopic(t),
                    roles: ["subtopicListGroup"],
                    bounds: { x: 0, y: 0, width: W, height: R },
                    absBounds: l.zeroRect(),
                    contentType: "group",
                    children: [...c.map((t) => t.groupBox), ...u, D],
                    overflow: W > f ? "scroll" : "hidden",
                    scrollFaderSize: L,
                    contentWidth: W,
                    contentHeight: R,
                    scrollPageLength: P,
                  };
                return (
                  r.initializeBoxStyle($, i, d, { layout: x }),
                  { groupBox: $, subtopicGroups: c, contentFeatures: g }
                );
              }
              return W(m);
            })(C.id, st, t, k, M, {
              maxWidth: j,
              fontSize: H,
              preferredLineCount: 1,
              maxLineCount: 1,
              subtopicMaxWidth: D,
              markerRightMargin: $,
              traillingIconLeftMargin: at,
              numberOfVisibleTopics: L,
              scrollFaderSize: G,
              fishboneLineWidth: _,
              fishboneHeadLineWidth: z,
              fishboneHeadLength: E,
              fishboneHeadAngle: A,
              fishboneInterval: I,
              leadingFishboneHeadOffset: O,
              parentTopicBottomMargin: N,
              siblingTopicGroupVerticalPadding: Z,
            });
          (ct.groupBox.bounds.x = F + V), (ct.groupBox.bounds.y = 0);
          const dt = st.findIndex((t) => t.id === y.id),
            ut = st[dt],
            pt = ct.subtopicGroups[dt],
            ht = t.height - Z - pt.groupBox.bounds.height - N,
            gt = s.computeContentFeaturesForTitleGroup(
              pt,
              ut.id,
              pt.textBox.text,
              null !== (v = ut.markers) && void 0 !== v ? v : [],
            ),
            ft = dt % 2 == 0 ? "above" : "below",
            mt = (function (t, e, i, a, d, g) {
              const {
                fishboneHeadDirection: m,
                maxWidth: b,
                maxHeight: v,
                maxFontSize: y,
                minFontSize: S,
                preferredLineCount: w,
                maxLineCount: C,
                markerRightMargin: T,
                traillingIconLeftMargin: L,
                subtopicCompactSpacing: B,
                subtopicLooseSpacing: M,
                scrollFaderSize: k,
                subtopicGroupLeadingOffset: F,
                subtopicGroupTrailingOffset: P,
                subtopicGroupTitleLeftMargin: I,
                subtopicLeadingLineLength: O,
                subtopicLeadingLineWidth: _,
                numberOfVisibleTopics: z,
              } = g;
              function E(t) {
                return t.groupBox.contentHeight <= v;
              }
              function A(t) {
                return t.subtopicGroups.every(W);
              }
              function W(t) {
                return t.textMeasurement.lineCount <= w;
              }
              function R(t) {
                return t.textMeasurement.lineCount <= C;
              }
              const V = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: u.computeTopicTitle(t),
                  hyperlink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: c.computePlaceholder(t),
                };
              });
              function H(e) {
                const c = [],
                  u = [],
                  g = [],
                  y = [{ skew: { ax: "above" === m ? -20 : 20, ay: 0 } }],
                  S = "above" === m ? "left top" : "right bottom";
                V.forEach(
                  (
                    {
                      topicId: t,
                      title: f,
                      text: m,
                      hyperlink: v,
                      markers: w,
                      placeholder: C,
                    },
                    B,
                  ) => {
                    var M;
                    const k = B > z,
                      F = b - I,
                      P = w.slice(0, a.maxMarkerCount);
                    function E(o) {
                      return p.computeTopicTitleGroup(i, d, x, t, f, o, v, P, {
                        maxWidth: F,
                        fontSize: e,
                        markerRightMargin: T,
                        traillingIconLeftMargin: L,
                        textRoles: ["subtopic"],
                        groupRoles: n.toBoxRoles({ pending: k }),
                        requestForHit: {
                          kind: "present",
                          topicId: t,
                          viaIntro: !0,
                        },
                        placeholder: C,
                      });
                    }
                    let A = E(m);
                    if (!R(A)) {
                      const t = o.rangedIntegers(m.length - 1, 1),
                        e = o.mapValues(t, (t) => h.getTruncatedText(m, t)),
                        i = o.mapValues(e, (t) => E(t));
                      A =
                        null !== (M = o.findClosestMatch(i, W)) && void 0 !== M
                          ? M
                          : E(h.getTruncatedText(m, 1));
                    }
                    (A.groupBox.transformOrigin = S),
                      (A.groupBox.transform = l.invertTransform(y));
                    const V = A.groupBox.bounds;
                    (V.x = I), c.push(A);
                    const H = (function (t, e, i, o, a, s) {
                      const c = `M 0, ${s / 2} L ${o - a}, ${s / 2}`,
                        d = {
                          id: n.fishboneHeadSubtopicLeadingLineOfTopic(t),
                          roles: ["fishboneHeadSubtopicLeadingLine"],
                          bounds: { x: 0, y: 0, width: o, height: s },
                          absBounds: l.zeroRect(),
                          contentType: "shape",
                          shapePath: c,
                        };
                      return r.initializeBoxStyle(d, e, i, { layout: x }), d;
                    })(t, i, d, O, _, V.height);
                    (H.transformOrigin = "left center"),
                      (H.transform = l.invertTransform(y)),
                      (H.bounds.x = 0),
                      u.push(H),
                      g.push(
                        ...s.computeContentFeaturesForTitleGroup(A, t, m, w),
                      );
                  },
                );
                const w = c.length <= 3 && c.every(W) ? M : B,
                  C =
                    F +
                    P +
                    c
                      .map((t) => t.groupBox.bounds.height)
                      .reduce((t, e) => t + e, 0) +
                    w * (c.length - 1);
                if ("above" === m) {
                  let t = F;
                  c.forEach((e, i) => {
                    (e.groupBox.bounds.y = t),
                      (u[i].bounds.y = t),
                      (t += e.groupBox.bounds.height + w);
                  });
                } else {
                  let t = C - F;
                  c.forEach((e, i) => {
                    (e.groupBox.bounds.y = t - e.groupBox.bounds.height),
                      (u[i].bounds.y = t - e.groupBox.bounds.height),
                      (t -= e.groupBox.bounds.height + w);
                  });
                }
                const E = Math.min(C, v),
                  A = {
                    id: n.subtopicListGroupOfTopic(t),
                    roles: ["subtopicListGroup"],
                    bounds: { x: 0, y: 0, width: b, height: E },
                    absBounds: l.zeroRect(),
                    contentType: "group",
                    children: [...u, ...c.map((t) => t.groupBox)],
                    contentWidth: b,
                    contentHeight: C,
                    overflow: C > v ? "scroll" : "hidden",
                    scrollOffset: "above" === m ? 0 : C - E,
                    scrollFaderSize: k,
                    bottomScrollFaderOffset: f.computeBottomMaskOffset(i, k),
                    transformOrigin: S,
                    transform: y,
                  };
                return (
                  r.initializeBoxStyle(A, i, d, { layout: x }),
                  { groupBox: A, subtopicGroups: c, contentFeatures: g }
                );
              }
              let D, $;
              const j = o.rangedIntegers(y, S),
                G = o.mapValues(j, (t) => ({ fontSize: t, group: H(t) })),
                Z = o.findClosestMatch(G, ({ group: t }) => A(t));
              Z ? ((D = Z.fontSize), ($ = Z.group)) : ((D = S), ($ = H(D)));
              if (!E($) && D > S) {
                const t = o.rangedIntegers(D, S),
                  e = o.mapValues(t, (t) => ({ fontSize: t, group: H(t) })),
                  i = o.findClosestMatch(e, ({ group: t }) => E(t));
                i ? ((D = i.fontSize), ($ = i.group)) : ((D = y), ($ = H(D)));
              }
              return $;
            })(y.id, S, t, k, M, {
              fishboneHeadDirection: ft,
              maxWidth: tt,
              maxHeight: ht,
              maxFontSize: et,
              minFontSize: it,
              preferredLineCount: 1,
              maxLineCount: 2,
              markerRightMargin: nt,
              traillingIconLeftMargin: at,
              subtopicCompactSpacing: ot,
              subtopicLooseSpacing: lt,
              scrollFaderSize: rt,
              subtopicGroupLeadingOffset: X,
              subtopicGroupTrailingOffset: Q,
              subtopicGroupTitleLeftMargin: U,
              subtopicLeadingLineLength: Y,
              subtopicLeadingLineWidth: K,
              numberOfVisibleTopics: L,
            });
          (mt.groupBox.bounds.x = pt.groupBox.bounds.x),
            (mt.groupBox.bounds.y =
              "above" === ft
                ? pt.groupBox.bounds.y + N + pt.groupBox.bounds.height
                : pt.groupBox.bounds.y - N - mt.groupBox.bounds.height);
          const bt = mt.groupBox.bounds.x + mt.groupBox.bounds.width;
          bt > ct.groupBox.bounds.width &&
            ((ct.groupBox.bounds.width = bt), (ct.groupBox.contentWidth = bt)),
            ct.groupBox.children.push(mt.groupBox);
          const vt = ct.groupBox.bounds.x + ct.groupBox.bounds.width,
            xt = ct.groupBox.bounds.height,
            yt = {
              id: n.contentGroupOfTopic(y.id),
              roles: [],
              bounds: { x: 0, y: 0, width: vt, height: xt },
              absBounds: l.zeroRect(),
              contentType: "group",
              children: [],
              contentWidth: vt,
              contentHeight: xt,
            };
          r.initializeBoxStyle(yt, t, M, { layout: x });
          const St = E * Math.sin(W),
            wt = E * Math.cos(W),
            Ct = -(ct.groupBox.bounds.x + O + St + St - (ht - P) * Math.tan(W));
          "above" === ft
            ? ((yt.bounds.x = Ct),
              (yt.bounds.y = 0),
              mt.groupBox.bounds.height < ht &&
                (yt.bounds.y += (ht - mt.groupBox.bounds.height) / 2))
            : ((yt.bounds.x = Ct - wt),
              (yt.bounds.y = t.height - yt.bounds.height),
              mt.groupBox.bounds.height < ht &&
                (yt.bounds.y -= (ht - mt.groupBox.bounds.height) / 2)),
            yt.children.push(ct.groupBox),
            t.boxes.push(yt),
            w && d.addHeaderBoxes(t, w, k, M, x),
            a.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(t, ...gt, ...mt.contentFeatures);
        }),
        (e.generateFishboneHeadSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            {
              numberOfVisibleTopics: r = 0,
              numberOfVisitedTopics: a = 0,
              inSlideScroll: s = !1,
            } = o,
            c = Object.assign({}, t);
          l.forEach(({ id: t }, e) => {
            e > r &&
              (g.computePendingBoxStates(c, n.titleOfTopic(t)),
              g.computePendingBoxStates(
                c,
                n.fishboneHeadSubtopicLeadingLineOfTopic(t),
              ));
          });
          const d = n.assertBox(
            n.getBoxById(
              c.boxes,
              n.subtopicListGroupOfTopic(c.topicId),
              "group",
            ),
          );
          s && d.contentHeight > d.bounds.height && n.addMultistepBox(c, d.id);
          const u = r !== l.length ? r : a;
          if (
            (m.computeSubtopicListScrollingStates(
              c,
              n.subtopicListGroupOfTopic(c.topicId),
              n.titleOfTopic(l[u].id),
              (t, e) => e.bounds.height / 2 - t.bounds.height / 2,
            ),
            v.addBackgroundBoxes(c, e, i),
            (function (t, e, i = {}) {
              const { parentTopic: o, subtopics: l, siblingTopics: r } = e,
                { numberOfVisibleTopics: a = 0 } = i,
                s = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                });
              if ("background-shape" === (null == s ? void 0 : s.contentType)) {
                const e = o
                  ? n.getBoxById(
                      t.boxes,
                      n.fishboneOfTopic(null == o ? void 0 : o.id),
                      "shape",
                    )
                  : null;
                e && (e.strokeColor = s.fillColor),
                  r.forEach(({ id: e }) => {
                    const i = n.getBoxById(
                      t.boxes,
                      n.fishboneHeadOfTopic(e),
                      "shape",
                    );
                    i && (i.strokeColor = s.fillColor);
                  });
              }
              const c = n.filterBoxes(t.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              });
              l.forEach(({ id: e }, i) => {
                var o;
                const l =
                  null == c
                    ? void 0
                    : c.find(
                        (t) =>
                          "background-shape" === t.contentType &&
                          -1 !== t.id.indexOf(e),
                      );
                l && (l.opacity = i <= a ? 1 : 0);
                const r = n.getBoxById(
                  t.boxes,
                  n.fishboneHeadSubtopicLeadingLineOfTopic(e),
                  "shape",
                );
                r &&
                  (r.strokeColor =
                    null !== (o = null == l ? void 0 : l.fillColor) &&
                    void 0 !== o
                      ? o
                      : "background-shape" ===
                          (null == s ? void 0 : s.contentType)
                        ? s.fillColor
                        : r.strokeColor);
              });
            })(c, e, o),
            r < l.length)
          ) {
            const t = l[r].id,
              i = n.assertBox(n.getBoxById(c.boxes, n.titleOfTopic(t))),
              o = n.assertBox(
                n.getBoxById(
                  c.boxes,
                  n.fishboneHeadSubtopicLeadingLineOfTopic(t),
                ),
              );
            !(function (
              t,
              e,
              { titleBox: i, fishboneHeadSubtopicLeadingLine: o },
            ) {
              var l, r;
              if (
                "one-by-one-drill-in" === e.computedListSlideDelivery &&
                (null === (l = t.aliases) || void 0 === l
                  ? void 0
                  : l.some(
                      (e) =>
                        "listOfTopic" === e.kind &&
                        e.topicId === t.topicId &&
                        1 === e.index,
                    ))
              )
                return;
              const a = [],
                s = [],
                c = (
                  null === (r = t.aliases) || void 0 === r
                    ? void 0
                    : r.some(
                        (e) =>
                          "listOfTopic" === e.kind &&
                          e.topicId === t.topicId &&
                          0 === e.index,
                      )
                )
                  ? { request: "forward" }
                  : {
                      request: "forward",
                      sourceSlideType: t.type,
                      sourceSlideTopicId: t.topicId,
                    };
              a.push(
                { id: o.id, strokeOffset: 1, opacity: 0 },
                { id: i.id, opacity: 0 },
              ),
                s.push(
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: o.id, strokeOffset: 0 }] },
                    when: c,
                  },
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: o.id, opacity: 1 }] },
                    when: c,
                  },
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.8,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                    when: c,
                  },
                ),
                n.addSlideAdditionalEnteringStates(t, [
                  { state: { boxes: a }, when: c },
                ]),
                n.addSlideEnteringAnimations(t, s);
            })(c, e, { titleBox: i, fishboneHeadSubtopicLeadingLine: o });
          }
          return c;
        });
    },
    63746: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateFishboneSlide =
          e.layoutFishboneSlide =
          e.computeFishboneLayoutVariant =
          e.isFishboneLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(53399),
        l = i(97857),
        r = i(91199),
        a = i(14594),
        s = i(89391),
        c = i(7381),
        d = i(51116),
        u = i(68605),
        p = i(55287),
        h = i(35561),
        g = i(41432),
        f = i(90189),
        m = i(12851),
        b = i(20110),
        v = i(28850),
        x = "fishbone";
      (e.isFishboneLayoutEligibleFor = function (t) {
        return "list" === t;
      }),
        (e.computeFishboneLayoutVariant = function (t, e) {
          return 1 === e.subtopics.length
            ? "only-child"
            : t.width < t.height
              ? "tree-chart"
              : "fishbone";
        }),
        (e.layoutFishboneSlide = function (t, e, i = {}) {
          var s, c;
          const { topic: v, subtopics: y, headerTopic: S } = e,
            w = null !== (s = i.numberOfVisibleTopics) && void 0 !== s ? s : 0,
            C =
              null !== (c = null == i ? void 0 : i.theme) && void 0 !== c
                ? c
                : r.defaultTheme,
            T = r.appearanceOf(C),
            L = r.dimensionOf(C, { width: t.width, height: t.height });
          r.initializeSlideStyle(t, L, T, { layout: x });
          const B = r.calcLength(L.hSlidePadding, t),
            M = r.calcLength(L.vSlidePadding, t),
            k = Math.round(
              r.calcLength(L.fishboneSlideParentTopicMaxFontSize, t),
            ),
            F = Math.round(
              r.calcLength(L.fishboneSlideParentTopicMinFontSize, t),
            ),
            P = r.calcLength(L.hPaddingXSmall, t),
            I = Math.round(
              r.calcLength(L.fishboneSlideParentTopicTitleMaxWidth, t),
            ),
            O = r.calcLength(L.hPaddingMedium, t),
            _ = Math.round(r.calcLength(L.fishboneSlideSubtopicMaxFontSize, t)),
            z = Math.round(r.calcLength(L.fishboneSlideSubtopicMinFontSize, t)),
            E = Math.round(
              r.calcLength(L.fishboneSlideSubtopicTitleMaxWidth, t),
            ),
            A = r.calcLength(L.hPaddingXSmall, t),
            W = t.height - M - M,
            R = t.width - B - I - O,
            V = B,
            H = r.calcLength(L.fishboneSlideFishboneLineWidth, t),
            D = r.calcLength(L.fishboneSlideFishboneHeadLineWidth, t),
            $ = r.calcLength(L.fishboneSlideFishboneHeadLength, t),
            j = L.fishboneSlideFishboneHeadAngle,
            G = r.calcLength(L.fishboneSlideFishboneHeadInterval, t),
            Z = r.calcLength(L.fishboneSlideFishboneHeadSpacing, t),
            q = B,
            N = r.calcLength(L.hPaddingSmall, t),
            X = (function (t, e, i, n, l) {
              var r;
              const {
                maxFontSize: s,
                minFontSize: c,
                markerRightMargin: d,
                traillingIconLeftMargin: h,
                maxWidth: b,
                maxLineCount: v,
                preferredLineCount: y,
              } = l;
              function S(t) {
                return t.textMeasurement.width <= b;
              }
              function w(t) {
                return t.textMeasurement.lineCount <= y;
              }
              function C(t) {
                return t.textMeasurement.lineCount <= v;
              }
              const T = null !== (r = t.markers) && void 0 !== r ? r : [],
                L = T.slice(0, i.maxMarkerCount),
                B = p.computePlaceholder(t);
              function M(i, o, l) {
                var r;
                return f.computeTopicTitleGroup(
                  e,
                  n,
                  x,
                  t.id,
                  t.title,
                  i,
                  null !== (r = t.hyperlink) && void 0 !== r ? r : null,
                  L,
                  {
                    maxWidth: b,
                    fontSize: o,
                    markerRightMargin: d,
                    traillingIconLeftMargin: h,
                    overflowWrap: l,
                    textRoles: ["title"],
                    requestForHit: { kind: "fastBackward" },
                    placeholder: B,
                    disallowShortTrailingLine: !0,
                  },
                );
              }
              const k = g.computeTopicTitle(t);
              let F = k,
                P = s,
                I = "normal",
                O = M(F, P, I);
              if (S(O) && w(O) && !O.textMeasurement.hasShortTrailingLine)
                return Object.assign(Object.assign({}, O), {
                  contentFeatures: u.computeContentFeaturesForTitleGroup(
                    O,
                    t.id,
                    k,
                    T,
                  ),
                });
              if (((P = c), (O = M(F, P, I)), S(O))) {
                if (w(O)) {
                  const t = o.rangedIntegers(s, c),
                    e = o.mapValues(t, (t) => ({
                      fontSize: t,
                      group: M(F, t, I),
                    })),
                    i = o.findClosestMatch(e, ({ group: t }) => S(t) && w(t));
                  if (!i)
                    throw new Error(
                      "Unable to find the best font size for parent topic of brace list slide",
                    );
                  (P = i.fontSize), (O = i.group);
                }
              } else {
                I = "break-word";
                const t = o.rangedIntegers(s, c),
                  e = o.mapValues(t, (t) => ({
                    fontSize: t,
                    group: M(F, t, I),
                  })),
                  i = o.findClosestMatch(e, ({ group: t }) => w(t));
                i
                  ? ((P = i.fontSize), (O = i.group))
                  : ((P = c), (O = M(F, P, I)));
              }
              if (!C(O)) {
                const t = o.rangedIntegers(F.length - 1, 1),
                  e = o.mapValues(t, (t) => m.getTruncatedText(F, t)),
                  i = o.mapValues(e, (t) => ({ text: t, group: M(t, P, I) })),
                  n = o.findClosestMatch(i, ({ group: t }) => C(t));
                n
                  ? ((F = n.text), (O = n.group))
                  : ((F = m.getTruncatedText(F, 1)), (O = M(F, P, I)));
              }
              if (
                O.textMeasurement.hasShortTrailingLine &&
                !(O.textBox.text.length < k.length)
              ) {
                const { lineCount: t, fontSize: e } = O.textMeasurement,
                  i = M(
                    O.textBox.text,
                    e * a.defaultFontSizeScaleRatioToEliminateShortTrailingLine,
                    I,
                  );
                i.textMeasurement.lineCount < t && (O = i);
              }
              return Object.assign(Object.assign({}, O), {
                contentFeatures: u.computeContentFeaturesForTitleGroup(
                  O,
                  t.id,
                  k,
                  T,
                ),
              });
            })(v, t, L, T, {
              maxFontSize: k,
              minFontSize: F,
              markerRightMargin: P,
              traillingIconLeftMargin: N,
              maxWidth: I,
              maxLineCount: 3,
              preferredLineCount: 1,
            }),
            Q = (function (t, e, i, a, s, c) {
              const {
                maxWidth: d,
                maxHeight: h,
                maxFontSize: v,
                minFontSize: y,
                preferredLineCount: S,
                maxLineCount: w,
                subtopicMaxWidth: C,
                markerRightMargin: T,
                traillingIconLeftMargin: L,
                numberOfVisibleTopics: B,
                scrollFaderSize: M,
                fishboneLineWidth: k,
                fishboneHeadLineWidth: F,
                fishboneHeadLength: P,
                fishboneHeadAngle: I,
                fishboneHeadInterval: O,
                fishboneHeadSpacing: _,
                leadingFishboneHeadOffset: z,
              } = c;
              function E(t) {
                return t.every(A);
              }
              function A(t) {
                return t.textMeasurement.lineCount <= S;
              }
              function W(t) {
                return t.every(R);
              }
              function R(t) {
                return t.textMeasurement.lineCount <= w;
              }
              const V = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: g.computeTopicTitle(t),
                  hyperlink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: p.computePlaceholder(t),
                };
              });
              function H(t, e) {
                const l = [];
                return (
                  V.forEach(
                    (
                      {
                        topicId: r,
                        title: c,
                        text: d,
                        hyperlink: u,
                        markers: p,
                        placeholder: h,
                      },
                      g,
                    ) => {
                      var b;
                      const v = g > B,
                        y = p.slice(0, a.maxMarkerCount);
                      function S(e) {
                        return f.computeTopicTitleGroup(
                          i,
                          s,
                          x,
                          r,
                          c,
                          e,
                          u,
                          y,
                          {
                            maxWidth: C,
                            fontSize: t,
                            markerRightMargin: T,
                            traillingIconLeftMargin: L,
                            textRoles: ["subtopic"],
                            groupRoles: n.toBoxRoles({ pending: v }),
                            requestForHit: {
                              kind: "present",
                              topicId: r,
                              viaIntro: !0,
                            },
                            placeholder: h,
                          },
                        );
                      }
                      let w = S(d);
                      if (e && !R(w)) {
                        const t = o.rangedIntegers(d.length - 1, 1),
                          e = o.mapValues(t, (t) => m.getTruncatedText(d, t)),
                          i = o.mapValues(e, (t) => S(t));
                        w =
                          null !== (b = o.findClosestMatch(i, R)) &&
                          void 0 !== b
                            ? b
                            : S(m.getTruncatedText(d, 1));
                      }
                      l.push(w);
                    },
                  ),
                  l
                );
              }
              let D, $;
              const j = o.rangedIntegers(v, y),
                G = o.mapValues(j, (t) => ({ fontSize: t, group: H(t) })),
                Z = o.findClosestMatch(G, ({ group: t }) => E(t));
              if (Z) (D = Z.fontSize), ($ = Z.group);
              else if (w > S) {
                const t = o.rangedIntegers(v, y),
                  e = o.mapValues(t, (t) => ({ fontSize: t, group: H(t) })),
                  i = o.findClosestMatch(e, ({ group: t }) => W(t));
                i
                  ? ((D = i.fontSize), ($ = i.group))
                  : ((D = y), ($ = H(D, !0)));
              } else (D = y), ($ = H(D, !0));
              const q = [],
                N = [],
                X = Math.max(...$.map((t) => t.groupBox.bounds.height));
              V.forEach(({ topicId: t, text: e, markers: n }, o) => {
                const l = $[o],
                  r = Math.floor(o / 2),
                  a = o % 2 == 0 ? "above" : "below",
                  c = I * (Math.PI / 180),
                  d = P * Math.sin(c),
                  p = P * Math.cos(c),
                  g = z + O * r + ("above" === a ? 0 : _),
                  f = h / 2 + ("above" === a ? -p : 0),
                  m = b.computeFishboneHeadShape(t, i, s, x, g, f, F, P, I, a),
                  v = (X - l.groupBox.bounds.height) / 2;
                (l.groupBox.bounds.x = g + d),
                  (l.groupBox.bounds.y =
                    f +
                    ("above" === a ? -l.groupBox.bounds.height - v : p + v)),
                  q.push(m),
                  N.push(...u.computeContentFeaturesForTitleGroup(l, t, e, n));
              });
              const Q =
                  $[$.length % 2 == 0 ? $.length - 2 : $.length - 1].groupBox
                    .bounds.x +
                  (d - $[0].groupBox.bounds.x),
                J = 0,
                U = h / 2 - k / 2,
                Y = b.computeFishboneShape(t, i, s, x, J, U, k, Q),
                K = {
                  id: n.subtopicListGroupOfTopic(t),
                  roles: ["subtopicListGroup"],
                  bounds: { x: 0, y: 0, width: d, height: h },
                  absBounds: l.zeroRect(),
                  contentType: "group",
                  children: [...$.map((t) => t.groupBox), ...q, Y],
                  overflow: Q > d ? "scroll" : "hidden",
                  scrollFaderSize: M,
                  contentWidth: Q,
                  contentHeight: h,
                  scrollPageLength: O,
                };
              return (
                r.initializeBoxStyle(K, i, s, { layout: x }),
                {
                  groupBox: K,
                  subtopicGroups: $,
                  fishboneHeadShapes: q,
                  contentFeatures: N,
                }
              );
            })(v.id, y, t, L, T, {
              maxWidth: R,
              maxHeight: W,
              maxFontSize: _,
              minFontSize: z,
              preferredLineCount: 1,
              maxLineCount: 2,
              subtopicMaxWidth: E,
              markerRightMargin: A,
              traillingIconLeftMargin: N,
              numberOfVisibleTopics: w,
              scrollFaderSize: V,
              fishboneLineWidth: H,
              fishboneHeadLineWidth: D,
              fishboneHeadLength: $,
              fishboneHeadAngle: j,
              fishboneHeadInterval: G,
              fishboneHeadSpacing: Z,
              leadingFishboneHeadOffset: q,
            });
          (X.groupBox.bounds.x = B + (I - X.groupBox.bounds.width) / 2),
            (X.groupBox.bounds.y = t.height / 2 - X.groupBox.bounds.height / 2),
            (Q.groupBox.bounds.x = B + I + O),
            (Q.groupBox.bounds.y = M),
            t.boxes.push(X.groupBox),
            t.boxes.push(Q.groupBox),
            S && h.addHeaderBoxes(t, S, L, T, x),
            d.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(
              t,
              ...X.contentFeatures,
              ...Q.contentFeatures,
            );
        }),
        (e.generateFishboneSlide = function (t, e, i, o = {}) {
          var l;
          const { subtopics: r } = e,
            {
              numberOfVisibleTopics: a = 0,
              numberOfVisitedTopics: d = 0,
              inSlideScroll: u = !1,
            } = o,
            p = Object.assign({}, t);
          r.forEach(({ id: t }, e) => {
            e > a &&
              (s.computePendingBoxStates(p, n.titleOfTopic(t)),
              s.computePendingBoxStates(p, n.fishboneHeadOfTopic(t)));
          });
          const h = n.assertBox(
            n.getBoxById(
              p.boxes,
              n.subtopicListGroupOfTopic(p.topicId),
              "group",
            ),
          );
          u && h.contentWidth > h.bounds.width && n.addMultistepBox(p, h.id);
          const g = a !== r.length ? a : d,
            f = g % 2 == 0 ? g : g - 1,
            m = n.findBox(p.boxes, (t) => t.id === n.titleOfTopic(r[0].id));
          if (
            (c.computeSubtopicListScrollingStates(
              p,
              n.subtopicListGroupOfTopic(p.topicId),
              n.titleOfTopic(r[f].id),
              () => {
                var t;
                return -(null !== (t = null == m ? void 0 : m.bounds.x) &&
                void 0 !== t
                  ? t
                  : 0);
              },
            ),
            v.addBackgroundBoxes(p, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0 } = i,
                r = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                });
              if ("background-shape" === (null == r ? void 0 : r.contentType)) {
                const e = n.getBoxById(
                  t.boxes,
                  n.fishboneOfTopic(t.topicId),
                  "shape",
                );
                e && (e.strokeColor = r.fillColor);
              }
              const a = n.filterBoxes(t.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              });
              o.forEach(({ id: e }, i) => {
                var o;
                const s =
                  null == a
                    ? void 0
                    : a.find(
                        (t) =>
                          "background-shape" === t.contentType &&
                          -1 !== t.id.indexOf(e),
                      );
                s && (s.opacity = i <= l ? 1 : 0);
                const c = n.getBoxById(
                  t.boxes,
                  n.fishboneHeadOfTopic(e),
                  "shape",
                );
                c &&
                  (c.strokeColor =
                    null !== (o = null == s ? void 0 : s.fillColor) &&
                    void 0 !== o
                      ? o
                      : "background-shape" ===
                          (null == r ? void 0 : r.contentType)
                        ? r.fillColor
                        : c.strokeColor);
              });
            })(p, e, o),
            a < r.length)
          ) {
            const t = r[a].id,
              i = n.assertBox(n.getBoxById(p.boxes, n.titleOfTopic(t))),
              o = n.assertBox(n.getBoxById(p.boxes, n.fishboneHeadOfTopic(t))),
              s = n.filterBoxes(p.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              }),
              c =
                null !==
                  (l =
                    null == s
                      ? void 0
                      : s.find(
                          (e) =>
                            "background-shape" === e.contentType &&
                            -1 !== e.id.indexOf(t),
                        )) && void 0 !== l
                  ? l
                  : null;
            !(function (
              t,
              e,
              { titleBox: i, fishboneHeadShape: o, shapeRefSubtopic: l },
            ) {
              var r, a;
              if (
                "one-by-one-drill-in" === e.computedListSlideDelivery &&
                (null === (r = t.aliases) || void 0 === r
                  ? void 0
                  : r.some(
                      (e) =>
                        "listOfTopic" === e.kind &&
                        e.topicId === t.topicId &&
                        1 === e.index,
                    ))
              )
                return;
              const s = [],
                c = [],
                d = (
                  null === (a = t.aliases) || void 0 === a
                    ? void 0
                    : a.some(
                        (e) =>
                          "listOfTopic" === e.kind &&
                          e.topicId === t.topicId &&
                          0 === e.index,
                      )
                )
                  ? { request: "forward" }
                  : {
                      request: "forward",
                      sourceSlideType: t.type,
                      sourceSlideTopicId: t.topicId,
                    };
              s.push(
                { id: o.id, strokeOffset: 1, opacity: 0 },
                { id: i.id, opacity: 0 },
              ),
                l && s.push({ id: l.id, opacity: 0 });
              c.push(
                {
                  on: "postTransition",
                  durationMultiplier: 1.5,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: o.id, strokeOffset: 0 }] },
                  when: d,
                },
                {
                  on: "postTransition",
                  durationMultiplier: 1.5,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: o.id, opacity: 1 }] },
                  when: d,
                },
                {
                  on: "postTransition",
                  durationMultiplier: 1,
                  delayMultiplier: 1.5,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  when: d,
                },
              ),
                l &&
                  c.push({
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 1.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                    when: { request: "forward", sourceSlideTopicId: t.topicId },
                  });
              n.addSlideAdditionalEnteringStates(t, [
                { state: { boxes: s }, when: d },
              ]),
                n.addSlideEnteringAnimations(t, c);
            })(p, e, {
              titleBox: i,
              fishboneHeadShape: o,
              shapeRefSubtopic: c,
            });
          }
          return p;
        });
    },
    14337: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.GridPacking = void 0);
      function i(t, e) {
        return Array(e - t + 1)
          .fill(0)
          .map((e, i) => t + i);
      }
      e.GridPacking = class {
        constructor(t, e, i) {
          (this.widthArray = t),
            (this.gap = e),
            (this.desiredRowWidth = i),
            (this.costs = Array(t.length + 1)
              .fill(0)
              .map(() => Array(t.length + 1).fill(0)));
        }
        partialSum(t, e) {
          return this.widthArray.slice(t, t + e).reduce((t, e) => t + e, 0);
        }
        rowWidth(t, e) {
          return this.partialSum(t, e) + (e - 1) * this.gap;
        }
        difference(t, e) {
          return this.desiredRowWidth - this.rowWidth(t, e);
        }
        penalty(t, e) {
          return Math.abs(this.difference(t, e));
        }
        cost(t, e) {
          const i = this.costs[t][e];
          if (i) return i;
          let n;
          return (
            (n =
              t + e < this.widthArray.length
                ? Math.min(
                    this.cost(t, e + 1),
                    this.penalty(t, e) + this.cost(t + e, 1),
                  )
                : this.penalty(t, e)),
            (this.costs[t][e] = n),
            n
          );
        }
        computeRowScale(t, e) {
          return (
            (this.desiredRowWidth - this.gap * (e - 1)) / this.partialSum(t, e)
          );
        }
        producePacking() {
          let t = 0,
            e = 1;
          const i = [];
          for (; t + e <= this.widthArray.length; )
            this.cost(t, e + 1) > this.cost(t, e)
              ? (i.push(t + e - 1), (t += e), (e = 1))
              : (e += 1);
          return i;
        }
        toGrid() {
          const t = [],
            e = this.producePacking();
          if (0 === e.length)
            return (
              (t[0] = {
                row: Array.from(this.widthArray.keys()),
                scale: this.computeRowScale(0, this.widthArray.length),
              }),
              t
            );
          for (let n = 0; n < e.length; n++) {
            const o = 0 === n ? 0 : e[n - 1] + 1,
              l = e[n];
            t[n] = { row: i(o, l), scale: this.computeRowScale(o, l - o + 1) };
          }
          if (e[e.length - 1] != this.widthArray.length - 1) {
            const n = e[e.length - 1] + 1;
            t[e.length] = {
              row: i(n, this.widthArray.length - 1),
              scale: this.computeRowScale(n, this.widthArray.length - n),
            };
          }
          return t;
        }
      };
    },
    35262: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateImageTopicSlide =
          e.layoutImageTopicSlide =
          e.computeImageTopicSlideLayoutVariant =
          e.isImageTopicSlideLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(91199),
        l = i(97857),
        r = i(51116),
        a = i(90010),
        s = i(35561),
        c = i(12284),
        d = i(4898),
        u = i(70188),
        p = i(90189),
        h = i(68605),
        g = i(76118),
        f = i(28850),
        m = i(68852),
        b = "image-topic-slide";
      (e.isImageTopicSlideLayoutEligibleFor = function (t, { topic: e }) {
        return "topic" === t && !!e.image;
      }),
        (e.computeImageTopicSlideLayoutVariant = function () {
          return "image-topic-slide";
        }),
        (e.layoutImageTopicSlide = function (t, e, i = {}) {
          var f, v, x, y, S, w, C, T;
          const { topic: L, headerTopic: B, calloutTopic: M } = e,
            { id: k, image: F, video: P } = L;
          if (!F)
            throw new Error(
              "Missing image attributes for Topic Slide With Image",
            );
          const I =
              null !== (f = null == i ? void 0 : i.theme) && void 0 !== f
                ? f
                : o.defaultTheme,
            O = o.appearanceOf(I),
            _ = o.dimensionOf(I, { width: t.width, height: t.height }),
            z = o.calcLength(_.hSlidePadding, t),
            E = o.calcLength(_.vSlidePadding, t),
            A = g.computeImageSizeHint({ width: t.width, height: t.height }, F),
            W = g.computeTopicSlideImagePlacement(
              { width: t.width, height: t.height },
              e,
              F,
            );
          (t.imagePlacement = W),
            o.initializeSlideStyle(t, _, O, { layout: b });
          const R = L.title,
            V = null !== (v = L.markers) && void 0 !== v ? v : [],
            H =
              null !== (x = null == M ? void 0 : M.title) && void 0 !== x
                ? x
                : "",
            D = null !== (y = L.labels) && void 0 !== y ? y : [],
            $ =
              null !==
                (w =
                  null === (S = L.note) || void 0 === S
                    ? void 0
                    : S.plainText) && void 0 !== w
                ? w
                : "",
            j =
              null !==
                (T = null === (C = L.note) || void 0 === C ? void 0 : C.html) &&
              void 0 !== T
                ? T
                : "",
            G = R.length > 0 || V.length > 0 || L.hyperlink,
            Z = H.length > 0 || D.length > 0 || $.length > 0,
            q =
              "full" === W
                ? t.width
                : (!G && !Z) || ("left" !== W && "right" !== W)
                  ? G || Z || "small" !== A
                    ? t.width - z - z
                    : t.width - 4 * z
                  : o.calcLength(
                      "small" === A
                        ? _.imageTopicSlideHLayoutImageZoneWidthForSmallImage
                        : _.imageTopicSlideHLayoutImageZoneWidth,
                      t,
                    ),
            N =
              "full" === W
                ? t.height
                : (!G && !Z) || ("aboveTitle" !== W && "belowTitle" !== W)
                  ? G || Z || "small" !== A
                    ? t.height - E - E
                    : t.height - 4 * E
                  : o.calcLength(
                      "small" === A
                        ? _.imageTopicSlideVLayoutImageZoneHeightForSmallImage
                        : _.imageTopicSlideVLayoutImageZoneHeight,
                      t,
                    ),
            X =
              0 === F.size.width || 0 === F.size.height
                ? 1
                : "full" === W
                  ? Math.max(q / F.size.width, N / F.size.height)
                  : Math.min(q / F.size.width, N / F.size.height),
            Q = F.size.width * X,
            J = F.size.height * X;
          let U;
          U =
            "aboveTitle" === W || "belowTitle" === W
              ? o.calcLength(_.vPaddingSmall, t)
              : "left" === W || "right" === W
                ? o.calcLength(_.imageTopicSlideHLayoutSpacingAroundImage, t)
                : 0;
          const Y = o.calcLength(_.hPaddingSmall, t),
            K = o.calcLength(_.hPaddingSmall, t);
          let tt, et, it;
          "aboveTitle" === W || "belowTitle" === W
            ? ((tt = Math.round(
                o.calcLength(_.imageTopicSlideVLayoutTitleFontSizeLarge, t),
              )),
              (et = Math.round(
                o.calcLength(_.imageTopicSlideVLayoutTitleFontSizeMedium, t),
              )),
              (it = Math.round(
                o.calcLength(_.imageTopicSlideVLayoutTitleFontSizeSmall, t),
              )))
            : "left" === W || "right" === W
              ? ((tt = Math.round(
                  o.calcLength(_.imageTopicSlideHLayoutTitleFontSizeLarge, t),
                )),
                (et = Math.round(
                  o.calcLength(_.imageTopicSlideHLayoutTitleFontSizeMedium, t),
                )),
                (it = Math.round(
                  o.calcLength(_.imageTopicSlideHLayoutTitleFontSizeSmall, t),
                )))
              : ((tt = Math.round(
                  o.calcLength(_.topicSlideTitleFontSizeLarge, t),
                )),
                (et = Math.round(
                  o.calcLength(_.topicSlideTitleFontSizeMedium, t),
                )),
                (it = Math.round(
                  o.calcLength(_.topicSlideTitleFontSizeSmall, t),
                )));
          const nt = tt,
            ot = et,
            lt = Math.round(0.8 * tt),
            rt = et,
            at = et,
            st = it,
            ct = o.calcLength(_.topicSlideLabelFontSize, t),
            dt = o.calcLength(_.topicSlideLabelMinWidth, t),
            ut = o.calcLength(_.hPaddingSmall, t),
            pt = o.calcLength(_.hPaddingSmall, t),
            ht = o.calcLength(_.topicSlideLabelSpacing, t),
            gt = o.calcLength(_.topicSlideLabelLineSpacing, t),
            ft = o.calcLength(_.topicSlideCalloutFontSize, t),
            mt = o.calcLength(_.topicSlideNoteFontSize, t),
            bt = o.calcLength(_.vPaddingXXSmall, t),
            vt = o.calcLength(_.vPaddingXXSmall, t),
            xt = o.calcLength(_.vPaddingXLarge, t),
            yt = o.calcLength(_.vPaddingMedium, t),
            St = o.calcLength(_.topicSlideTitleScrollFaderHeight, t),
            wt =
              "left" === W || "right" === W ? t.width - z - q - U - z : t.width,
            Ct = "left" === W || "right" === W ? wt : wt - z - z,
            Tt = {
              left: "left" === W || "right" === W ? 0 : z,
              top: E,
              right: "left" === W || "right" === W ? 0 : z,
              bottom: E,
            },
            Lt = t.height,
            Bt = Z ? null : Lt - E - E,
            Mt = {
              id: n.imageOfTopic(k),
              roles: ["primaryImage"],
              bounds: { x: 0, y: 0, width: Q, height: J },
              absBounds: l.zeroRect(),
              contentType: "image",
              zoomable: !0,
              videoSource: null == P ? void 0 : P.videoSource,
              imageSource: m.computeTopicImageSource(F, t.foregroundColor),
              outlineWidth:
                "normal" === A && "full" !== W
                  ? t.normalImageOutlineWidth
                  : void 0,
            };
          o.initializeBoxStyle(Mt, t, O, { layout: b });
          const kt = H
              ? c.computeCalloutTextBox(t, O, b, k, H, {
                  maxWidth: Ct,
                  fontSize: ft,
                })
              : null,
            Ft = D.map((e, i) =>
              a.computeLabelGroup(t, O, b, k, e, i, {
                maxWidth: Ct,
                minWidth: dt,
                fontSize: ct,
                leftPadding: ut,
                rightPadding: pt,
              }),
            ),
            Pt = $
              ? d.computeNoteTextBox(t, O, b, k, $, j, {
                  maxWidth: Ct,
                  fontSize: mt,
                  roles: ["htmlNote"],
                })
              : null,
            It = V.slice(0, _.maxMarkerCount),
            Ot =
              G || Z
                ? u.searchForBestTopicSlideContent(
                    function (e) {
                      var i;
                      const n = G
                        ? p.computeTopicTitleGroup(
                            t,
                            O,
                            b,
                            k,
                            R,
                            R,
                            null !== (i = L.hyperlink) && void 0 !== i
                              ? i
                              : null,
                            It,
                            {
                              maxWidth: Ct,
                              fontSize: e,
                              markerRightMargin: Y,
                              traillingIconLeftMargin: K,
                              textRoles: ["title"],
                            },
                          )
                        : null;
                      let o;
                      (n && n.textMeasurement.lineCount > 1) ||
                      "left" === W ||
                      "right" === W ||
                      ("full" !== W &&
                        Mt.bounds.width > q - 1 &&
                        t.width > t.height)
                        ? (n && (n.textBox.textAlignment = "leading"),
                          (o = "leading"))
                        : (o = "center");
                      const l =
                        Ft.length > 0
                          ? a.computeLabelListGroupBox(
                              t,
                              O,
                              b,
                              k,
                              Ft.map(({ groupBox: t }) => t),
                              {
                                maxWidth: Ct,
                                labelSpacing: ht,
                                lineSpacing: gt,
                                alignment: o,
                              },
                            )
                          : null;
                      return u.computeTopicSlideContentGroup(
                        t,
                        O,
                        b,
                        k,
                        {
                          titleGroup: n,
                          calloutTextBox: kt,
                          labelListGroupBox: l,
                          noteTextBox: Pt,
                          imageBox:
                            "aboveTitle" === W || "belowTitle" === W
                              ? Mt
                              : null,
                        },
                        {
                          maxWidth: wt,
                          maxHeight: Lt,
                          paddings: Tt,
                          contentAlignment: o,
                          spacingBetweenCalloutAndTitle: bt,
                          spacingBetweenTitleAndLabelList: vt,
                          spacingBetweenTitleAndNote: xt,
                          spacingBetweenLabelListAndNote: yt,
                          scrollFaderSize: St,
                          spacingAroundImage: U,
                          imagePlacement:
                            "belowTitle" === W ? "belowTitle" : "aboveTitle",
                        },
                      );
                    },
                    function (t) {
                      var e, i;
                      return null !==
                        (i =
                          null === (e = t.titleGroup) || void 0 === e
                            ? void 0
                            : e.textMeasurement.lineCount) && void 0 !== i
                        ? i
                        : 0;
                    },
                    function (t) {
                      return t.groupBox.contentHeight;
                    },
                    {
                      maxHeight: t.height,
                      compactMaxHeight: Bt,
                      singleLineTitleMaxFontSize: nt,
                      singleLineTitleMinFontSize: ot,
                      doubleLineTitleMaxFontSize: lt,
                      doubleLineTitleMinFontSize: rt,
                      multilineTitleMaxFontSize: at,
                      multilineTitleMinFontSize: st,
                      scrollableTitleFontSize: at,
                    },
                  )
                : null,
            _t = null == Ot ? void 0 : Ot.groupBox;
          if (_t)
            if ("left" === W) {
              const e = Mt.bounds.width + U + _t.bounds.width,
                i = Math.max(Mt.bounds.height, _t.bounds.height),
                n = (t.width - e) / 2,
                o = (t.height - i) / 2;
              (Mt.bounds.x = n),
                (_t.bounds.x = Mt.bounds.x + Mt.bounds.width + U),
                (Mt.bounds.y = o + (i - Mt.bounds.height) / 2),
                (_t.bounds.y = o + (i - _t.bounds.height) / 2);
            } else if ("right" === W) {
              const e = _t.bounds.width + U + Mt.bounds.width,
                i = Math.max(Mt.bounds.height, _t.bounds.height),
                n = (t.width - e) / 2,
                o = (t.height - i) / 2;
              (_t.bounds.x = n),
                (Mt.bounds.x = _t.bounds.x + _t.bounds.width + U),
                (_t.bounds.y = o + (i - _t.bounds.height) / 2),
                (Mt.bounds.y = o + (i - Mt.bounds.height) / 2);
            } else if ("aboveTitle" === W || "belowTitle" === W)
              (_t.bounds.x = (t.width - _t.bounds.width) / 2),
                (_t.bounds.y = (t.height - _t.bounds.height) / 2);
            else {
              if ("full" !== W)
                throw new Error(
                  `Undetermined slide layout for image placed for "${W}"`,
                );
              (_t.bounds.x = (t.width - _t.bounds.width) / 2),
                (_t.bounds.y = (t.height - _t.bounds.height) / 2),
                (Mt.bounds.x = 0),
                (Mt.bounds.y = 0);
            }
          else
            (Mt.bounds.x = (t.width - Mt.bounds.width) / 2),
              (Mt.bounds.y = (t.height - Mt.bounds.height) / 2);
          Ot
            ? ("full" === W && t.boxes.push(Mt),
              t.boxes.push(Ot.groupBox),
              ("left" !== W && "right" !== W) || t.boxes.push(Mt))
            : t.boxes.push(Mt),
            B && s.addHeaderBoxes(t, B, _, O, b),
            r.computeAbsoluteBounds(t.boxes),
            (t.shouldSkipImageAnimations = p.shouldShowPlaceholder(
              R.length > 0,
              It.length > 0,
            )),
            n.addSlideContentFeatures(t, {
              kind: "image",
              topicId: k,
              integrity: "full",
            }),
            Ot &&
              (n.addSlideContentFeatures(
                t,
                ...h.computeContentFeaturesForTitleGroup(
                  Ot.titleGroup,
                  k,
                  R,
                  V,
                ),
              ),
              Ot.calloutTextBox &&
                n.addSlideContentFeatures(t, {
                  kind: "callout",
                  topicId: k,
                  integrity: "full",
                }),
              Ot.labelListGroupBox &&
                n.addSlideContentFeatures(t, {
                  kind: "labels",
                  topicId: k,
                  integrity: "full",
                }),
              Ot.noteTextBox &&
                n.addSlideContentFeatures(t, {
                  kind: "note",
                  topicId: k,
                  integrity: "full",
                }));
        }),
        (e.generateImageTopicSlide = function (t, e, i) {
          const o = Object.assign({}, t),
            l = n.getBoxById(
              o.boxes,
              n.contentGroupOfTopic(o.topicId),
              "group",
            );
          return (
            l &&
              l.contentHeight > l.bounds.height &&
              (n.addMultistepBox(o, l.id),
              n.addSlideLeavingAnimations(o, [
                {
                  durationMultiplier: 1,
                  easing: "easeInOutCubic",
                  on: "preTransition",
                  effect: "mutate",
                  finalState: { boxes: [{ id: l.id, scrollOffset: 0 }] },
                },
              ])),
            (function (t) {
              const e = n.assertBox(
                  n.getBoxById(t.boxes, n.imageOfTopic(t.topicId)),
                ),
                i = n.getBoxById(
                  t.boxes,
                  n.contentGroupOfTopic(t.topicId),
                  "group",
                );
              "centralTopic" == t.topicLevel || "floatingTopic" == t.topicLevel
                ? "full" === t.imagePlacement
                  ? (function (t, e, i) {
                      var o;
                      if (
                        (n.setBoxEnteringState(t, {
                          id: e.id,
                          opacity: 0,
                          transform: [{ scale: { x: 1.2, y: 1.2 } }],
                        }),
                        n.addSlideEnteringAnimations(t, [
                          {
                            on: "postTransition",
                            groups: ["scaleDownImage"],
                            durationMultiplier: 2.5,
                            effect: "mutate",
                            easing: "easeInOutCubic",
                            finalState: {
                              boxes: [
                                {
                                  id: e.id,
                                  opacity:
                                    null !== (o = e.opacity) && void 0 !== o
                                      ? o
                                      : 1,
                                },
                              ],
                            },
                          },
                        ]),
                        n.addSlideEnteringAnimations(t, [
                          {
                            on: "postTransition",
                            groups: ["scaleDownImage"],
                            durationMultiplier: 1.75,
                            effect: "mutate",
                            easing: "easeInOutCubic",
                            finalState: {
                              boxes: [
                                {
                                  id: e.id,
                                  transform: [{ scale: { x: 1, y: 1 } }],
                                },
                              ],
                            },
                          },
                        ]),
                        i)
                      ) {
                        let e = 0;
                        [...i.children]
                          .sort((t, e) => t.bounds.y - e.bounds.y)
                          .forEach((i) => {
                            var o;
                            n.setBoxEnteringState(t, {
                              id: i.id,
                              transform: [
                                { translate: { x: 0, y: i.bounds.height / 5 } },
                              ],
                              opacity: 0,
                            }),
                              n.addSlideEnteringAnimations(t, [
                                {
                                  after: "scaleDownImage",
                                  delayMultiplier: e,
                                  durationMultiplier: 1.75,
                                  effect: "mutate",
                                  easing: "easeInOutCubic",
                                  finalState: {
                                    boxes: [
                                      {
                                        id: i.id,
                                        transform: [
                                          { translate: { x: 0, y: 0 } },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              ]),
                              n.addSlideEnteringAnimations(t, [
                                {
                                  after: "scaleDownImage",
                                  delayMultiplier: e,
                                  durationMultiplier: 2.5,
                                  effect: "mutate",
                                  easing: "easeInOutCubic",
                                  finalState: {
                                    boxes: [
                                      {
                                        id: i.id,
                                        opacity:
                                          null !== (o = i.opacity) &&
                                          void 0 !== o
                                            ? o
                                            : 1,
                                      },
                                    ],
                                  },
                                },
                              ]),
                              (e += 0.75);
                          });
                      }
                    })(t, e, i)
                  : i
                    ? (function (t, e, i) {
                        var o;
                        let l = 0;
                        const r = n.titleOfTopic(t.topicId);
                        let a = 0;
                        const s = [...i.children].sort(
                          (t, e) => t.bounds.y - e.bounds.y,
                        );
                        s.forEach((e) => {
                          var i;
                          e.id == r && (a = l),
                            n.setBoxEnteringState(t, {
                              id: e.id,
                              transform: [
                                { translate: { x: 0, y: e.bounds.height / 5 } },
                              ],
                              opacity: 0,
                            }),
                            n.addSlideEnteringAnimations(t, [
                              {
                                on: "postTransition",
                                delayMultiplier: l,
                                durationMultiplier: 1.75,
                                effect: "mutate",
                                easing: "easeInOutCubic",
                                finalState: {
                                  boxes: [
                                    {
                                      id: e.id,
                                      transform: [
                                        { translate: { x: 0, y: 0 } },
                                      ],
                                    },
                                  ],
                                },
                              },
                            ]),
                            n.addSlideEnteringAnimations(t, [
                              {
                                on: "postTransition",
                                delayMultiplier: l,
                                durationMultiplier: 2.5,
                                effect: "mutate",
                                easing: "easeInOutCubic",
                                finalState: {
                                  boxes: [
                                    {
                                      id: e.id,
                                      opacity:
                                        null !== (i = e.opacity) && void 0 !== i
                                          ? i
                                          : 1,
                                    },
                                  ],
                                },
                              },
                            ]),
                            (l += 0.75);
                        }),
                          ("left" === t.imagePlacement ||
                            "right" === t.imagePlacement) &&
                            (n.setBoxEnteringState(t, {
                              id: e.id,
                              transform: [
                                { translate: { x: 0, y: e.bounds.height / 5 } },
                              ],
                              opacity: 0,
                            }),
                            n.addSlideEnteringAnimations(t, [
                              {
                                on: "postTransition",
                                delayMultiplier: a,
                                durationMultiplier: 1.75,
                                effect: "mutate",
                                easing: "easeInOutCubic",
                                finalState: {
                                  boxes: [
                                    {
                                      id: e.id,
                                      transform: [
                                        { translate: { x: 0, y: 0 } },
                                      ],
                                    },
                                  ],
                                },
                              },
                            ]),
                            n.addSlideEnteringAnimations(t, [
                              {
                                on: "postTransition",
                                delayMultiplier: a,
                                durationMultiplier: 2.5,
                                effect: "mutate",
                                easing: "easeInOutCubic",
                                finalState: {
                                  boxes: [
                                    {
                                      id: e.id,
                                      opacity:
                                        null !== (o = e.opacity) && void 0 !== o
                                          ? o
                                          : 1,
                                    },
                                  ],
                                },
                              },
                            ]));
                      })(t, e, i)
                    : (function (t, e) {
                        var i;
                        n.setBoxEnteringState(t, {
                          id: e.id,
                          transform: [
                            { translate: { x: 0, y: e.bounds.height / 5 } },
                          ],
                          opacity: 0,
                        }),
                          n.addSlideEnteringAnimations(t, [
                            {
                              on: "postTransition",
                              durationMultiplier: 1.75,
                              effect: "mutate",
                              easing: "easeInOutCubic",
                              finalState: {
                                boxes: [
                                  {
                                    id: e.id,
                                    transform: [{ translate: { x: 0, y: 0 } }],
                                  },
                                ],
                              },
                            },
                          ]),
                          n.addSlideEnteringAnimations(t, [
                            {
                              on: "postTransition",
                              durationMultiplier: 2.5,
                              effect: "mutate",
                              easing: "easeInOutCubic",
                              finalState: {
                                boxes: [
                                  {
                                    id: e.id,
                                    opacity:
                                      null !== (i = e.opacity) && void 0 !== i
                                        ? i
                                        : 1,
                                  },
                                ],
                              },
                            },
                          ]);
                      })(t, e)
                : (function (t, e, i) {
                    var o;
                    const l = n.imageOfTopic(t.topicId),
                      r = n.titleOfTopic(t.topicId),
                      a = 0,
                      s = 1;
                    t.shouldSkipImageAnimations ||
                      (n.setBoxEnteringState(t, { id: e.id, opacity: 0 }),
                      n.addSlideEnteringAnimations(t, [
                        {
                          on: "postTransition",
                          durationMultiplier: s,
                          delayMultiplier: a,
                          effect: "mutate",
                          easing: "easeOutQuad",
                          finalState: {
                            boxes: [
                              {
                                id: e.id,
                                opacity:
                                  null !== (o = e.opacity) && void 0 !== o
                                    ? o
                                    : 1,
                              },
                            ],
                          },
                        },
                      ]));
                    i &&
                      i.children.forEach((e) => {
                        var i;
                        e.id !== l &&
                          e.id !== r &&
                          (n.setBoxEnteringState(t, { id: e.id, opacity: 0 }),
                          n.addSlideEnteringAnimations(t, [
                            {
                              on: "postTransition",
                              durationMultiplier: s,
                              delayMultiplier: a,
                              effect: "mutate",
                              easing: "easeOutQuad",
                              finalState: {
                                boxes: [
                                  {
                                    id: e.id,
                                    opacity:
                                      null !== (i = e.opacity) && void 0 !== i
                                        ? i
                                        : 1,
                                  },
                                ],
                              },
                            },
                          ]));
                      });
                  })(t, e, i);
            })(o),
            f.addBackgroundBoxes(o, e, i),
            o
          );
        });
    },
    45614: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateImageableChildrenSlide = e.layoutImageableChildrenSlide =
          void 0);
      const n = i(6776),
        o = i(30207),
        l = i(53399),
        r = i(97857),
        a = i(91199),
        s = i(51116),
        c = i(89391),
        d = i(68605),
        u = i(55287),
        p = i(41432),
        h = i(90189),
        g = i(12851),
        f = i(28850),
        m = i(28674),
        b = i(68852),
        v = "imageable-children-slide";
      (e.layoutImageableChildrenSlide = function (t, e, i = {}) {
        var c;
        const { topic: f, subtopics: x } = e;
        if (!o.hasImageableSubtopics(e))
          throw new Error("Missing children images for List Slide With Image");
        const y =
            null !== (c = null == i ? void 0 : i.theme) && void 0 !== c
              ? c
              : a.defaultTheme,
          S = a.appearanceOf(y),
          w = a.dimensionOf(y, { width: t.width, height: t.height });
        a.initializeSlideStyle(t, w, S, { layout: v });
        const C = a.calcLength(w.hSlidePadding, t),
          T = a.calcLength(w.vSlidePadding, t),
          L = t.height - T - T,
          B = t.width - C - C,
          M = a.calcLength(w.hPaddingXSmall, t),
          k =
            t.width > t.height
              ? Math.round(a.calcLength({ pct: 10, unit: "vmin" }, t))
              : Math.round(a.calcLength({ pct: 14, unit: "vmin" }, t)),
          F =
            t.width > t.height
              ? Math.round(a.calcLength({ pct: 10, unit: "vmin" }, t))
              : Math.round(a.calcLength({ pct: 11, unit: "vmin" }, t)),
          P =
            t.width > t.height
              ? a.calcLength(w.vPaddingMedium, t)
              : a.calcLength(w.vPaddingSmall, t),
          I = t.width - C - C,
          O = a.calcLength(w.hPaddingMedium, t),
          _ = (function (t, e, i, n, o) {
            var r;
            const {
              maxFontSize: a,
              minFontSize: s,
              markerRightMargin: c,
              traillingIconLeftMargin: f,
              maxWidth: m,
              maxLineCount: b,
            } = o;
            function x(t) {
              return t.textMeasurement.lineCount <= b;
            }
            const y = null !== (r = t.markers) && void 0 !== r ? r : [],
              S = y.slice(0, i.maxMarkerCount),
              w = u.computePlaceholder(t);
            function C(i, o) {
              var l;
              return h.computeTopicTitleGroup(
                e,
                n,
                v,
                t.id,
                t.title,
                i,
                null !== (l = t.hyperlink) && void 0 !== l ? l : null,
                S,
                {
                  maxWidth: m,
                  fontSize: o,
                  markerRightMargin: c,
                  traillingIconLeftMargin: f,
                  overflowWrap: "break-word",
                  textRoles: ["title"],
                  requestForHit: { kind: "fastBackward" },
                  placeholder: w,
                },
              );
            }
            const T = p.computeTopicTitle(t);
            let L = T,
              B = C(L, s);
            if (!x(B)) {
              if (s < a) {
                const t = l.rangedIntegers(a, s),
                  e = l.mapValues(t, (t) => ({ fontSize: t, group: C(L, t) })),
                  i = l.findClosestMatch(e, ({ group: t }) => x(t));
                i && (B = i.group);
              }
              if (!x(B)) {
                const t = l.rangedIntegers(L.length - 1, 1),
                  e = l.mapValues(t, (t) => g.getTruncatedText(L, t)),
                  i = l.mapValues(e, (t) => ({ text: t, group: C(t, s) })),
                  n = l.findClosestMatch(i, ({ group: t }) => x(t));
                n
                  ? ((L = n.text), (B = n.group))
                  : ((L = g.getTruncatedText(L, 1)), (B = C(L, s)));
              }
            }
            return Object.assign(Object.assign({}, B), {
              contentFeatures: d.computeContentFeaturesForTitleGroup(
                B,
                t.id,
                T,
                y,
              ),
            });
          })(f, t, w, S, {
            maxFontSize: k,
            minFontSize: F,
            markerRightMargin: M,
            traillingIconLeftMargin: a.calcLength(w.hPaddingSmall, t),
            maxWidth: B,
            maxLineCount: 1,
          }),
          z = L - _.groupBox.bounds.height - P,
          E = (function (t, e, i, o, l, s) {
            const { subtopicsSpacing: c } = s,
              d = e.map((t) => t.image).filter((t) => !!t),
              { packing: u, actualWidthOfImages: p } =
                m.computeBestMatchedImageSubtopicsGridPacking(d, s),
              h = [],
              g = [];
            let f = 0,
              x = 0;
            u.forEach((t, o) => {
              let s = 0;
              t.row.forEach((m, y) => {
                const { id: S, video: w } = e[m],
                  C = d[m],
                  T = (p[m] * t.scale) / C.size.width,
                  L = {
                    id: n.imageOfTopic(S),
                    roles: ["subtopic"],
                    bounds: {
                      x: 0,
                      y: 0,
                      width: C.size.width * T,
                      height: C.size.height * T,
                    },
                    absBounds: r.zeroRect(),
                    contentType: "image",
                    imageSource: b.computeTopicImageSource(
                      C,
                      i.foregroundColor,
                    ),
                    zoomable: !0,
                    videoSource: null == w ? void 0 : w.videoSource,
                    requestForHit: {
                      kind: "present",
                      topicId: S,
                      viaIntro: !0,
                    },
                  };
                a.initializeBoxStyle(L, i, l, { layout: v }),
                  (L.bounds.x = s),
                  (s += L.bounds.width + (y == t.row.length - 1 ? 0 : c)),
                  0 === o && y == t.row.length - 1 && (f = s),
                  0 === y
                    ? ((L.bounds.y =
                        0 === m
                          ? 0
                          : h[m - 1].bounds.y + h[m - 1].bounds.height + c),
                      (x += L.bounds.height + (o === u.length - 1 ? 0 : c)))
                    : (L.bounds.y = h[m - 1].bounds.y),
                  h.push(L),
                  g.push({ kind: "image", topicId: S, integrity: "full" });
              });
            });
            const y = {
              id: n.subtopicListGroupOfTopic(t),
              roles: ["subtopicListGroup"],
              bounds: { x: 0, y: 0, width: f, height: x },
              absBounds: r.zeroRect(),
              contentType: "group",
              children: h,
              contentWidth: f,
              contentHeight: x,
            };
            return (
              a.initializeBoxStyle(y, i, l, { layout: v }),
              { groupBox: y, subtopicImageBoxes: h, contentFeatures: g }
            );
          })(f.id, x, t, 0, S, {
            maxWidth: I,
            maxHeight: z,
            subtopicsSpacing: O,
          });
        E.groupBox.bounds.width === I
          ? (_.groupBox.bounds.x = C)
          : (_.groupBox.bounds.x = (t.width - _.groupBox.bounds.width) / 2),
          (E.groupBox.bounds.x = (t.width - E.groupBox.bounds.width) / 2);
        const A = _.groupBox.bounds.height + P + E.groupBox.bounds.height;
        (_.groupBox.bounds.y = T + (L - A) / 2),
          (E.groupBox.bounds.y =
            _.groupBox.bounds.y + _.groupBox.bounds.height + P),
          t.boxes.push(_.groupBox),
          t.boxes.push(E.groupBox),
          s.computeAbsoluteBounds(t.boxes),
          n.addSlideContentFeatures(
            t,
            ..._.contentFeatures,
            ...E.contentFeatures,
          );
      }),
        (e.generateImageableChildrenSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            { numberOfVisibleTopics: r = 0 } = o,
            a = Object.assign({}, t);
          return (
            l.forEach(({ id: t }, e) => {
              e > r && c.computePendingBoxStates(a, n.imageOfTopic(t));
            }),
            (function (t) {
              var e;
              const i = n.assertBox(
                n.getBoxById(t.boxes, n.subtopicListGroupOfTopic(t.topicId)),
              );
              (null === (e = t.aliases) || void 0 === e
                ? void 0
                : e.some(
                    (e) =>
                      "listOfTopic" === e.kind &&
                      e.topicId === t.topicId &&
                      0 === e.index,
                  )) &&
                (n.setSlideEnteringState(t, {
                  boxes: [{ id: i.id, opacity: 0 }],
                }),
                n.addSlideEnteringAnimations(t, [
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  },
                ]));
            })(a),
            f.addBackgroundBoxes(a, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0, numberOfVisitedTopics: r = 0 } =
                  i,
                a = n.filterBoxes(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "subtopic" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                }),
                s = l !== o.length ? l : r;
              o.forEach(({ id: t }, e) => {
                const i =
                  null == a
                    ? void 0
                    : a.find(
                        (e) =>
                          "background-shape" === e.contentType &&
                          -1 !== e.id.indexOf(t),
                      );
                i && (i.opacity = e <= s ? 1 : 0);
              });
            })(a, e, o),
            a
          );
        });
    },
    99688: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateImageableListSlide = e.layoutImageableListSlide = void 0);
      const n = i(6776),
        o = i(30207),
        l = i(97857),
        r = i(91199),
        a = i(51116),
        s = i(89391),
        c = i(28850),
        d = i(28674),
        u = i(68852),
        p = "imageable-list-slide";
      (e.layoutImageableListSlide = function (t, e, i = {}) {
        var s;
        const { topic: c, subtopics: h } = e,
          { id: g, image: f, video: m } = c;
        if (!f)
          throw new Error("Missing parent image for List Slide With Image");
        if (!o.hasImageableSubtopics(e))
          throw new Error("Missing children images for List Slide With Image");
        const b =
            null !== (s = null == i ? void 0 : i.theme) && void 0 !== s
              ? s
              : r.defaultTheme,
          v = r.appearanceOf(b),
          x = r.dimensionOf(b, { width: t.width, height: t.height });
        r.initializeSlideStyle(t, x, v, { layout: p });
        const y = r.calcLength(x.hSlidePadding, t),
          S = r.calcLength(x.vSlidePadding, t),
          w = t.height - S - S,
          C = t.width,
          T = t.height,
          L = Math.max(C / f.size.width, T / f.size.height),
          B = t.width - y - y,
          M = w,
          k = r.calcLength(x.hPaddingMedium, t),
          F = {
            id: n.imageOfTopic(g),
            roles: ["title"],
            bounds: {
              x: 0,
              y: 0,
              width: f.size.width * L,
              height: f.size.height * L,
            },
            absBounds: l.zeroRect(),
            contentType: "image",
            zoomable: !0,
            videoSource: null == m ? void 0 : m.videoSource,
            imageSource: u.computeTopicImageSource(f, t.foregroundColor),
          };
        r.initializeBoxStyle(F, t, v, { layout: p });
        const P = (function (t, e, i, o, a, s) {
          const { subtopicsSpacing: c } = s,
            h = e.map((t) => t.image).filter((t) => !!t),
            { packing: g, actualWidthOfImages: f } =
              d.computeBestMatchedImageSubtopicsGridPacking(h, s),
            m = [],
            b = [];
          let v = 0,
            x = 0;
          g.forEach((t, o) => {
            let s = 0;
            t.row.forEach((d, y) => {
              const { id: S, video: w } = e[d],
                C = h[d],
                T = (f[d] * t.scale) / C.size.width,
                L = {
                  id: n.imageOfTopic(S),
                  roles: ["subtopic"],
                  bounds: {
                    x: 0,
                    y: 0,
                    width: C.size.width * T,
                    height: C.size.height * T,
                  },
                  absBounds: l.zeroRect(),
                  contentType: "image",
                  imageSource: u.computeTopicImageSource(C, i.foregroundColor),
                  zoomable: !0,
                  videoSource: null == w ? void 0 : w.videoSource,
                  requestForHit: { kind: "present", topicId: S, viaIntro: !0 },
                };
              r.initializeBoxStyle(L, i, a, { layout: p }),
                (L.bounds.x = s),
                (s += L.bounds.width + (y == t.row.length - 1 ? 0 : c)),
                0 === o && y == t.row.length - 1 && (v = s),
                0 === y
                  ? ((L.bounds.y =
                      0 === d
                        ? 0
                        : m[d - 1].bounds.y + m[d - 1].bounds.height + c),
                    (x += L.bounds.height + (o === g.length - 1 ? 0 : c)))
                  : (L.bounds.y = m[d - 1].bounds.y),
                m.push(L),
                b.push({ kind: "image", topicId: S, integrity: "full" });
            });
          });
          const y = {
            id: n.subtopicListGroupOfTopic(t),
            roles: ["subtopicListGroup"],
            bounds: { x: 0, y: 0, width: v, height: x },
            absBounds: l.zeroRect(),
            contentType: "group",
            children: m,
            contentWidth: v,
            contentHeight: x,
          };
          return (
            r.initializeBoxStyle(y, i, a, { layout: p }),
            { groupBox: y, subtopicImageBoxes: m, contentFeatures: b }
          );
        })(c.id, h, t, 0, v, {
          maxWidth: B,
          maxHeight: M,
          subtopicsSpacing: k,
        });
        (F.bounds.x = (t.width - F.bounds.width) / 2),
          (F.bounds.y = (t.height - F.bounds.height) / 2),
          (P.groupBox.bounds.x = (t.width - P.groupBox.bounds.width) / 2),
          (P.groupBox.bounds.y = (t.height - P.groupBox.bounds.height) / 2),
          t.boxes.push(F),
          t.boxes.push(P.groupBox),
          a.computeAbsoluteBounds(t.boxes),
          n.addSlideContentFeatures(t, {
            kind: "image",
            topicId: g,
            integrity: "full",
          }),
          n.addSlideContentFeatures(t, ...P.contentFeatures);
      }),
        (e.generateImageableListSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            { numberOfVisibleTopics: r = 0 } = o,
            a = Object.assign({}, t);
          return (
            l.forEach(({ id: t }, e) => {
              e > r && s.computePendingBoxStates(a, n.imageOfTopic(t));
            }),
            (function (t) {
              var e;
              const i = n.assertBox(
                n.getBoxById(t.boxes, n.subtopicListGroupOfTopic(t.topicId)),
              );
              (null === (e = t.aliases) || void 0 === e
                ? void 0
                : e.some(
                    (e) =>
                      "listOfTopic" === e.kind &&
                      e.topicId === t.topicId &&
                      0 === e.index,
                  )) &&
                (n.setSlideEnteringState(t, {
                  boxes: [{ id: i.id, opacity: 0 }],
                }),
                n.addSlideEnteringAnimations(t, [
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  },
                ]));
            })(a),
            c.addBackgroundBoxes(a, e, i),
            a
          );
        });
    },
    53209: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateImageableParentSlide = e.layoutImageableParentSlide =
          void 0);
      const n = i(6776),
        o = i(14065),
        l = i(76118),
        r = i(53399),
        a = i(97857),
        s = i(91199),
        c = i(51116),
        d = i(68605),
        u = i(89391),
        p = i(55287),
        h = i(7381),
        g = i(28850),
        f = i(68852),
        m = i(41432),
        b = i(90189),
        v = i(12851),
        x = "imageable-parent-slide";
      function y(t, e, i, l, c, u) {
        const {
          paddings: h,
          maxWidth: g,
          maxHeight: f,
          defaultFontSize: y,
          maxLineCount: S,
          markerRightMargin: w,
          traillingIconLeftMargin: C,
          minSpacing: T,
          scrollFaderSize: L,
        } = u;
        function B(t) {
          return t.textMeasurement.lineCount <= S;
        }
        const M = e.map((t) => {
          var e, i;
          return {
            topicId: t.id,
            title: t.title,
            text: m.computeTopicTitle(t),
            hyperlink: null !== (e = t.hyperlink) && void 0 !== e ? e : null,
            markers: null !== (i = t.markers) && void 0 !== i ? i : [],
            placeholder: p.computePlaceholder(t),
          };
        });
        return (function (e) {
          let u = h.top,
            p = 0,
            m = 0,
            y = 0;
          const S = [],
            k = M.map(
              ({
                topicId: t,
                title: n,
                text: o,
                hyperlink: a,
                markers: s,
                placeholder: f,
              }) => {
                var L;
                const M = s.slice(0, l.maxMarkerCount),
                  k = g - h.left - h.right;
                function F(o) {
                  return b.computeTopicTitleGroup(i, c, x, t, n, o, a, M, {
                    maxWidth: k,
                    fontSize: e,
                    markerRightMargin: w,
                    traillingIconLeftMargin: C,
                    textRoles: ["subtopic"],
                    requestForHit: {
                      kind: "present",
                      topicId: t,
                      viaIntro: !0,
                    },
                    placeholder: f,
                  });
                }
                let P = F(o);
                if (!B(P)) {
                  const t = r.rangedIntegers(o.length - 1, 1),
                    e = r.mapValues(t, (t) => v.getTruncatedText(o, t)),
                    i = r.mapValues(e, (t) => F(t));
                  P =
                    null !== (L = r.findClosestMatch(i, B)) && void 0 !== L
                      ? L
                      : F(v.getTruncatedText(o, 1));
                }
                const I = P.groupBox.bounds;
                return (
                  (I.x = h.left),
                  (I.y = u),
                  (u += I.height + T),
                  (p = Math.max(p, I.width)),
                  m > 0 && (m += T),
                  (m += I.height),
                  (y += I.height),
                  S.push(...d.computeContentFeaturesForTitleGroup(P, t, o, s)),
                  P
                );
              },
            );
          (p += h.left + h.right), (m += h.top + h.bottom);
          const F = Math.min(p, g),
            P = {
              id: n.subtopicListGroupOfTopic(t),
              roles: ["subtopicListGroup"],
              bounds: { x: 0, y: 0, width: F, height: Math.min(m, f) },
              absBounds: a.zeroRect(),
              contentType: "group",
              children: k.map((t) => t.groupBox),
              contentWidth: F,
              contentHeight: m,
              overflow: m > f ? "scroll" : "hidden",
              scrollFaderSize: L,
              bottomScrollFaderOffset: o.computeBottomMaskOffset(i, L),
            };
          return (
            s.initializeBoxStyle(P, i, c, { layout: x }),
            {
              groupBox: P,
              subtopicGroups: k,
              subtopicTotalHeight: y,
              contentFeatures: S,
            }
          );
        })(y);
      }
      (e.layoutImageableParentSlide = function (t, e, i = {}) {
        var o;
        const { topic: r } = e,
          { image: d } = r;
        if (!d)
          throw new Error("Missing parent image for List Slide With Image");
        const u =
            null !== (o = null == i ? void 0 : i.theme) && void 0 !== o
              ? o
              : s.defaultTheme,
          p = s.appearanceOf(u),
          h = s.dimensionOf(u, { width: t.width, height: t.height });
        s.initializeSlideStyle(t, h, p, { layout: x });
        const g = l.computeImageSizeHint(
            { width: t.width, height: t.height },
            d,
          ),
          m =
            0 === d.size.width || 0 === d.size.height
              ? 1
              : d.size.width / d.size.height;
        t.width > t.height && ("small" === g || m < 4)
          ? (function (t, e, i, o) {
              const { topic: r, subtopics: d } = o,
                { id: u, image: p, video: h } = r;
              if (!p)
                throw new Error(
                  "Missing image attributes for List Slide With Image",
                );
              const g = s.calcLength(e.hSlidePadding, t),
                m = s.calcLength(e.vSlidePadding, t),
                b = l.computeImageSizeHint(
                  { width: t.width, height: t.height },
                  p,
                );
              let v = ("small" === b ? 2 : 6) * g;
              const S = t.height - m - m,
                w = ("small" === b ? 8 : 4) * g,
                C = t.height,
                T = g,
                L = { left: 0, top: m, right: 0, bottom: m },
                B = Math.round(s.calcLength({ pct: 6, unit: "vmin" }, t)),
                M = s.calcLength(e.hPaddingXSmall, t),
                k = 3,
                F = s.calcLength(e.braceListSlideScrollFaderHeight, t),
                P = s.calcLength(e.vPaddingNormal, t),
                I = s.calcLength(e.hPaddingSmall, t),
                O = (function (t, e, i, n, o, l) {
                  const { maxHeight: r, paddings: a, minSpacing: s } = l,
                    c = y(t, e, i, n, o, l);
                  let d = s;
                  c.groupBox.contentHeight < r &&
                    (e.length <= 4 &&
                    c.subtopicGroups.every((t) => 1 === t.textBox.lineCount)
                      ? (d = s)
                      : e.length > 4 &&
                        (d =
                          (r - a.top - a.bottom - c.subtopicTotalHeight) /
                          (e.length - 1)));
                  if (((d = Math.max(d, s)), d !== s)) {
                    let t = a.top,
                      e = 0;
                    for (const i of c.subtopicGroups) {
                      const n = i.groupBox.bounds;
                      (n.y = t),
                        (t += n.height + d),
                        e > 0 && (e += d),
                        (e += n.height);
                    }
                    (e += a.top + a.bottom),
                      (c.groupBox.contentHeight = e),
                      (c.groupBox.bounds.height = Math.min(e, r));
                  }
                  return c;
                })(r.id, d, t, e, i, {
                  paddings: L,
                  maxWidth: w,
                  maxHeight: C,
                  defaultFontSize: B,
                  markerRightMargin: M,
                  traillingIconLeftMargin: I,
                  maxLineCount: k,
                  minSpacing: P,
                  scrollFaderSize: F,
                });
              v = Math.max(t.width - 2 * g - O.groupBox.bounds.width - T, v);
              const _ = Math.min(v / p.size.width, S / p.size.height),
                z = {
                  id: n.imageOfTopic(u),
                  roles: ["title"],
                  bounds: {
                    x: 0,
                    y: 0,
                    width: p.size.width * _,
                    height: p.size.height * _,
                  },
                  absBounds: a.zeroRect(),
                  contentType: "image",
                  imageSource: f.computeTopicImageSource(p, t.foregroundColor),
                  zoomable: !0,
                  videoSource: null == h ? void 0 : h.videoSource,
                  requestForHit: { kind: "fastBackward" },
                };
              s.initializeBoxStyle(z, t, i, { layout: x });
              const E = z.bounds.width + T + O.groupBox.bounds.width;
              (z.bounds.x = (t.width - E) / 2),
                (z.bounds.y = (t.height - z.bounds.height) / 2),
                (O.groupBox.bounds.x = z.bounds.x + z.bounds.width + T),
                (O.groupBox.bounds.y =
                  (t.height - O.groupBox.bounds.height) / 2),
                t.boxes.push(z),
                t.boxes.push(O.groupBox),
                c.computeAbsoluteBounds(t.boxes),
                n.addSlideContentFeatures(t, {
                  kind: "image",
                  topicId: u,
                  integrity: "full",
                }),
                n.addSlideContentFeatures(t, ...O.contentFeatures);
            })(t, h, p, e)
          : (function (t, e, i, o) {
              const { topic: l, subtopics: r } = o,
                { id: d, image: u, video: p } = l;
              if (!u)
                throw new Error(
                  "Missing image attributes for List Slide With Image",
                );
              const h = s.calcLength(e.hSlidePadding, t),
                g = s.calcLength(e.vSlidePadding, t),
                m = t.width - h - h,
                b = 0.25 * t.height,
                v = s.calcLength(e.vPaddingXSmall, t),
                S = t.width - h - h,
                w =
                  t.width > t.height
                    ? s.calcLength(e.vPaddingMedium, t)
                    : s.calcLength(e.vPaddingXLarge, t),
                C = { left: 0, top: w, right: 0, bottom: g },
                T = Math.round(s.calcLength({ pct: 6, unit: "vmin" }, t)),
                L = s.calcLength(e.hPaddingXSmall, t),
                B = 2,
                M = s.calcLength(e.braceListSlideScrollFaderHeight, t),
                k = s.calcLength(e.vPaddingSmall, t),
                F = s.calcLength(e.hPaddingSmall, t),
                P = Math.min(m / u.size.width, b / u.size.height),
                I = {
                  id: n.imageOfTopic(d),
                  roles: ["title"],
                  bounds: {
                    x: 0,
                    y: 0,
                    width: u.size.width * P,
                    height: u.size.height * P,
                  },
                  absBounds: a.zeroRect(),
                  contentType: "image",
                  imageSource: f.computeTopicImageSource(u, t.foregroundColor),
                  zoomable: !0,
                  videoSource: null == p ? void 0 : p.videoSource,
                  requestForHit: { kind: "fastBackward" },
                };
              s.initializeBoxStyle(I, t, i, { layout: x });
              const O = t.height - g - I.bounds.height - v,
                _ = y(l.id, r, t, e, i, {
                  paddings: C,
                  maxWidth: S,
                  maxHeight: O,
                  defaultFontSize: T,
                  markerRightMargin: L,
                  traillingIconLeftMargin: F,
                  maxLineCount: B,
                  minSpacing: k,
                  scrollFaderSize: M,
                });
              (I.bounds.x = h),
                (I.bounds.y = g),
                (_.groupBox.bounds.x = h),
                (_.groupBox.bounds.y = g + I.bounds.height + v),
                t.boxes.push(I),
                t.boxes.push(_.groupBox),
                c.computeAbsoluteBounds(t.boxes),
                n.addSlideContentFeatures(t, {
                  kind: "image",
                  topicId: d,
                  integrity: "full",
                }),
                n.addSlideContentFeatures(t, ..._.contentFeatures);
            })(t, h, p, e);
      }),
        (e.generateImageableParentSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            {
              numberOfVisibleTopics: r = 0,
              numberOfVisitedTopics: a = 0,
              inSlideScroll: s = !1,
            } = o,
            c = Object.assign({}, t);
          l.forEach(({ id: t }, e) => {
            e > r && u.computePendingBoxStates(c, n.titleOfTopic(t));
          });
          const d = n.assertBox(
            n.getBoxById(
              c.boxes,
              n.subtopicListGroupOfTopic(c.topicId),
              "group",
            ),
          );
          s && d.contentHeight > d.bounds.height && n.addMultistepBox(c, d.id);
          const p = r !== l.length ? r : a;
          return (
            h.computeSubtopicListScrollingStates(
              c,
              n.subtopicListGroupOfTopic(c.topicId),
              n.titleOfTopic(l[p].id),
              (t, e) => e.bounds.height / 2 - t.bounds.height / 2,
            ),
            (function (t) {
              var e;
              const i = n.assertBox(
                n.getBoxById(t.boxes, n.subtopicListGroupOfTopic(t.topicId)),
              );
              (null === (e = t.aliases) || void 0 === e
                ? void 0
                : e.some(
                    (e) =>
                      "listOfTopic" === e.kind &&
                      e.topicId === t.topicId &&
                      0 === e.index,
                  )) &&
                (n.setSlideEnteringState(t, {
                  boxes: [{ id: i.id, opacity: 0 }],
                }),
                n.addSlideEnteringAnimations(t, [
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  },
                ]));
            })(c),
            g.addBackgroundBoxes(c, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0, numberOfVisitedTopics: r = 0 } =
                  i,
                a = n.filterBoxes(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "subtopic" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                }),
                s = l !== o.length ? l : r;
              o.forEach(({ id: t }, e) => {
                const i =
                  null == a
                    ? void 0
                    : a.find(
                        (e) =>
                          "background-shape" === e.contentType &&
                          -1 !== e.id.indexOf(t),
                      );
                i && (i.opacity = e <= s ? 1 : 0);
              });
            })(c, e, o),
            c
          );
        });
    },
    92850: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.layoutEngines = void 0);
      const n = i(96818),
        o = i(35262),
        l = i(86706),
        r = i(38533),
        a = i(28747),
        s = i(74825),
        c = i(63746),
        d = i(17241),
        u = i(68839),
        p = i(3494);
      e.layoutEngines = {
        "topic-slide": {
          id: "topic-slide",
          isEligibleFor: n.isTopicSlideLayoutEligibleFor,
          computeLayoutVariant: n.computeTopicSlideLayoutVariant,
        },
        "image-topic-slide": {
          id: "image-topic-slide",
          isEligibleFor: o.isImageTopicSlideLayoutEligibleFor,
          computeLayoutVariant: o.computeImageTopicSlideLayoutVariant,
        },
        "brace-list": {
          id: "brace-list",
          isEligibleFor: l.isBraceListLayoutEligibleFor,
          computeLayoutVariant: l.computeBraceListLayoutVariant,
        },
        "bullet-list": {
          id: "bullet-list",
          isEligibleFor: r.isBulletListLayoutEligibleFor,
          computeLayoutVariant: r.computeBulletListLayoutVariant,
        },
        "lyric-list": {
          id: "lyric-list",
          isEligibleFor: s.isLyricListLayoutEligibleFor,
          computeLayoutVariant: s.computeLyricListLayoutVariant,
        },
        fishbone: {
          id: "fishbone",
          isEligibleFor: c.isFishboneLayoutEligibleFor,
          computeLayoutVariant: c.computeFishboneLayoutVariant,
        },
        "fishbone-head": {
          id: "fishbone-head",
          isEligibleFor: d.isFishboneHeadLayoutEligibleFor,
          computeLayoutVariant: d.computeFishboneHeadLayoutVariant,
        },
        timeline: {
          id: "timeline",
          isEligibleFor: u.isTimelineLayoutEligibleFor,
          computeLayoutVariant: u.computeTimelineLayoutVariant,
        },
        "timeline-head": {
          id: "timeline-head",
          isEligibleFor: p.isTimelineHeadLayoutEligibleFor,
          computeLayoutVariant: p.computeTimelineHeadLayoutVariant,
        },
        summary: {
          id: "summary",
          isEligibleFor: a.isSummaryLayoutEligibleFor,
          computeLayoutVariant: a.computeSummaryLayoutVariant,
        },
      };
    },
    74825: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateLyricListSlide =
          e.layoutLyricListSlide =
          e.computeLyricListLayoutVariant =
          e.isLyricListLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(14065),
        l = i(30207),
        r = i(75327),
        a = i(53399),
        s = i(97857),
        c = i(91199),
        d = i(14594),
        u = i(51116),
        p = i(68605),
        h = i(53988),
        g = i(89391),
        f = i(55287),
        m = i(7381),
        b = i(28850),
        v = i(35561),
        x = i(29744),
        y = i(41432),
        S = i(90189),
        w = i(12851),
        C = "lyric-list";
      function T(t, e, i) {
        t.boxes = n.mutateBoxes(t.boxes, (t) =>
          t.id === n.titleTextOfTopic(e)
            ? Object.assign(Object.assign({}, t), { opacity: i ? 0 : 1 })
            : t.id === n.shadowTitleTextOfTopic(e)
              ? Object.assign(Object.assign({}, t), { opacity: i ? 1 : 0 })
              : t,
        );
      }
      function L(t, e) {
        var i;
        e &&
          (n.setBoxEnteringState(t, {
            id: e.id,
            transform: [{ translate: { x: 0, y: e.bounds.height } }],
            opacity: 0,
          }),
          n.addSlideEnteringAnimations(t, [
            {
              durationMultiplier: 1.75,
              delayMultiplier: 0.75,
              easing: "easeInOutCubic",
              on: "postTransition",
              effect: "mutate",
              finalState: {
                boxes: [
                  { id: e.id, transform: [{ translate: { x: 0, y: 0 } }] },
                ],
              },
            },
          ]),
          n.addSlideEnteringAnimations(t, [
            {
              durationMultiplier: 2.5,
              delayMultiplier: 0.75,
              easing: "easeInOutCubic",
              on: "postTransition",
              effect: "mutate",
              finalState: {
                boxes: [
                  {
                    id: e.id,
                    opacity: null !== (i = e.opacity) && void 0 !== i ? i : 1,
                  },
                ],
              },
            },
          ]));
      }
      (e.isLyricListLayoutEligibleFor = function (
        t,
        { computedListSlideDelivery: e },
      ) {
        return "all-at-once" != e && "list" === t;
      }),
        (e.computeLyricListLayoutVariant = function (t, e) {
          return l.hasImageableTopic(e) && !l.hasImageableSubtopics(e)
            ? 1 === e.subtopics.length
              ? "only-child-imageable-parent"
              : "imageable-parent-slide"
            : !l.hasImageableTopic(e) && l.hasImageableSubtopics(e)
              ? 1 === e.subtopics.length
                ? "only-imageable-child"
                : "imageable-children-slide"
              : l.hasImageableTopic(e) && l.hasImageableSubtopics(e)
                ? "imageable-list-slide"
                : 1 === e.subtopics.length
                  ? "only-child"
                  : "lyric-list";
        }),
        (e.layoutLyricListSlide = function (t, e, i = {}) {
          var l;
          const { topic: g, subtopics: m, headerTopic: b, topicLevel: T } = e,
            L =
              null !== (l = null == i ? void 0 : i.theme) && void 0 !== l
                ? l
                : c.defaultTheme,
            B = c.appearanceOf(L),
            M = c.dimensionOf(L, { width: t.width, height: t.height });
          c.initializeSlideStyle(t, M, B, { layout: C });
          const k = c.calcLength(M.hSlidePadding, t),
            F = c.calcLength(M.vSlidePadding, t),
            P = c.calcLength(M.lyricListSlideContentLeftPadding, t),
            I = c.calcLength(M.lyricListSlideContentBottomPadding, t),
            O = t.width - k - k - P,
            _ = c.calcLength(M.lyricListSlideParentTopicMaxFontSize, t),
            z = c.calcLength(M.lyricListSlideParentTopicMinFontSize, t),
            E = c.calcLength(M.lyricListSlideParentTopicIndicatorLineWidth, t),
            A = c.calcLength(M.lyricListSlideParentTopicIndicatorTopMargin, t),
            W = c.calcLength(M.hPaddingXSmall, t),
            R = c.calcLength(
              "centralTopic" === T
                ? M.lyricListSlideCentralTopicParentTopicBottomMargin
                : M.lyricListSlideParentTopicBottomMargin,
              t,
            ),
            V = Math.round(
              c.calcLength(M.lyricListSlideSubtopicMaxFontSize, t),
            ),
            H = Math.round(
              c.calcLength(M.lyricListSlideSubtopicMinFontSize, t),
            ),
            D = Math.round(
              c.calcLength(M.lyricListSlideSubtopicScrollableFontSize, t),
            ),
            $ = c.calcLength(M.hPaddingXSmall, t),
            j = c.calcLength(M.scrollFaderHeight, t),
            G = c.calcLength(
              "centralTopic" === T
                ? M.lyricListSlideCentralTopicSubtopicSpacing
                : M.lyricListSlideSubtopicSpacing,
              t,
            ),
            Z = {
              left: c.calcLength(M.lyricListSlideSubtopicListLeftPadding, t),
              top: 0,
              right: k,
              bottom: 0,
            },
            q = c.calcLength(M.lyricListSlideArrowWidth, t),
            N = c.calcLength(M.lyricListSlideArrowHeight, t),
            X = c.calcLength(M.lyricListSlideArrowCornerRadius, t),
            Q = c.calcLength(M.hPaddingSmall, t),
            J = (function (t, e, i, n, o) {
              var l;
              const {
                maxFontSize: r,
                minFontSize: s,
                markerRightMargin: c,
                traillingIconLeftMargin: d,
                maxWidth: u,
                maxLineCount: h,
              } = o;
              function g(t) {
                return t.textMeasurement.lineCount <= h;
              }
              const m = null !== (l = t.markers) && void 0 !== l ? l : [],
                b = m.slice(0, i.maxMarkerCount),
                v = f.computePlaceholder(t);
              function x(i, o) {
                var l;
                return S.computeTopicTitleGroup(
                  e,
                  n,
                  C,
                  t.id,
                  t.title,
                  i,
                  null !== (l = t.hyperlink) && void 0 !== l ? l : null,
                  b,
                  {
                    maxWidth: u,
                    fontSize: o,
                    markerRightMargin: c,
                    traillingIconLeftMargin: d,
                    overflowWrap: "break-word",
                    textRoles: ["title"],
                    requestForHit: { kind: "fastBackward" },
                    placeholder: v,
                  },
                );
              }
              const T = y.computeTopicTitle(t);
              let L;
              if (r > s) {
                const e = a.rangedIntegers(r, s),
                  i = a.mapValues(e, (t) => ({ fontSize: t, group: x(T, t) })),
                  n = a.findClosestMatch(i, ({ group: t }) => g(t));
                if (n)
                  return (
                    (L = n.group),
                    Object.assign(Object.assign({}, L), {
                      contentFeatures: p.computeContentFeaturesForTitleGroup(
                        L,
                        t.id,
                        T,
                        m,
                      ),
                    })
                  );
              }
              let B = T;
              if (B.length > 1) {
                const t = a.rangedIntegers(B.length, 1),
                  e = a.mapValues(t, (t) => w.getTruncatedText(B, t)),
                  i = a.mapValues(e, (t) => ({ text: t, group: x(t, r) })),
                  n = a.findClosestMatch(i, ({ group: t }) => g(t));
                n
                  ? ((B = n.text), (L = n.group))
                  : ((B = w.getTruncatedText(B, 1)), (L = x(B, r)));
              } else L = x(B, r);
              return Object.assign(Object.assign({}, L), {
                contentFeatures: p.computeContentFeaturesForTitleGroup(
                  L,
                  t.id,
                  T,
                  m,
                ),
              });
            })(g, t, M, B, {
              maxFontSize: _,
              minFontSize: z,
              markerRightMargin: W,
              traillingIconLeftMargin: Q,
              maxWidth: O,
              maxLineCount: 1,
            }),
            U = t.width - P,
            Y = t.height - F - I - J.groupBox.bounds.height - R,
            K =
              t.height * M.lyricListSlideCurrentSubtopicOffsetRatio -
              F -
              J.groupBox.bounds.height -
              R,
            tt = (function (t, e, i, l, u, h) {
              const {
                paddings: g,
                maxWidth: m,
                maxHeight: b,
                maxFontSize: v,
                minFontSize: T,
                scrollableFontSize: L,
                preferredLineCount: B,
                maxLineCount: M,
                markerRightMargin: k,
                traillingIconLeftMargin: F,
                subtopicSpacing: P,
                scrollFaderSize: I,
                currentSubtopicOffset: O,
              } = h;
              function _(t) {
                return t.groupBox.contentHeight <= b;
              }
              function z(t) {
                return t.textMeasurement.lineCount <= B;
              }
              function E(t) {
                return t.textMeasurement.lineCount <= M;
              }
              const A = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: y.computeTopicTitle(t),
                  hyperlink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: f.computePlaceholder(t),
                };
              });
              function W(e) {
                let h = g.top,
                  f = g.top,
                  v = 0;
                const y = [],
                  T = [];
                A.forEach(
                  (
                    {
                      topicId: t,
                      title: o,
                      text: L,
                      hyperlink: B,
                      markers: M,
                      placeholder: I,
                    },
                    _,
                  ) => {
                    var W;
                    const R = m - g.left - g.right,
                      V = M.slice(0, l.maxMarkerCount);
                    function H(l) {
                      return (function (t, e, i, o, l, u, p, h, g) {
                        var f, m, b, v, y;
                        const {
                            maxWidth: w,
                            fontSize: C,
                            markerRightMargin: T,
                            traillingIconLeftMargin: L,
                            placeholder: B,
                          } = g,
                          M =
                            null !== (f = g.textRoles) && void 0 !== f ? f : [],
                          k =
                            null !== (m = g.markerRoles) && void 0 !== m
                              ? m
                              : [],
                          F =
                            null !== (b = g.imagePlaceholderRoles) &&
                            void 0 !== b
                              ? b
                              : [],
                          P =
                            null !== (v = g.groupRoles) && void 0 !== v
                              ? v
                              : [],
                          I = h.length,
                          O = C,
                          _ = C,
                          z = C,
                          E = C,
                          A = (O + T) * I,
                          W = {
                            id: n.titleTextOfTopic(o),
                            roles: [...M],
                            bounds: s.zeroRect(),
                            absBounds: s.zeroRect(),
                            contentType: "text",
                            text: u,
                            fontSize: r.toCSSLength(C),
                            textIndent: r.toCSSLength(A),
                            lineHeight: x.computeTextLineHeight(C),
                            opacity: 0,
                          };
                        "textAlignment" in g
                          ? (W.textAlignment = g.textAlignment)
                          : (I > 0 || p) && (W.textAlignment = "leading");
                        "overflowWrap" in g &&
                          (W.overflowWrap = g.overflowWrap);
                        c.initializeBoxStyle(W, t, e, { layout: i });
                        const R = { width: C, height: C },
                          V = d.measureText(W, {
                            maxWidth: w,
                            traillingIconSize: p ? R : void 0,
                            traillingIconLeftMargin: L,
                          });
                        (W.bounds.width = V.width),
                          (W.bounds.height = V.height),
                          (W.lineCount = V.lineCount);
                        const H = {
                          id: n.shadowTitleTextOfTopic(o),
                          roles: [...M],
                          bounds: s.zeroRect(),
                          absBounds: s.zeroRect(),
                          contentType: "text",
                          text: u,
                          fontSize: r.toCSSLength(C),
                          textIndent: r.toCSSLength(A),
                          lineHeight: x.computeTextLineHeight(C),
                          fontWeight: "normal",
                        };
                        "textAlignment" in g
                          ? (H.textAlignment = g.textAlignment)
                          : (I > 0 || p) && (H.textAlignment = "leading");
                        "overflowWrap" in g &&
                          (H.overflowWrap = g.overflowWrap);
                        let D;
                        c.initializeBoxStyle(H, t, e, { layout: i });
                        const $ = a.rangedIntegers(1, 20),
                          j = a.mapValues($, (t) =>
                            d.measureText(
                              Object.assign({}, H, {
                                letterSpacing: 0.005 * t + "em",
                              }),
                              {
                                maxWidth: w,
                                traillingIconSize: p ? R : void 0,
                                traillingIconLeftMargin: L,
                              },
                            ),
                          );
                        let G;
                        G =
                          1 === V.lineCount
                            ? a.findClosestMatch(
                                j,
                                (t) => t.width - V.width >= 0,
                              )
                            : a.findClosestMatch(
                                j,
                                (t) => t.lineCount === V.lineCount,
                              );
                        G
                          ? ((D = G), (H.letterSpacing = G.letterSpacing))
                          : (D = d.measureText(H, {
                              maxWidth: w,
                              traillingIconSize: p ? R : void 0,
                              traillingIconLeftMargin: L,
                            }));
                        const Z = D.lineHeight;
                        (H.bounds.width = D.width),
                          (H.bounds.height = D.height),
                          (H.lineCount = D.lineCount);
                        const q = [],
                          N = Z;
                        let X,
                          Q,
                          J,
                          U = 0,
                          Y = 0;
                        for (let l = 0; l < I; l++) {
                          const r = h[l],
                            a = {
                              id: n.markerOfTopic(o, l),
                              roles: ["marker", ...k],
                              bounds: {
                                x: Y,
                                y: (N - _) / 2,
                                width: O,
                                height: _,
                              },
                              absBounds: s.zeroRect(),
                              contentType: "image",
                              imageSource: r.imageSource,
                            };
                          c.initializeBoxStyle(a, t, e, { layout: i }),
                            (Y += O + T),
                            U > 0 && (U += T),
                            (U += O),
                            q.push(a);
                        }
                        S.shouldShowPlaceholder(u.length > 0, I > 0) &&
                        "image" === B
                          ? ((Q = Z),
                            (J = Z),
                            (X = {
                              id: n.imageOfTopic(o),
                              roles: ["imagePlaceholder", ...F],
                              bounds: {
                                x: (Q - z) / 2,
                                y: (J - E) / 2,
                                width: z,
                                height: E,
                              },
                              absBounds: s.zeroRect(),
                              contentType: "svg-template",
                              svg: S.getPlaceholderImageSource(),
                              fillColor: t.foregroundColor,
                            }),
                            c.initializeBoxStyle(X, t, e, { layout: i }))
                          : ((Q = 0), (J = 0), (X = null));
                        let K = null;
                        p &&
                          V.traillingIconOffset &&
                          ((K = {
                            id: n.hyperlinkOfTopic(o),
                            roles: ["hyperlink"],
                            bounds: Object.assign(
                              Object.assign({}, V.traillingIconOffset),
                              R,
                            ),
                            absBounds: s.zeroRect(),
                            contentType: "svg-template",
                            fillColor: t.foregroundColor,
                            svg: S.getHyperlinkImageSource(p.type),
                            requestForHit: {
                              type: "hyperlink",
                              href: p.href,
                              topicId: o,
                              title: l,
                            },
                          }),
                          X && (K.bounds.x += X.bounds.width + L),
                          c.initializeBoxStyle(K, t, e, { layout: i }),
                          (K.bounds.y -=
                            null !== (y = K.borderWidth) && void 0 !== y
                              ? y
                              : 0));
                        const tt = Math.max(
                            Math.max(H.bounds.width, W.bounds.width),
                            U,
                            Q,
                          ),
                          et = Math.max(
                            Math.max(H.bounds.height, W.bounds.height),
                            Z,
                            N,
                            J,
                          ),
                          it = {
                            id: n.titleOfTopic(o),
                            roles: [...P],
                            bounds: { x: 0, y: 0, width: tt, height: et },
                            absBounds: s.zeroRect(),
                            contentType: "group",
                            children: [
                              H,
                              W,
                              ...q,
                              ...(X ? [X] : []),
                              ...(K ? [K] : []),
                            ],
                            contentWidth: tt,
                            contentHeight: et,
                            overflow: "visible",
                          };
                        "requestForHit" in g &&
                          (it.requestForHit = g.requestForHit);
                        return (
                          c.initializeBoxStyle(it, t, e, { layout: i }),
                          {
                            groupBox: it,
                            textBox: H,
                            markerImageBoxes: q,
                            textMeasurement: V,
                            imagePlaceholderBox: X,
                            lineHeight: Z,
                          }
                        );
                      })(i, u, C, t, o, l, B, V, {
                        maxWidth: R,
                        fontSize: e,
                        markerRightMargin: k,
                        traillingIconLeftMargin: F,
                        textRoles: ["subtopic"],
                        requestForHit: {
                          kind: "present",
                          topicId: t,
                          viaIntro: !0,
                        },
                        placeholder: I,
                      });
                    }
                    let D = H(L);
                    if (!E(D)) {
                      const t = a.rangedIntegers(L.length - 1, 1),
                        e = a.mapValues(t, (t) => w.getTruncatedText(L, t)),
                        i = a.mapValues(e, (t) => H(t));
                      D =
                        null !== (W = a.findClosestMatch(i, z)) && void 0 !== W
                          ? W
                          : H(w.getTruncatedText(L, 1));
                    }
                    0 === _ && ((h = O - D.lineHeight / 2), (f += h), (v = h));
                    const $ = D.groupBox.bounds;
                    ($.x = g.left),
                      ($.y = h),
                      (h += $.height + P),
                      _ > 0 && _ < A.length && (f += P),
                      (f += $.height),
                      _ === A.length - 1 &&
                        (f +=
                          b -
                          O -
                          (D.groupBox.bounds.height - D.lineHeight / 2)),
                      (f += g.bottom),
                      y.push(D),
                      T.push(
                        ...p.computeContentFeaturesForTitleGroup(D, t, L, M),
                      );
                  },
                );
                const L = {
                  id: n.subtopicListGroupOfTopic(t),
                  roles: ["subtopicListGroup"],
                  bounds: { x: 0, y: 0, width: m, height: Math.min(f, b) },
                  absBounds: s.zeroRect(),
                  contentType: "group",
                  children: [...y.map((t) => t.groupBox)],
                  contentWidth: m,
                  contentHeight: f,
                  overflow: f > b ? "scroll" : "hidden",
                  scrollFaderSize: I,
                  scrollOffset: v,
                  bottomScrollFaderOffset: o.computeBottomMaskOffset(i, I),
                };
                return (
                  c.initializeBoxStyle(L, i, u, { layout: C }),
                  { groupBox: L, subtopicGroups: y, contentFeatures: T }
                );
              }
              let R, V;
              const H = a.rangedIntegers(v, T),
                D = a.mapValues(H, (t) => ({ fontSize: t, group: W(t) })),
                $ = a.findClosestMatch(D, ({ group: t }) => _(t));
              $ ? ((R = $.fontSize), (V = $.group)) : ((R = L), (V = W(R)));
              return V;
            })(g.id, m, t, M, B, {
              paddings: Z,
              maxWidth: U,
              maxHeight: Y,
              maxFontSize: V,
              minFontSize: H,
              scrollableFontSize: D,
              markerRightMargin: $,
              traillingIconLeftMargin: Q,
              preferredLineCount: 2,
              maxLineCount: 3,
              subtopicSpacing: G,
              scrollFaderSize: j,
              currentSubtopicOffset: K,
            }),
            et = h.computeArrowShapeGroup(g.id, t, B, {
              arrowWidth: q,
              arrowHeight: N,
              arrowCornerRadius: X,
            });
          if (
            ((J.groupBox.bounds.x = k + P),
            (J.groupBox.bounds.y = F),
            (tt.groupBox.bounds.x = P),
            (tt.groupBox.bounds.y =
              J.groupBox.bounds.y + J.groupBox.bounds.height + R),
            (et.bounds.x = P),
            (et.bounds.y = F + J.groupBox.bounds.height + R + K - N / 2),
            t.boxes.push(J.groupBox),
            t.boxes.push(tt.groupBox),
            t.boxes.push(et),
            "underline" === t.lyricParentIndicatorShapeStyle)
          ) {
            const e = (function (t, e, i, o) {
              const { indicatorWidth: l, indicatorLineWidth: r } = o,
                a = `M 0 ${r / 2}    L ${l} ${r / 2}    Z`,
                d = {
                  id: n.primaryIndicatorOfTopic(t),
                  roles: ["primaryIndicator"],
                  bounds: { x: 0, y: 0, width: l, height: r },
                  absBounds: s.zeroRect(),
                  contentType: "shape",
                  shapePath: a,
                };
              return c.initializeBoxStyle(d, e, i, { layout: C }), d;
            })(g.id, t, B, { indicatorWidth: O, indicatorLineWidth: E });
            (e.bounds.x = J.groupBox.bounds.x),
              (e.bounds.y = J.groupBox.bounds.y + J.groupBox.bounds.height + A),
              t.boxes.push(e);
          }
          b && v.addHeaderBoxes(t, b, M, B, C),
            u.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(
              t,
              ...J.contentFeatures,
              ...tt.contentFeatures,
            );
        }),
        (e.generateLyricListSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            { numberOfVisibleTopics: r = 0, numberOfVisitedTopics: a = 0 } = o,
            s = Object.assign({}, t);
          l.forEach(({ id: t }, e) => {
            r != l.length &&
              (e > r
                ? g.computePendingBoxStates(s, n.titleOfTopic(t))
                : e < r &&
                  (function (t, e) {
                    t.boxes = n.mutateBoxes(t.boxes, (t) =>
                      t.id !== e
                        ? t
                        : Object.assign(Object.assign({}, t), { opacity: 0.4 }),
                    );
                  })(s, n.titleOfTopic(t))),
              r != l.length ? T(s, t, e !== r) : T(s, t, e !== a);
          });
          const c = r !== l.length ? r : a,
            d = n.assertBox(
              n.getBoxById(s.boxes, n.subtopicListGroupOfTopic(s.topicId)),
            ),
            u = n.assertBox(
              n.getBoxById(s.boxes, n.titleOfTopic(l[0].id), "group"),
            ),
            p = n.assertBox(
              n.getBoxById(s.boxes, n.titleTextOfTopic(l[0].id), "text"),
            );
          return (
            m.computeSubtopicListScrollingStates(
              s,
              d.id,
              n.titleOfTopic(l[c].id),
              (t, e) => {
                const i = n.assertBox(
                    n.getBoxById(s.boxes, n.titleTextOfTopic(l[c].id)),
                  ),
                  o =
                    "lineCount" in i && i.lineCount
                      ? i.bounds.height / i.lineCount
                      : e.bounds.height,
                  r =
                    "lineCount" in p && p.lineCount
                      ? p.bounds.height / p.lineCount
                      : u.bounds.height;
                return o / 2 - u.bounds.y - r / 2;
              },
            ),
            (function (t) {
              var e, i;
              if (
                null === (e = t.aliases) || void 0 === e
                  ? void 0
                  : e.some(
                      (e) =>
                        "listOfTopic" === e.kind &&
                        e.topicId === t.topicId &&
                        0 === e.index,
                    )
              ) {
                t.subtopics.forEach((e) => {
                  const i = n.assertBox(
                      n.getBoxById(t.boxes, n.titleOfTopic(e)),
                    ),
                    o = n.assertBox(
                      n.getBoxById(t.boxes, n.shadowTitleTextOfTopic(e)),
                    );
                  L(t, i), L(t, o);
                });
                const e = n.assertBox(
                  n.getBoxById(t.boxes, n.arrowOfTopic(t.topicId)),
                );
                n.setBoxEnteringState(t, {
                  id: e.id,
                  opacity: 0,
                  strokeOffset: 1,
                }),
                  n.addSlideEnteringAnimations(t, [
                    {
                      durationMultiplier: 2.5,
                      delayMultiplier: 0.75,
                      easing: "easeInOutCubic",
                      on: "postTransition",
                      effect: "mutate",
                      finalState: {
                        boxes: [
                          {
                            id: e.id,
                            opacity:
                              null !== (i = e.opacity) && void 0 !== i ? i : 1,
                            strokeOffset: 0,
                          },
                        ],
                      },
                    },
                  ]);
              }
            })(s),
            b.addBackgroundBoxes(s, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0, numberOfVisitedTopics: r = 0 } =
                  i,
                a = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                });
              if ("background-shape" === (null == a ? void 0 : a.contentType)) {
                n.assertBox(
                  n.getBoxById(t.boxes, n.arrowOfTopic(t.topicId), "shape"),
                ).fillColor = a.fillColor;
              }
              const s = n.filterBoxes(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "subtopic" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                }),
                c = l !== o.length ? l : r;
              o.forEach(({ id: t }, e) => {
                const i =
                  null == s
                    ? void 0
                    : s.find(
                        (e) =>
                          "background-shape" === e.contentType &&
                          -1 !== e.id.indexOf(t),
                      );
                i && (i.opacity = e <= c ? 1 : 0);
              });
            })(s, e, o),
            s
          );
        });
    },
    62100: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateOnlyChildImageableParentSlide =
          e.layoutOnlyChildImageableParentSlide =
            void 0);
      const n = i(6776),
        o = i(76118),
        l = i(53399),
        r = i(97857),
        a = i(91199),
        s = i(51116),
        c = i(68605),
        d = i(28850),
        u = i(68852),
        p = i(90189),
        h = "only-child-imageable-parent";
      function g(t, e, i, n, o) {
        var r;
        const {
          maxWidth: a,
          maxHeight: s,
          maxFontSize: d,
          minFontSize: u,
          markerRightMargin: g,
          traillingIconLeftMargin: f,
          scrollFaderSize: m,
        } = o;
        function b(t) {
          return t.groupBox.contentHeight <= s;
        }
        const v = t.title,
          x = null !== (r = t.markers) && void 0 !== r ? r : [],
          y = x.slice(0, i.maxMarkerCount);
        function S(i) {
          var o;
          return p.computeTopicTitleGroup(
            e,
            n,
            h,
            t.id,
            v,
            v,
            null !== (o = t.hyperlink) && void 0 !== o ? o : null,
            y,
            {
              maxWidth: a,
              maxHeight: s,
              fontSize: i,
              overflowWrap: "break-word",
              markerRightMargin: g,
              traillingIconLeftMargin: f,
              textRoles: ["subtopic"],
              requestForHit: { kind: "present", topicId: t.id, viaIntro: !0 },
              scrollFaderSize: m,
            },
          );
        }
        let w = S(d);
        if (!b(w)) {
          const t = l.rangedIntegers(d, u),
            e = l.mapValues(t, (t) => ({ fontSize: t, group: S(t) })),
            i = l.findClosestMatch(e, ({ group: t }) => b(t));
          w = i ? i.group : S(u);
        }
        return Object.assign(Object.assign({}, w), {
          contentFeatures: c.computeContentFeaturesForTitleGroup(w, t.id, v, x),
        });
      }
      function f(t, e, i, o) {
        const { drawingDirection: l, lineLength: s, lineWidth: c } = o,
          d = "left-to-right" === l ? s : c,
          u = "left-to-right" === l ? c : s,
          p =
            "left-to-right" === l
              ? `M0 ${c / 2} l${s} 0`
              : `M${c / 2} 0 l 0 ${s}`,
          g = {
            id: n.separatorLineOfTopic(t),
            roles: ["separatorLine"],
            bounds: { x: 0, y: 0, width: d, height: u },
            absBounds: r.zeroRect(),
            contentType: "shape",
            shapePath: p,
            lineWidth: c,
          };
        return a.initializeBoxStyle(g, e, i, { layout: h }), g;
      }
      (e.layoutOnlyChildImageableParentSlide = function (t, e, i = {}) {
        var l;
        const { topic: c } = e,
          { image: d } = c;
        if (!d)
          throw new Error("Missing parent image for List Slide With Image");
        const p =
            null !== (l = null == i ? void 0 : i.theme) && void 0 !== l
              ? l
              : a.defaultTheme,
          m = a.appearanceOf(p),
          b = a.dimensionOf(p, { width: t.width, height: t.height });
        a.initializeSlideStyle(t, b, m, { layout: h });
        const v = o.computeImageSizeHint(
            { width: t.width, height: t.height },
            d,
          ),
          x =
            0 === d.size.width || 0 === d.size.height
              ? 1
              : d.size.width / d.size.height;
        t.width > t.height && ("small" === v || x < 4)
          ? (function (t, e, i, l) {
              const { topic: c, subtopics: d } = l,
                { id: p, image: m, video: b } = c;
              if (!m)
                throw new Error(
                  "Missing image attributes for Only Child With Image",
                );
              const v = a.calcLength(e.hSlidePadding, t),
                x = a.calcLength(e.vSlidePadding, t),
                y = o.computeImageSizeHint(
                  { width: t.width, height: t.height },
                  m,
                );
              let S = ("small" === y ? 2 : 6) * v;
              const w = t.height - x - x,
                C = ("small" === y ? 8 : 4) * v,
                T = t.height - x - x,
                L = v,
                B = Math.round(a.calcLength({ pct: 6, unit: "vmin" }, t)),
                M = Math.round(a.calcLength({ pct: 5, unit: "vmin" }, t)),
                k = a.calcLength(e.hPaddingXSmall, t),
                F = a.calcLength(e.braceListSlideScrollFaderHeight, t),
                P = a.calcLength(e.hPaddingSmall, t),
                I = 3,
                O = g(d[0], t, e, i, {
                  maxWidth: C,
                  maxHeight: T,
                  maxFontSize: B,
                  minFontSize: M,
                  markerRightMargin: k,
                  traillingIconLeftMargin: P,
                  scrollFaderSize: F,
                });
              S = Math.max(t.width - 2 * v - O.groupBox.bounds.width - L, S);
              const _ = Math.min(S / m.size.width, w / m.size.height),
                z = {
                  id: n.imageOfTopic(p),
                  roles: ["title"],
                  bounds: {
                    x: 0,
                    y: 0,
                    width: m.size.width * _,
                    height: m.size.height * _,
                  },
                  absBounds: r.zeroRect(),
                  contentType: "image",
                  imageSource: u.computeTopicImageSource(m, t.foregroundColor),
                  zoomable: !0,
                  videoSource: null == b ? void 0 : b.videoSource,
                  requestForHit: { kind: "fastBackward" },
                };
              a.initializeBoxStyle(z, t, i, { layout: h });
              const E = f(c.id, t, i, {
                  drawingDirection: "top-to-bottom",
                  lineLength: O.groupBox.bounds.height,
                  lineWidth: I,
                }),
                A = z.bounds.width + L + O.groupBox.bounds.width;
              (z.bounds.x = (t.width - A) / 2),
                (z.bounds.y = (t.height - z.bounds.height) / 2),
                (O.groupBox.bounds.x = z.bounds.x + z.bounds.width + L),
                (O.groupBox.bounds.y =
                  (t.height - O.groupBox.bounds.height) / 2),
                (E.bounds.x = O.groupBox.bounds.x - L / 2 - I / 2),
                (E.bounds.y = O.groupBox.bounds.y),
                t.boxes.push(z),
                t.boxes.push(O.groupBox),
                t.boxes.push(E),
                s.computeAbsoluteBounds(t.boxes),
                n.addSlideContentFeatures(t, {
                  kind: "image",
                  topicId: p,
                  integrity: "full",
                }),
                n.addSlideContentFeatures(t, ...O.contentFeatures);
            })(t, b, m, e)
          : (function (t, e, i, l) {
              const { topic: c, subtopics: d } = l,
                { id: p, image: m, video: b } = c;
              if (!m)
                throw new Error(
                  "Missing image attributes for List Slide With Image",
                );
              const v = a.calcLength(e.hSlidePadding, t),
                x = a.calcLength(e.vSlidePadding, t),
                y = t.height - x - x,
                S = o.computeImageSizeHint(
                  { width: t.width, height: t.height },
                  m,
                ),
                w = t.width - v - v,
                C = "normal" === S ? 0.375 * t.height : 0.25 * t.height,
                T =
                  t.width > t.height
                    ? 2 * a.calcLength(e.vPaddingNormal, t)
                    : 2 * a.calcLength(e.vPaddingXSmall, t),
                L = t.width - v - v,
                B =
                  t.width > t.height
                    ? Math.round(a.calcLength({ pct: 6, unit: "vmin" }, t))
                    : Math.round(a.calcLength({ pct: 7.3, unit: "vmin" }, t)),
                M =
                  t.width > t.height
                    ? Math.round(a.calcLength({ pct: 5, unit: "vmin" }, t))
                    : Math.round(a.calcLength({ pct: 6.4, unit: "vmin" }, t)),
                k = a.calcLength(e.hPaddingXSmall, t),
                F = a.calcLength(e.braceListSlideScrollFaderHeight, t),
                P = 3,
                I = a.calcLength(e.hPaddingSmall, t),
                O = Math.min(w / m.size.width, C / m.size.height),
                _ = {
                  id: n.imageOfTopic(p),
                  roles: ["title"],
                  bounds: {
                    x: 0,
                    y: 0,
                    width: m.size.width * O,
                    height: m.size.height * O,
                  },
                  absBounds: r.zeroRect(),
                  contentType: "image",
                  imageSource: u.computeTopicImageSource(m, t.foregroundColor),
                  zoomable: !0,
                  videoSource: null == b ? void 0 : b.videoSource,
                  requestForHit: { kind: "fastBackward" },
                };
              a.initializeBoxStyle(_, t, i, { layout: h });
              const z = t.height - x - _.bounds.height - T,
                E = g(d[0], t, e, i, {
                  maxWidth: L,
                  maxHeight: z,
                  maxFontSize: B,
                  minFontSize: M,
                  markerRightMargin: k,
                  traillingIconLeftMargin: I,
                  scrollFaderSize: F,
                }),
                A = f(c.id, t, i, {
                  drawingDirection: "left-to-right",
                  lineLength: t.width > t.height ? E.groupBox.bounds.width : w,
                  lineWidth: P,
                });
              (_.bounds.x = v), (E.groupBox.bounds.x = v), (A.bounds.x = v);
              const W = _.bounds.height + T + E.groupBox.bounds.height;
              (_.bounds.y = x + (y - W) / 2),
                (E.groupBox.bounds.y = _.bounds.y + _.bounds.height + T),
                (A.bounds.y = E.groupBox.bounds.y - T / 2 - P / 2),
                t.boxes.push(_),
                t.boxes.push(E.groupBox),
                t.boxes.push(A),
                s.computeAbsoluteBounds(t.boxes),
                n.addSlideContentFeatures(t, {
                  kind: "image",
                  topicId: p,
                  integrity: "full",
                }),
                n.addSlideContentFeatures(t, ...E.contentFeatures);
            })(t, b, m, e);
      }),
        (e.generateOnlyChildImageableParentSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            r = Object.assign({}, t),
            a = n.assertBox(
              n.getBoxById(r.boxes, n.separatorLineOfTopic(r.topicId)),
            ),
            s = n.assertBox(
              n.getBoxById(r.boxes, n.titleOfTopic(l[0].id), "group"),
            );
          return (
            s.contentHeight > s.bounds.height && n.addMultistepBox(r, s.id),
            (function (t, { subtopicGroupBox: e, separatorLineBox: i }) {
              var o;
              (null === (o = t.aliases) || void 0 === o
                ? void 0
                : o.some(
                    (e) =>
                      "listOfTopic" === e.kind &&
                      e.topicId === t.topicId &&
                      0 === e.index,
                  )) &&
                (n.setSlideEnteringState(t, {
                  boxes: [
                    { id: e.id, opacity: 0 },
                    { id: i.id, opacity: 0, strokeOffset: 1 },
                  ],
                }),
                n.addSlideEnteringAnimations(t, [
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: e.id, opacity: 1 }] },
                  },
                  {
                    on: "postTransition",
                    groups: ["separatorVisible"],
                    durationMultiplier: 0,
                    delayMultiplier: 0.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  },
                  {
                    after: "separatorVisible",
                    durationMultiplier: 1,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, strokeOffset: 0 }] },
                  },
                ]));
            })(r, { subtopicGroupBox: s, separatorLineBox: a }),
            d.addBackgroundBoxes(r, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0, numberOfVisitedTopics: r = 0 } =
                  i,
                a = n.filterBoxes(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "subtopic" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                }),
                s = l !== o.length ? l : r;
              o.forEach(({ id: t }, e) => {
                const i =
                  null == a
                    ? void 0
                    : a.find(
                        (e) =>
                          "background-shape" === e.contentType &&
                          -1 !== e.id.indexOf(t),
                      );
                i && (i.opacity = e <= s ? 1 : 0);
              });
            })(r, e, o),
            r
          );
        });
    },
    54710: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateOnlyChildListSlide = e.layoutOnlyChildListSlide = void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = i(53399),
        a = i(12851),
        s = i(41432),
        c = i(51116),
        d = i(35561),
        u = i(14594),
        p = i(90189),
        h = i(68605),
        g = i(55287),
        f = i(28850),
        m = "only-child";
      function b(t) {
        const e = t.subtopics[0];
        if (!e) throw new Error("No subtopics found for Only Child layout");
        return e;
      }
      (e.layoutOnlyChildListSlide = function (t, e, i = {}) {
        var f;
        const { topic: v, headerTopic: x } = e,
          y = b(e),
          S =
            null !== (f = null == i ? void 0 : i.theme) && void 0 !== f
              ? f
              : l.defaultTheme,
          w = l.appearanceOf(S),
          C = l.dimensionOf(S, { width: t.width, height: t.height });
        l.initializeSlideStyle(t, C, w, { layout: m });
        const T = l.calcLength(C.hSlidePadding, t),
          L = l.calcLength(C.vSlidePadding, t),
          B = t.width - T - T,
          M = t.height - L - L,
          k = o.calc(0.14, "vmin", t),
          F = l.calcLength(C.hPaddingXSmall, t),
          P = B,
          I = l.calcLength(C.hPaddingXSmall, t),
          O = o.calc(0.1, "vmin", t),
          _ = o.calc(0.04, "vmin", t),
          z = B,
          E = l.calcLength(C.onlyChildSlideSeparatorLineWidth, t),
          A = l.calcLength(
            t.width > t.height ? C.vPaddingSmall : C.vPaddingXSmall,
            t,
          ),
          W = l.calcLength(
            t.width > t.height ? C.vPaddingSmall : C.vPaddingXSmall,
            t,
          ),
          R = B,
          V = E + A + W,
          H = l.calcLength(C.hPaddingSmall, t),
          D = (function (t, e, i, n, o) {
            var l, c;
            const {
              fontSize: d,
              maxWidth: u,
              markerRightMargin: f,
              traillingIconLeftMargin: b,
              maxLineCount: v,
            } = o;
            function x(t) {
              return t.textMeasurement.lineCount <= v;
            }
            const y = null !== (l = t.markers) && void 0 !== l ? l : [],
              S = y.slice(0, i.maxMarkerCount),
              w = g.computePlaceholder(t);
            function C(i) {
              var o;
              return p.computeTopicTitleGroup(
                e,
                n,
                m,
                t.id,
                t.title,
                i,
                null !== (o = t.hyperlink) && void 0 !== o ? o : null,
                S,
                {
                  maxWidth: u,
                  fontSize: d,
                  markerRightMargin: f,
                  traillingIconLeftMargin: b,
                  overflowWrap: "break-word",
                  textRoles: ["title"],
                  requestForHit: { kind: "fastBackward" },
                  placeholder: w,
                },
              );
            }
            const T = s.computeTopicTitle(t),
              L = r.rangedIntegers(T.length, 1),
              B = r.mapValues(L, (t) => a.getTruncatedText(T, t)),
              M = r.mapValues(B, C),
              k =
                null !== (c = r.findClosestMatch(M, x)) && void 0 !== c
                  ? c
                  : C(a.getTruncatedText(T, 1));
            return Object.assign(Object.assign({}, k), {
              contentFeatures: h.computeContentFeaturesForTitleGroup(
                k,
                t.id,
                T,
                y,
              ),
            });
          })(v, t, C, w, {
            maxWidth: P,
            fontSize: k,
            markerRightMargin: F,
            traillingIconLeftMargin: H,
            maxLineCount: 2,
          }),
          $ = (function (t, e, i, n, o) {
            var l, c;
            const {
              maxWidth: d,
              maxHeight: f,
              maxFontSize: b,
              minFontSize: v,
              preferredLineCount: x,
              maxLineCount: y,
              markerRightMargin: S,
              traillingIconLeftMargin: w,
            } = o;
            function C(t) {
              return t.groupBox.bounds.height <= f;
            }
            function T(t) {
              return t.textMeasurement.lineCount <= x;
            }
            function L(t) {
              return t.textMeasurement.lineCount <= y;
            }
            const B = s.computeTopicTitle(t),
              M = null !== (l = t.markers) && void 0 !== l ? l : [],
              k = g.computePlaceholder(t),
              F = M.slice(0, i.maxMarkerCount);
            function P(i, o) {
              var l;
              return p.computeTopicTitleGroup(
                e,
                n,
                m,
                t.id,
                t.title,
                i,
                null !== (l = t.hyperlink) && void 0 !== l ? l : null,
                F,
                {
                  maxWidth: d,
                  fontSize: o,
                  markerRightMargin: S,
                  traillingIconLeftMargin: w,
                  textRoles: ["subtopic"],
                  requestForHit: {
                    kind: "present",
                    topicId: t.id,
                    viaIntro: !0,
                  },
                  placeholder: k,
                  disallowShortTrailingLine: !0,
                },
              );
            }
            const I = r.rangedIntegers(b, v),
              O = r.mapValues(I, (t) => P(B, t));
            let _ = r.findClosestMatch(O, C);
            if (_) {
              if (_.textMeasurement.hasShortTrailingLine) {
                const { lineCount: t, fontSize: e } = _.textMeasurement,
                  i = P(
                    B,
                    e * u.defaultFontSizeScaleRatioToEliminateShortTrailingLine,
                  );
                i.textMeasurement.lineCount < t && (_ = i);
              }
              return Object.assign(Object.assign({}, _), {
                contentFeatures: h.computeContentFeaturesForTitleGroup(
                  _,
                  t.id,
                  B,
                  M,
                ),
              });
            }
            const z = b;
            let E = P(B, z);
            if (!L(E)) {
              const t = r.rangedIntegers(B.length - 1, 1),
                e = r.mapValues(t, (t) => a.getTruncatedText(B, t)),
                i = r.mapValues(e, (t) => P(t, z));
              E =
                null !== (c = r.findClosestMatch(i, T)) && void 0 !== c
                  ? c
                  : P(a.getTruncatedText(B, 1), z);
            }
            return Object.assign(Object.assign({}, E), {
              contentFeatures: h.computeContentFeaturesForTitleGroup(
                E,
                t.id,
                B,
                M,
              ),
            });
          })(y, t, C, w, {
            maxWidth: z,
            maxHeight: M - D.groupBox.bounds.height - V,
            maxFontSize: O,
            minFontSize: _,
            preferredLineCount: 2,
            maxLineCount: 3,
            markerRightMargin: I,
            traillingIconLeftMargin: H,
          }),
          j = Math.min(
            R,
            Math.max(D.groupBox.bounds.width, $.groupBox.bounds.width),
          ),
          G = (function (t, e, i, r) {
            const {
                lineLength: a,
                lineWidth: s,
                topPadding: c,
                bottomPadding: d,
              } = r,
              u = {
                id: n.separatorLineOfTopic(t),
                roles: ["separatorLine"],
                bounds: { x: 0, y: 0, width: a, height: c + s + d },
                absBounds: o.zeroRect(),
                contentType: "shape",
                shapePath: `M${s / 2} ${c + s / 2}l${a - s} 0`,
                lineWidth: s,
              };
            return l.initializeBoxStyle(u, e, i, { layout: m }), u;
          })(v.id, t, w, {
            lineWidth: E,
            lineLength: j,
            topPadding: A,
            bottomPadding: W,
          }),
          Z =
            (M -
              (D.groupBox.bounds.height +
                G.bounds.height +
                $.groupBox.bounds.height)) /
            2;
        (D.groupBox.bounds.x = T),
          (D.groupBox.bounds.y = L + Z),
          (G.bounds.x = T),
          (G.bounds.y = D.groupBox.bounds.y + D.groupBox.bounds.height),
          ($.groupBox.bounds.x = T),
          ($.groupBox.bounds.y = G.bounds.y + G.bounds.height),
          t.boxes.push(D.groupBox),
          t.boxes.push($.groupBox),
          t.boxes.push(G),
          x && d.addHeaderBoxes(t, x, C, w, m),
          c.computeAbsoluteBounds(t.boxes),
          n.addSlideContentFeatures(
            t,
            ...D.contentFeatures,
            ...$.contentFeatures,
          );
      }),
        (e.generateOnlyChildListSlide = function (t, e, i) {
          var o;
          const l = Object.assign({}, t),
            { id: r } = b(e),
            a = n.assertBox(n.getBoxById(l.boxes, n.titleOfTopic(r), "group")),
            s = n.assertBox(
              n.getBoxById(l.boxes, n.separatorLineOfTopic(l.topicId)),
            );
          return (
            a.contentHeight > a.bounds.height &&
              (null === (o = l.aliases) || void 0 === o
                ? void 0
                : o.some(
                    (t) =>
                      "listOfTopic" === t.kind &&
                      t.topicId === l.topicId &&
                      0 === t.index,
                  )) &&
              (n.addMultistepBox(l, a.id),
              n.addSlideLeavingAnimations(l, [
                {
                  durationMultiplier: 1,
                  easing: "easeInOutCubic",
                  on: "preTransition",
                  effect: "mutate",
                  finalState: { boxes: [{ id: a.id, scrollOffset: 0 }] },
                },
              ])),
            (function (t, { subtopicGroupBox: e, separatorLineBox: i }) {
              var o;
              (null === (o = t.aliases) || void 0 === o
                ? void 0
                : o.some(
                    (e) =>
                      "listOfTopic" === e.kind &&
                      e.topicId === t.topicId &&
                      0 === e.index,
                  )) &&
                (n.setSlideEnteringState(t, {
                  boxes: [
                    { id: e.id, opacity: 0 },
                    { id: i.id, opacity: 0, strokeOffset: 1 },
                  ],
                }),
                n.addSlideEnteringAnimations(t, [
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: e.id, opacity: 1 }] },
                  },
                  {
                    on: "postTransition",
                    groups: ["separatorVisible"],
                    durationMultiplier: 0,
                    delayMultiplier: 0.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  },
                  {
                    after: "separatorVisible",
                    durationMultiplier: 1,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, strokeOffset: 0 }] },
                  },
                ]));
            })(l, { subtopicGroupBox: a, separatorLineBox: s }),
            f.addBackgroundBoxes(l, e, i),
            l
          );
        });
    },
    14064: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateOnlyImageableChildSlide = e.layoutOnlyImageableChildSlide =
          void 0);
      const n = i(6776),
        o = i(76118),
        l = i(53399),
        r = i(97857),
        a = i(91199),
        s = i(51116),
        c = i(68605),
        d = i(55287),
        u = i(28850),
        p = i(68852),
        h = i(41432),
        g = i(90189),
        f = i(12851),
        m = "only-imageable-child";
      function b(t, e, i, n, o) {
        var r;
        const {
          defaultFontSize: a,
          markerRightMargin: s,
          traillingIconLeftMargin: u,
          maxWidth: p,
          maxLineCount: b,
        } = o;
        function v(t) {
          return t.textMeasurement.lineCount <= b;
        }
        const x = null !== (r = t.markers) && void 0 !== r ? r : [],
          y = x.slice(0, i.maxMarkerCount),
          S = d.computePlaceholder(t);
        function w(i, o) {
          var l;
          return g.computeTopicTitleGroup(
            e,
            n,
            m,
            t.id,
            t.title,
            i,
            null !== (l = t.hyperlink) && void 0 !== l ? l : null,
            y,
            {
              maxWidth: p,
              fontSize: o,
              markerRightMargin: s,
              traillingIconLeftMargin: u,
              overflowWrap: "break-word",
              textRoles: ["title"],
              requestForHit: { kind: "fastBackward" },
              placeholder: S,
            },
          );
        }
        const C = h.computeTopicTitle(t);
        let T = C,
          L = w(T, a);
        if (!v(L)) {
          const t = l.rangedIntegers(T.length - 1, 1),
            e = l.mapValues(t, (t) => f.getTruncatedText(T, t)),
            i = l.mapValues(e, (t) => ({ text: t, group: w(t, a) })),
            n = l.findClosestMatch(i, ({ group: t }) => v(t));
          n
            ? ((T = n.text), (L = n.group))
            : ((T = f.getTruncatedText(T, 1)), (L = w(T, a)));
        }
        return Object.assign(Object.assign({}, L), {
          contentFeatures: c.computeContentFeaturesForTitleGroup(L, t.id, C, x),
        });
      }
      function v(t, e, i, o) {
        const { lineLength: l, lineWidth: s } = o,
          c = {
            id: n.separatorLineOfTopic(t),
            roles: ["separatorLine"],
            bounds: { x: 0, y: 0, width: l, height: s },
            absBounds: r.zeroRect(),
            contentType: "shape",
            shapePath: `M0 ${s / 2} l${l} 0`,
            lineWidth: s,
          };
        return a.initializeBoxStyle(c, e, i, { layout: m }), c;
      }
      (e.layoutOnlyImageableChildSlide = function (t, e, i = {}) {
        var l;
        const { subtopics: c } = e,
          { image: d } = c[0];
        if (!d)
          throw new Error("Missing child image for List Slide With Image");
        const u =
            null !== (l = null == i ? void 0 : i.theme) && void 0 !== l
              ? l
              : a.defaultTheme,
          h = a.appearanceOf(u),
          g = a.dimensionOf(u, { width: t.width, height: t.height });
        a.initializeSlideStyle(t, g, h, { layout: m });
        const f = o.computeImageSizeHint(
            { width: t.width, height: t.height },
            d,
          ),
          x =
            0 === d.size.width || 0 === d.size.height
              ? 1
              : d.size.width / d.size.height;
        t.width > t.height && ("small" === f || x < 4)
          ? (function (t, e, i, l) {
              const { topic: c, subtopics: d } = l,
                u = d[0],
                { image: h, video: g } = u;
              if (!h)
                throw new Error(
                  "Missing image attributes for Only Child With Image",
                );
              const f = a.calcLength(e.hSlidePadding, t),
                x = a.calcLength(e.vSlidePadding, t),
                y = o.computeImageSizeHint(
                  { width: t.width, height: t.height },
                  h,
                ),
                S = ("small" === y ? 8 : 4) * f,
                w = Math.round(a.calcLength({ pct: 10, unit: "vmin" }, t)),
                C = a.calcLength(e.hPaddingXSmall, t),
                T = 4,
                L = f;
              let B = ("small" === y ? 2 : 6) * f;
              const M = t.height - x - x,
                k = a.calcLength(e.vPaddingSmall, t),
                F = 120,
                P = 3,
                I = a.calcLength(e.hPaddingSmall, t),
                O = b(c, t, e, i, {
                  defaultFontSize: w,
                  markerRightMargin: C,
                  traillingIconLeftMargin: I,
                  maxWidth: S,
                  maxLineCount: T,
                });
              a.initializeBoxStyle(O.groupBox, t, i, { layout: m }),
                (B = Math.max(
                  t.width - 2 * f - O.groupBox.bounds.width - L,
                  B,
                ));
              const _ = Math.min(B / h.size.width, M / h.size.height),
                z = {
                  id: n.imageOfTopic(u.id),
                  roles: ["subtopic"],
                  bounds: {
                    x: 0,
                    y: 0,
                    width: h.size.width * _,
                    height: h.size.height * _,
                  },
                  absBounds: r.zeroRect(),
                  contentType: "image",
                  imageSource: p.computeTopicImageSource(h, t.foregroundColor),
                  zoomable: !0,
                  videoSource: null == g ? void 0 : g.videoSource,
                  requestForHit: {
                    kind: "present",
                    topicId: u.id,
                    viaIntro: !0,
                  },
                };
              a.initializeBoxStyle(z, t, i, { layout: m });
              const E = v(c.id, t, i, { lineLength: F, lineWidth: P });
              a.initializeBoxStyle(E, t, i, { layout: m });
              const A = O.groupBox.bounds.width + L + z.bounds.width,
                W = O.groupBox.bounds.height + k + P / 2;
              (O.groupBox.bounds.x = (t.width - A) / 2),
                (O.groupBox.bounds.y = (t.height - W) / 2),
                (z.bounds.x =
                  O.groupBox.bounds.x + O.groupBox.bounds.width + L),
                (z.bounds.y = (t.height - z.bounds.height) / 2),
                (E.bounds.x = O.groupBox.bounds.x),
                (E.bounds.y =
                  O.groupBox.bounds.y + O.groupBox.bounds.height + k),
                t.boxes.push(O.groupBox),
                t.boxes.push(z),
                t.boxes.push(E),
                s.computeAbsoluteBounds(t.boxes),
                n.addSlideContentFeatures(t, ...O.contentFeatures),
                n.addSlideContentFeatures(t, {
                  kind: "image",
                  topicId: u.id,
                  integrity: "full",
                });
            })(t, g, h, e)
          : (function (t, e, i, o) {
              const { topic: l, subtopics: c } = o,
                d = c[0],
                { image: u, video: h } = d;
              if (!u)
                throw new Error(
                  "Missing image attributes for Only Child With Image",
                );
              const g = a.calcLength(e.hSlidePadding, t),
                f = t.width - g - g,
                x =
                  t.width > t.height
                    ? Math.round(a.calcLength({ pct: 10, unit: "vmin" }, t))
                    : Math.round(a.calcLength({ pct: 14, unit: "vmin" }, t)),
                y = a.calcLength(e.hPaddingXSmall, t),
                S = t.width > t.height ? 2 : 1,
                w = t.width - g - g,
                C = t.width > t.height ? 0.375 * t.height : 0.625 * t.height,
                T =
                  t.width > t.height
                    ? 2 * a.calcLength(e.vPaddingNormal, t)
                    : 2 * a.calcLength(e.vPaddingXSmall, t),
                L = 3,
                B = Math.min(w / u.size.width, C / u.size.height),
                M = a.calcLength(e.hPaddingSmall, t),
                k = b(l, t, e, i, {
                  defaultFontSize: x,
                  markerRightMargin: y,
                  traillingIconLeftMargin: M,
                  maxWidth: f,
                  maxLineCount: S,
                });
              a.initializeBoxStyle(k.groupBox, t, i, { layout: m });
              const F = {
                id: n.imageOfTopic(d.id),
                roles: ["subtopic"],
                bounds: {
                  x: 0,
                  y: 0,
                  width: u.size.width * B,
                  height: u.size.height * B,
                },
                absBounds: r.zeroRect(),
                contentType: "image",
                imageSource: p.computeTopicImageSource(u, t.foregroundColor),
                zoomable: !0,
                videoSource: null == h ? void 0 : h.videoSource,
                requestForHit: { kind: "present", topicId: d.id, viaIntro: !0 },
              };
              a.initializeBoxStyle(F, t, i, { layout: m });
              const P = t.width > t.height ? k.groupBox.bounds.width : 780,
                I = v(l.id, t, i, { lineLength: P, lineWidth: L });
              a.initializeBoxStyle(I, t, i, { layout: m });
              const O = k.groupBox.bounds.height + T + F.bounds.height;
              (k.groupBox.bounds.x = g),
                (k.groupBox.bounds.y = (t.height - O) / 2),
                (F.bounds.x = (t.width - F.bounds.width) / 2),
                (F.bounds.y =
                  k.groupBox.bounds.y + k.groupBox.bounds.height + T),
                (I.bounds.x = g),
                (I.bounds.y =
                  k.groupBox.bounds.y +
                  k.groupBox.bounds.height +
                  T / 2 -
                  L / 2),
                t.boxes.push(k.groupBox),
                t.boxes.push(F),
                t.boxes.push(I),
                s.computeAbsoluteBounds(t.boxes),
                n.addSlideContentFeatures(t, ...k.contentFeatures),
                n.addSlideContentFeatures(t, {
                  kind: "image",
                  topicId: d.id,
                  integrity: "full",
                });
            })(t, g, h, e);
      }),
        (e.generateOnlyImageableChildSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            r = Object.assign({}, t),
            a = n.assertBox(
              n.getBoxById(r.boxes, n.separatorLineOfTopic(r.topicId)),
            );
          return (
            (function (t, { subtopicImageBox: e, separatorLineBox: i }) {
              var o;
              (null === (o = t.aliases) || void 0 === o
                ? void 0
                : o.some(
                    (e) =>
                      "listOfTopic" === e.kind &&
                      e.topicId === t.topicId &&
                      0 === e.index,
                  )) &&
                (n.setSlideEnteringState(t, {
                  boxes: [
                    { id: e.id, opacity: 0 },
                    { id: i.id, opacity: 0, strokeOffset: 1 },
                  ],
                }),
                n.addSlideEnteringAnimations(t, [
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.75,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: e.id, opacity: 1 }] },
                  },
                  {
                    on: "postTransition",
                    groups: ["separatorVisible"],
                    durationMultiplier: 0,
                    delayMultiplier: 0.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  },
                  {
                    after: "separatorVisible",
                    durationMultiplier: 1,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, strokeOffset: 0 }] },
                  },
                ]));
            })(r, {
              subtopicImageBox: n.assertBox(
                n.getBoxById(r.boxes, n.imageOfTopic(l[0].id), "image"),
              ),
              separatorLineBox: a,
            }),
            u.addBackgroundBoxes(r, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0, numberOfVisitedTopics: r = 0 } =
                  i,
                a = n.filterBoxes(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "subtopic" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                }),
                s = l !== o.length ? l : r;
              o.forEach(({ id: t }, e) => {
                const i =
                  null == a
                    ? void 0
                    : a.find(
                        (e) =>
                          "background-shape" === e.contentType &&
                          -1 !== e.id.indexOf(t),
                      );
                i && (i.opacity = e <= s ? 1 : 0);
              });
            })(r, e, o),
            r
          );
        });
    },
    91410: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateScrollableSummarySlide = e.layoutScrollableSummarytSlide =
          void 0);
      const n = i(6776),
        o = i(97857),
        l = i(51116),
        r = i(91199),
        a = i(53399),
        s = i(35561),
        c = i(90189),
        d = i(12851),
        u = i(41432),
        p = i(68605),
        h = i(55287),
        g = i(14065),
        f = i(28850),
        m = "scrollable-summary";
      function b(t, e, i, l, s, g) {
        const {
          maxWidth: f,
          fontSize: b,
          markerRightMargin: v,
          traillingIconLeftMargin: x,
          maxLineCount: y,
          subtopicSpacing: S,
          maxSubtopicCount: w,
        } = g;
        function C(t) {
          return t.textMeasurement.lineCount <= y;
        }
        function T(t, e, n, o, l, r) {
          return c.computeTopicTitleGroup(i, s, m, t, e, n, o, l, {
            maxWidth: f,
            fontSize: b,
            markerRightMargin: v,
            traillingIconLeftMargin: x,
            textRoles: ["subtopic"],
            requestForHit: { kind: "present", topicId: t, viaIntro: !0 },
            placeholder: r,
          });
        }
        const L = (e.length > w ? e.slice(e.length - w, e.length) : e).map(
            (t) => {
              var e, i, n;
              const o = u.computeTopicTitle(t),
                r = null !== (e = t.markers) && void 0 !== e ? e : [],
                s = r.slice(0, l.maxMarkerCount),
                c = h.computePlaceholder(t),
                g = a.rangedIntegers(o.length, 1),
                f = a.mapValues(g, (t) => d.getTruncatedText(o, t)),
                m = a.mapValues(f, (e) => {
                  var i;
                  return T(
                    t.id,
                    t.title,
                    e,
                    null !== (i = t.hyperlink) && void 0 !== i ? i : null,
                    s,
                    c,
                  );
                }),
                b =
                  null !== (i = a.findClosestMatch(m, C)) && void 0 !== i
                    ? i
                    : T(
                        t.id,
                        t.title,
                        d.getTruncatedText(o, 1),
                        null !== (n = t.hyperlink) && void 0 !== n ? n : null,
                        s,
                        c,
                      );
              return Object.assign(Object.assign({}, b), {
                contentFeatures: p.computeContentFeaturesForTitleGroup(
                  b,
                  t.id,
                  o,
                  r,
                ),
              });
            },
          ),
          B = {
            id: n.subtopicListGroupOfTopic(t),
            roles: ["subtopicListGroup"],
            bounds: o.zeroRect(),
            absBounds: o.zeroRect(),
            contentType: "group",
            children: [],
            overflow: "scroll",
            contentWidth: 0,
            contentHeight: 0,
          };
        r.initializeBoxStyle(B, i, s, { layout: m });
        const M = f;
        let k = 0,
          F = k;
        L.forEach((t, e) => {
          (t.groupBox.bounds.y = k),
            (t.groupBox.bounds.x = 0),
            B.children.push(t.groupBox),
            (k += t.groupBox.bounds.height),
            (F += t.groupBox.bounds.height),
            e < L.length - 1 && ((k += S), (F += S));
        }),
          (B.contentWidth = M),
          (B.contentHeight = F),
          (B.bounds.width = M),
          (B.bounds.height = F);
        const P = L.reduce((t, e) => [...t, ...e.contentFeatures], []);
        return {
          groupBox: B,
          subtopicGroups: L,
          ellipsisBox: null,
          contentFeatures: P,
        };
      }
      (e.layoutScrollableSummarytSlide = function (t, e, i = {}) {
        var d;
        const { topic: f, headerTopic: v, summarySubtopics: x } = e,
          y =
            null !== (d = null == i ? void 0 : i.theme) && void 0 !== d
              ? d
              : r.defaultTheme,
          S = r.appearanceOf(y),
          w = r.dimensionOf(y, { width: t.width, height: t.height });
        r.initializeSlideStyle(t, w, S, { layout: m });
        const C = r.calcLength(w.hSlidePadding, t),
          T = r.calcLength(w.vSlidePadding, t),
          L = r.calcLength(w.summarySlideTopicMaxFontSize, t),
          B = r.calcLength(w.summarySlideTopicMinFontSize, t),
          M = r.calcLength(w.summarySlideTopicMarkerRightMargin, t),
          k = r.calcLength(w.summarySlideSubtopicFontSize, t),
          F = r.calcLength(w.summarySlideSubtopicMarkerRightMargin, t),
          P = r.calcLength(w.summarySlideLineStrokeWidth, t),
          I = t.width - 2 * C,
          O = t.height - T,
          _ = r.calcLength(w.summaryScrollFaderHeight, t),
          z = I,
          E = r.calcLength(w.vPaddingSmall, t),
          A = r.calcLength(w.vPaddingSmall, t),
          W = r.calcLength(w.vPaddingXSmall, t),
          R = r.calcLength(w.summarySlideLineHeight, t),
          V = I,
          H = A + R + W,
          D = r.calcLength(w.hPaddingSmall, t),
          $ = (function (t, e, i, l) {
            const {
                width: a,
                height: s,
                topPadding: c,
                summaryVerticalLineHeight: d,
                summarySlideLineStrokeWidth: u,
              } = l,
              p = {
                id: n.braceShapeOfSummary(t),
                roles: ["curlyBraceGroup"],
                bounds: { x: 0, y: 0, width: a, height: s },
                absBounds: o.zeroRect(),
                contentType: "group",
                children: [],
                contentWidth: a,
                contentHeight: s,
                overflow: "visible",
              };
            r.initializeBoxStyle(p, e, i, { layout: m });
            const h = [],
              g = {
                id: n.topBraceOfSummary(t),
                roles: ["curlyBrace"],
                bounds: { x: 0, y: 0, width: a, height: c + u / 2 },
                absBounds: o.zeroRect(),
                contentType: "shape",
                shapePath: `M ${u} ${c} L ${a - u} ${c}`,
                lineWidth: u,
              };
            r.initializeBoxStyle(g, e, i, { layout: m });
            const f = {
              id: n.bottomBraceOfSummary(t),
              roles: ["curlyBrace"],
              bounds: { x: 0, y: c, width: a, height: s - c },
              absBounds: o.zeroRect(),
              contentType: "shape",
              shapePath: `M ${a / 2} 0 L ${a / 2} ${d}`,
              lineWidth: u,
            };
            return (
              r.initializeBoxStyle(f, e, i, { layout: m }),
              h.push(g),
              h.push(f),
              p.children.push(g),
              p.children.push(f),
              { groupBox: p, lineShapes: h }
            );
          })(f.id, t, S, {
            width: V,
            height: H,
            topPadding: A,
            summaryVerticalLineHeight: R,
            summarySlideLineStrokeWidth: P,
          }),
          j = Math.min(x.length, 2);
        let G = b(f.id, x, t, w, S, {
          maxWidth: z,
          fontSize: k,
          markerRightMargin: F,
          traillingIconLeftMargin: D,
          maxLineCount: 1,
          subtopicSpacing: E,
          maxSubtopicCount: j,
        });
        const Z = G.groupBox.bounds.height,
          q = I;
        j < x.length &&
          (G = b(f.id, x, t, w, S, {
            maxWidth: z,
            fontSize: k,
            markerRightMargin: F,
            traillingIconLeftMargin: D,
            maxLineCount: 1,
            subtopicSpacing: E,
            maxSubtopicCount: x.length,
          }));
        const N = (function (t, e, i, n, o) {
            var l;
            const {
              maxWidth: r,
              maxHeight: s,
              maxFontSize: d,
              minFontSize: g,
              markerRightMargin: f,
              traillingIconLeftMargin: b,
            } = o;
            function v(t) {
              return t.groupBox.contentHeight <= s;
            }
            const x = null !== (l = t.markers) && void 0 !== l ? l : [],
              y = x.slice(0, i.maxMarkerCount),
              S = h.computePlaceholder(t);
            function w(i, o, l) {
              var a;
              return c.computeTopicTitleGroup(
                e,
                n,
                m,
                t.id,
                t.title,
                i,
                null !== (a = t.hyperlink) && void 0 !== a ? a : null,
                y,
                {
                  maxWidth: r,
                  fontSize: o,
                  markerRightMargin: f,
                  traillingIconLeftMargin: b,
                  overflowWrap: l,
                  textRoles: ["title"],
                  textAlignment: "leading",
                  requestForHit: { kind: "present", topicId: t.id },
                  placeholder: S,
                },
              );
            }
            const C = u.computeTopicTitle(t);
            let T = d;
            const L = "break-word";
            let B = w(C, T, L);
            if (v(B))
              return Object.assign(Object.assign({}, B), {
                contentFeatures: p.computeContentFeaturesForTitleGroup(
                  B,
                  t.id,
                  C,
                  x,
                ),
              });
            if (((T = g), (B = w(C, T, L)), v(B))) {
              const t = a.rangedIntegers(d, g),
                e = a.mapValues(t, (t) => ({ fontSize: t, group: w(C, t, L) })),
                i = a.findClosestMatch(e, ({ group: t }) => v(t));
              if (!i)
                throw new Error(
                  "Unable to find the best font size for parent topic of summary slide",
                );
              (T = i.fontSize), (B = i.group);
            }
            return Object.assign(Object.assign({}, B), {
              contentFeatures: p.computeContentFeaturesForTitleGroup(
                B,
                t.id,
                C,
                x,
              ),
            });
          })(f, t, w, S, {
            maxWidth: q,
            maxHeight: O - G.groupBox.bounds.height - $.groupBox.bounds.height,
            maxFontSize: L,
            minFontSize: B,
            markerRightMargin: M,
            traillingIconLeftMargin: D,
          }),
          X =
            G.groupBox.bounds.height +
            $.groupBox.bounds.height +
            N.groupBox.bounds.height;
        (G.groupBox.bounds.x = C),
          (G.groupBox.bounds.y = 0),
          ($.groupBox.bounds.x = C),
          ($.groupBox.bounds.y =
            G.groupBox.bounds.y + G.groupBox.bounds.height),
          (N.groupBox.bounds.x = C),
          (N.groupBox.bounds.y =
            $.groupBox.bounds.y + $.groupBox.bounds.height);
        const Q = {
          id: n.contentOfSummary(t.topicId),
          roles: [],
          bounds: { x: 0, y: 0, width: t.width, height: O },
          absBounds: o.zeroRect(),
          contentType: "group",
          children: [N.groupBox, G.groupBox, $.groupBox],
          contentWidth: t.width,
          contentHeight: X,
          overflow: "scroll",
          scrollFaderSize: _,
          bottomScrollFaderOffset: g.computeBottomMaskOffset(t, _),
        };
        r.initializeBoxStyle(Q, t, S, { layout: m }),
          t.boxes.push(Q),
          v && s.addHeaderBoxes(t, v, w, S, m),
          Q.contentHeight <= t.height - 2 * T
            ? (Q.bounds.y = (t.height - X) / 2)
            : ((Q.contentHeight += T),
              (Q.bounds.y = t.height - O),
              x.length > j &&
                (Q.scrollOffset = Math.min(
                  G.groupBox.bounds.height - Z,
                  Q.contentHeight - O,
                ))),
          l.computeAbsoluteBounds(t.boxes),
          n.addSlideContentFeatures(
            t,
            ...N.contentFeatures,
            ...G.contentFeatures,
          );
      }),
        (e.generateScrollableSummarySlide = function (t, e, i) {
          const o = Object.assign({}, t),
            l = n.assertBox(
              n.getBoxById(o.boxes, n.titleOfTopic(o.topicId), "group"),
            );
          l.contentHeight > l.bounds.height && n.addMultistepBox(o, l.id);
          const r = n.getBoxById(o.boxes, n.contentOfSummary(o.topicId));
          return (
            r &&
              r.contentHeight > r.bounds.height &&
              n.addMultistepBox(o, r.id),
            (function (t) {
              var e, i, o;
              if (
                null === (e = t.aliases) || void 0 === e
                  ? void 0
                  : e.some(
                      (e) =>
                        "startOfSummary" === e.kind && e.topicId === t.topicId,
                    )
              ) {
                const e = n.assertBox(
                    n.getBoxById(t.boxes, n.titleOfTopic(t.topicId)),
                  ),
                  l = n.assertBox(
                    n.getBoxById(t.boxes, n.topBraceOfSummary(t.topicId)),
                  ),
                  r = n.getBoxById(t.boxes, n.bottomBraceOfSummary(t.topicId));
                n.setBoxEnteringState(t, { id: e.id, opacity: 0 }),
                  n.setBoxEnteringState(t, {
                    id: l.id,
                    opacity: 0,
                    strokeOffset: 1,
                  }),
                  r &&
                    n.setBoxEnteringState(t, {
                      id: r.id,
                      opacity: 0,
                      strokeOffset: 1,
                    });
                const a = n.getBoxById(t.boxes, n.contentOfSummary(t.topicId));
                a && a.scrollOffset
                  ? (n.setBoxEnteringState(t, { id: a.id, scrollOffset: 0 }),
                    n.addSlideEnteringAnimations(t, [
                      {
                        on: "postTransition",
                        groups: ["subtopicListVisible"],
                        durationMultiplier: 1,
                        delayMultiplier: 0.5,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [{ id: a.id, scrollOffset: a.scrollOffset }],
                        },
                      },
                    ]),
                    r
                      ? n.addSlideEnteringAnimations(t, [
                          {
                            after: "subtopicListVisible",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [
                                { id: l.id, opacity: 1 },
                                { id: r.id, opacity: 1 },
                              ],
                            },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 0.75,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: l.id, strokeOffset: 0 }],
                            },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 0.25,
                            delayMultiplier: 0.75,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: r.id, strokeOffset: 0 }],
                            },
                          },
                        ])
                      : n.addSlideEnteringAnimations(t, [
                          {
                            after: "subtopicListVisible",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 1,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: l.id, strokeOffset: 0 }],
                            },
                          },
                        ]),
                    n.addSlideEnteringAnimations(t, [
                      {
                        after: "curlyBracesReady",
                        durationMultiplier: 1,
                        delayMultiplier: 0.75,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [
                            {
                              id: e.id,
                              opacity:
                                null !== (i = e.opacity) && void 0 !== i
                                  ? i
                                  : 1,
                            },
                          ],
                        },
                      },
                    ]))
                  : (r
                      ? n.addSlideEnteringAnimations(t, [
                          {
                            on: "postTransition",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [
                                { id: l.id, opacity: 1 },
                                { id: r.id, opacity: 1 },
                              ],
                            },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 0.75,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: l.id, strokeOffset: 0 }],
                            },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 0.25,
                            delayMultiplier: 0.75,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: r.id, strokeOffset: 0 }],
                            },
                          },
                        ])
                      : n.addSlideEnteringAnimations(t, [
                          {
                            on: "postTransition",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 1,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: l.id, strokeOffset: 0 }],
                            },
                          },
                        ]),
                    n.addSlideEnteringAnimations(t, [
                      {
                        on: "postTransition",
                        durationMultiplier: 1,
                        delayMultiplier: 0.75,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [
                            {
                              id: e.id,
                              opacity:
                                null !== (o = e.opacity) && void 0 !== o
                                  ? o
                                  : 1,
                            },
                          ],
                        },
                      },
                    ]));
              }
            })(o),
            f.addBackgroundBoxes(o, e, i),
            o
          );
        });
    },
    28747: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateSummarySlide =
          e.layoutSummarySlide =
          e.computeSummaryLayoutVariant =
          e.isSummaryLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(97857),
        l = i(51116),
        r = i(91199),
        a = i(75327),
        s = i(14594),
        c = i(53399),
        d = i(35561),
        u = i(90189),
        p = i(12851),
        h = i(41432),
        g = i(68605),
        f = i(29744),
        m = i(55287),
        b = i(28850),
        v = "summary";
      (e.isSummaryLayoutEligibleFor = function (t) {
        return "summary" === t;
      }),
        (e.computeSummaryLayoutVariant = function (t) {
          return t.width < t.height ? "scrollable-summary" : "summary";
        }),
        (e.layoutSummarySlide = function (t, e, i = {}) {
          var b;
          const { topic: x, headerTopic: y, summarySubtopics: S } = e,
            w =
              null !== (b = null == i ? void 0 : i.theme) && void 0 !== b
                ? b
                : r.defaultTheme,
            C = r.appearanceOf(w),
            T = r.dimensionOf(w, { width: t.width, height: t.height });
          r.initializeSlideStyle(t, T, C, { layout: v });
          const L = r.calcLength(T.hSlidePadding, t),
            B = r.calcLength(T.vSlidePadding, t),
            M = r.calcLength(T.summarySlideTopicMaxFontSize, t),
            k = r.calcLength(T.summarySlideTopicMinFontSize, t),
            F = r.calcLength(T.summarySlideTopicMarkerRightMargin, t),
            P = r.calcLength(T.summarySlideSubtopicFontSize, t),
            I = r.calcLength(T.summarySlideSubtopicMarkerRightMargin, t),
            O = r.calcLength(T.summarySlideLineStrokeWidth, t),
            _ = r.calcLength(T.hPaddingSmall, t),
            z = t.width - 2 * L,
            E = t.height - 2 * B,
            A = 0.3 * z,
            W = E,
            R = S.length > 1 ? "brace" : "flatLine",
            V =
              S.length > 1
                ? r.calcLength({ pct: 100 / 15, unit: "vw" }, t)
                : r.calcLength({ pct: (100 / 15) * 2, unit: "vw" }, t),
            H = (S.length, r.calcLength(T.hPaddingNormal, t)),
            D =
              S.length > 1
                ? r.calcLength(T.hPaddingXSmall, t)
                : r.calcLength(T.hPaddingNormal, t),
            $ = H + V + D,
            j = E,
            G = z - A - $,
            Z = E,
            q = r.calcLength(T.vPaddingMedium, t),
            N = (function (t, e, i, n, o) {
              var l, r;
              const {
                maxWidth: a,
                maxFontSize: s,
                minFontSize: d,
                markerRightMargin: f,
                traillingIconLeftMargin: b,
                preferredLineCount: x,
                maxLineCount: y,
              } = o;
              function S(t) {
                return t.groupBox.bounds.width <= a;
              }
              function w(t) {
                return t.textMeasurement.lineCount <= x;
              }
              function C(t) {
                return t.textMeasurement.lineCount <= y;
              }
              const T = null !== (l = t.markers) && void 0 !== l ? l : [],
                L = T.slice(0, i.maxMarkerCount),
                B = m.computePlaceholder(t);
              function M(i, o, l, r) {
                return u.computeTopicTitleGroup(
                  e,
                  n,
                  v,
                  t.id,
                  t.title,
                  i,
                  o,
                  L,
                  {
                    maxWidth: a,
                    fontSize: l,
                    markerRightMargin: f,
                    traillingIconLeftMargin: b,
                    overflowWrap: r,
                    textRoles: ["title"],
                    requestForHit: { kind: "present", topicId: t.id },
                    placeholder: B,
                  },
                );
              }
              const k = h.computeTopicTitle(t),
                F = null !== (r = t.hyperlink) && void 0 !== r ? r : null;
              let P = k,
                I = s,
                O = "normal",
                _ = M(P, F, I, O);
              if (S(_) && w(_))
                return Object.assign(Object.assign({}, _), {
                  contentFeatures: g.computeContentFeaturesForTitleGroup(
                    _,
                    t.id,
                    k,
                    T,
                  ),
                });
              if (((I = d), (_ = M(P, F, I, O)), S(_))) {
                if (w(_)) {
                  const t = c.rangedIntegers(s, d),
                    e = c.mapValues(t, (t) => ({
                      fontSize: t,
                      group: M(P, F, t, O),
                    })),
                    i = c.findClosestMatch(e, ({ group: t }) => S(t) && w(t));
                  if (!i)
                    throw new Error(
                      "Unable to find the best font size for parent topic of summary slide",
                    );
                  (I = i.fontSize), (_ = i.group);
                }
              } else {
                O = "break-word";
                const t = c.rangedIntegers(s, d),
                  e = c.mapValues(t, (t) => ({
                    fontSize: t,
                    group: M(P, F, t, O),
                  })),
                  i = c.findClosestMatch(e, ({ group: t }) => w(t));
                i
                  ? ((I = i.fontSize), (_ = i.group))
                  : ((I = d), (_ = M(P, F, I, O)));
              }
              if (!C(_)) {
                const t = c.rangedIntegers(P.length - 1, 1),
                  e = c.mapValues(t, (t) => p.getTruncatedText(P, t)),
                  i = c.mapValues(e, (t) => ({
                    text: t,
                    group: M(t, F, I, O),
                  })),
                  n = c.findClosestMatch(i, ({ group: t }) => C(t));
                n
                  ? ((P = n.text), (_ = n.group))
                  : ((P = p.getTruncatedText(P, 1)), (_ = M(P, F, I, O)));
              }
              return Object.assign(Object.assign({}, _), {
                contentFeatures: g.computeContentFeaturesForTitleGroup(
                  _,
                  t.id,
                  k,
                  T,
                ),
              });
            })(x, t, T, C, {
              maxWidth: A,
              maxFontSize: M,
              minFontSize: k,
              markerRightMargin: F,
              traillingIconLeftMargin: _,
              preferredLineCount: 2,
              maxLineCount: 5,
            }),
            X = N.groupBox.bounds.width,
            Q = N.groupBox.bounds.height,
            J = (function (t, e, i, l, d, b) {
              var x, y;
              const {
                maxWidth: S,
                maxHeight: w,
                fontSize: C,
                markerRightMargin: T,
                traillingIconLeftMargin: L,
                maxLineCount: B,
                spacingForMultipleSubtopics: M,
              } = b;
              function k(t) {
                return t.textMeasurement.lineCount <= B;
              }
              function F(t, e, n, o, l, r) {
                return u.computeTopicTitleGroup(i, d, v, t, e, n, o, l, {
                  maxWidth: S,
                  fontSize: C,
                  markerRightMargin: T,
                  traillingIconLeftMargin: L,
                  textAlignment: "trailing",
                  textRoles: ["subtopic"],
                  requestForHit: { kind: "present", topicId: t, viaIntro: !0 },
                  placeholder: r,
                });
              }
              const P = e.length,
                I = P > 2 ? [e[0], e[e.length - 1]] : e,
                O = I.map((t) => {
                  var e, i, n;
                  const o = h.computeTopicTitle(t),
                    r = null !== (e = t.markers) && void 0 !== e ? e : [],
                    a = r.slice(0, l.maxMarkerCount),
                    s = m.computePlaceholder(t),
                    d = c.rangedIntegers(o.length, 1),
                    u = c.mapValues(d, (t) => p.getTruncatedText(o, t)),
                    f = c.mapValues(u, (e) => {
                      var i;
                      return F(
                        t.id,
                        t.title,
                        e,
                        null !== (i = t.hyperlink) && void 0 !== i ? i : null,
                        a,
                        s,
                      );
                    }),
                    b =
                      null !== (i = c.findClosestMatch(f, k)) && void 0 !== i
                        ? i
                        : F(
                            t.id,
                            t.title,
                            p.getTruncatedText(o, 1),
                            null !== (n = t.hyperlink) && void 0 !== n
                              ? n
                              : null,
                            a,
                            s,
                          );
                  return Object.assign(Object.assign({}, b), {
                    contentFeatures: g.computeContentFeaturesForTitleGroup(
                      b,
                      t.id,
                      o,
                      r,
                    ),
                  });
                }),
                _ = O.reduce((t, e) => Math.max(t, e.groupBox.bounds.width), 0),
                z = O.reduce((t, e) => t + e.groupBox.bounds.height, 0),
                E =
                  P > 2
                    ? (function (t, e, i, l, c) {
                        const d = {
                          id: n.subtopicEllipsisOfSummary(t),
                          roles: ["subtopic"],
                          bounds: o.zeroRect(),
                          absBounds: o.zeroRect(),
                          contentType: "text",
                          text: "...",
                          fontSize: a.toCSSLength(l),
                          lineHeight: f.computeTextLineHeight(l),
                        };
                        r.initializeBoxStyle(d, e, i, { layout: v });
                        const u = s.measureText(d, { maxWidth: c }),
                          { width: p, height: h } = u;
                        return (d.bounds.width = p), (d.bounds.height = h), d;
                      })(t, i, d, C, S)
                    : null,
                A =
                  null !== (x = null == E ? void 0 : E.bounds.width) &&
                  void 0 !== x
                    ? x
                    : 0,
                W =
                  null !== (y = null == E ? void 0 : E.bounds.height) &&
                  void 0 !== y
                    ? y
                    : 0,
                R = {
                  id: n.subtopicListGroupOfTopic(t),
                  roles: ["subtopicListGroup"],
                  bounds: o.zeroRect(),
                  absBounds: o.zeroRect(),
                  contentType: "group",
                  children: [],
                  overflow: "visible",
                  contentWidth: 0,
                  contentHeight: 0,
                };
              r.initializeBoxStyle(R, i, d, { layout: v });
              const V = Math.min(S, Math.max(_, A)),
                H = z + W,
                D = P > 2 ? M : (w - H) / 3;
              let $ = 0,
                j = 0;
              O.forEach((t, e) => {
                e === O.length - 1 &&
                  E &&
                  ((E.bounds.y = $),
                  (E.bounds.x = V - E.bounds.width),
                  R.children.push(E),
                  ($ += E.bounds.height + D),
                  j > 0 && (j += D),
                  (j += E.bounds.height)),
                  (t.groupBox.bounds.y = $),
                  (t.groupBox.bounds.x = V - t.groupBox.bounds.width),
                  R.children.push(t.groupBox),
                  ($ += t.groupBox.bounds.height + D),
                  j > 0 && (j += D),
                  (j += t.groupBox.bounds.height);
              }),
                (R.contentWidth = V),
                (R.contentHeight = j),
                (R.bounds.width = V),
                (R.bounds.height = Math.min(w, j));
              const G = O.reduce((t, e) => [...t, ...e.contentFeatures], []);
              return {
                groupBox: R,
                subtopicGroups: O,
                ellipsisBox: E,
                contentFeatures: G,
              };
            })(x.id, S, t, T, C, {
              maxWidth: G,
              maxHeight: Z,
              fontSize: P,
              markerRightMargin: I,
              traillingIconLeftMargin: _,
              maxLineCount: 1,
              spacingForMultipleSubtopics: q,
            }),
            U = J.groupBox.bounds.width,
            Y = J.groupBox.bounds.height,
            K = (Z - Y) / 2,
            tt = Z - Y - K,
            et =
              K +
              (J.subtopicGroups.length > 0
                ? J.subtopicGroups[0].groupBox.bounds.height / 2
                : 0),
            it =
              tt +
              (J.subtopicGroups.length > 0
                ? J.subtopicGroups[J.subtopicGroups.length - 1].groupBox.bounds
                    .height / 2
                : 0),
            nt = (function (t, e, i, l) {
              const {
                  type: a,
                  width: s,
                  height: c,
                  leftPadding: d,
                  rightPadding: u,
                  topPadding: p,
                  bottomPadding: h,
                  summarySlideLineStrokeWidth: g,
                } = l,
                f = s - d - u,
                m = [],
                b = {
                  id: n.braceShapeOfSummary(t),
                  roles: ["curlyBraceGroup"],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  absBounds: o.zeroRect(),
                  contentType: "group",
                  children: [],
                  contentWidth: s,
                  contentHeight: c,
                  overflow: "visible",
                };
              if (
                (r.initializeBoxStyle(b, e, i, { layout: v }), "flatLine" === a)
              ) {
                const l = {
                  id: n.topBraceOfSummary(t),
                  roles: ["curlyBrace"],
                  bounds: { x: 0, y: 0, width: s, height: c },
                  absBounds: o.zeroRect(),
                  contentType: "shape",
                  shapePath: `M${d} ${c / 2} l${f} 0`,
                  lineWidth: g,
                };
                r.initializeBoxStyle(l, e, i, { layout: v }),
                  m.push(l),
                  b.children.push(l);
              } else {
                const l = d,
                  a = d + f / 2,
                  u = d + f,
                  x = p,
                  y = c / 2,
                  S = c - h,
                  w = { x: 0, y: 0, width: s, height: c / 2 + g / 2 },
                  C = {
                    id: n.topBraceOfSummary(t),
                    roles: ["curlyBrace"],
                    bounds: w,
                    absBounds: o.zeroRect(),
                    contentType: "shape",
                    shapePath: `M${l} ${x} L${a} ${x} L${a} ${y} L${u} ${y}`,
                    lineWidth: g,
                  };
                r.initializeBoxStyle(C, e, i, { layout: v });
                const T = { x: 0, y: c / 2, width: s, height: c / 2 },
                  L = {
                    id: n.bottomBraceOfSummary(t),
                    roles: ["curlyBrace"],
                    bounds: T,
                    absBounds: o.zeroRect(),
                    contentType: "shape",
                    shapePath: `M${l} ${S - y} L${a} ${S - y} L${a} 0`,
                    lineWidth: g,
                  };
                r.initializeBoxStyle(L, e, i, { layout: v }),
                  m.push(C),
                  m.push(L),
                  b.children.push(C),
                  b.children.push(L);
              }
              return { groupBox: b, lineShapes: m };
            })(x.id, t, C, {
              type: R,
              width: $,
              height: j,
              leftPadding: H,
              rightPadding: D,
              topPadding: et,
              bottomPadding: it,
              summarySlideLineStrokeWidth: O,
            }),
            ot = nt.groupBox.bounds.width,
            lt = nt.groupBox.bounds.height,
            rt = L + (z - (U + $ + A)) / 2,
            at = L + z / 2 - V / 2 - H - U,
            st = Math.max(rt, at),
            ct = st,
            dt = st + U,
            ut = dt + $,
            pt = B + K,
            ht = B,
            gt = B;
          (N.groupBox.bounds.x = ut + (A - X) / 2),
            (N.groupBox.bounds.y = gt + (W - Q) / 2),
            (nt.groupBox.bounds.x = dt + ($ - ot) / 2),
            (nt.groupBox.bounds.y = ht + (j - lt) / 2),
            (J.groupBox.bounds.x = ct),
            (J.groupBox.bounds.y = pt),
            t.boxes.push(N.groupBox),
            t.boxes.push(J.groupBox),
            t.boxes.push(nt.groupBox),
            y && d.addHeaderBoxes(t, y, T, C, v),
            l.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(
              t,
              ...N.contentFeatures,
              ...J.contentFeatures,
            );
        }),
        (e.generateSummarySlide = function (t, e, i) {
          const o = Object.assign({}, t),
            l = n.assertBox(
              n.getBoxById(o.boxes, n.titleOfTopic(o.topicId), "group"),
            );
          l.contentHeight > l.bounds.height && n.addMultistepBox(o, l.id);
          const r = n.getBoxById(o.boxes, n.contentOfSummary(o.topicId));
          return (
            r &&
              r.contentHeight > r.bounds.height &&
              n.addMultistepBox(o, r.id),
            (function (t) {
              var e, i, o;
              if (
                null === (e = t.aliases) || void 0 === e
                  ? void 0
                  : e.some(
                      (e) =>
                        "startOfSummary" === e.kind && e.topicId === t.topicId,
                    )
              ) {
                const e = n.assertBox(
                    n.getBoxById(t.boxes, n.titleOfTopic(t.topicId)),
                  ),
                  l = n.assertBox(
                    n.getBoxById(t.boxes, n.topBraceOfSummary(t.topicId)),
                  ),
                  r = n.getBoxById(t.boxes, n.bottomBraceOfSummary(t.topicId));
                n.setBoxEnteringState(t, { id: e.id, opacity: 0 }),
                  n.setBoxEnteringState(t, {
                    id: l.id,
                    opacity: 0,
                    strokeOffset: 1,
                  }),
                  r &&
                    n.setBoxEnteringState(t, {
                      id: r.id,
                      opacity: 0,
                      strokeOffset: 1,
                    });
                const a = n.getBoxById(t.boxes, n.contentOfSummary(t.topicId));
                a && a.scrollOffset
                  ? (n.setBoxEnteringState(t, { id: a.id, scrollOffset: 0 }),
                    n.addSlideEnteringAnimations(t, [
                      {
                        on: "postTransition",
                        groups: ["subtopicListVisible"],
                        durationMultiplier: 1,
                        delayMultiplier: 0.5,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [{ id: a.id, scrollOffset: a.scrollOffset }],
                        },
                      },
                    ]),
                    r
                      ? n.addSlideEnteringAnimations(t, [
                          {
                            after: "subtopicListVisible",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [
                                { id: l.id, opacity: 1 },
                                { id: r.id, opacity: 1 },
                              ],
                            },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 1,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [
                                { id: l.id, strokeOffset: 0 },
                                { id: r.id, strokeOffset: 0 },
                              ],
                            },
                          },
                        ])
                      : n.addSlideEnteringAnimations(t, [
                          {
                            after: "subtopicListVisible",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 1,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: l.id, strokeOffset: 0 }],
                            },
                          },
                        ]),
                    n.addSlideEnteringAnimations(t, [
                      {
                        after: "curlyBracesReady",
                        durationMultiplier: 1,
                        delayMultiplier: 0.75,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [
                            {
                              id: e.id,
                              opacity:
                                null !== (i = e.opacity) && void 0 !== i
                                  ? i
                                  : 1,
                            },
                          ],
                        },
                      },
                    ]))
                  : (r
                      ? n.addSlideEnteringAnimations(t, [
                          {
                            on: "postTransition",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [
                                { id: l.id, opacity: 1 },
                                { id: r.id, opacity: 1 },
                              ],
                            },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 1,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [
                                { id: l.id, strokeOffset: 0 },
                                { id: r.id, strokeOffset: 0 },
                              ],
                            },
                          },
                        ])
                      : n.addSlideEnteringAnimations(t, [
                          {
                            on: "postTransition",
                            groups: ["curlyBracesVisible"],
                            durationMultiplier: 0,
                            delayMultiplier: 0.5,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                          },
                          {
                            after: "curlyBracesVisible",
                            groups: ["curlyBracesReady"],
                            durationMultiplier: 1,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [{ id: l.id, strokeOffset: 0 }],
                            },
                          },
                        ]),
                    n.addSlideEnteringAnimations(t, [
                      {
                        on: "postTransition",
                        durationMultiplier: 1,
                        delayMultiplier: 0.75,
                        effect: "mutate",
                        easing: "easeOutQuad",
                        finalState: {
                          boxes: [
                            {
                              id: e.id,
                              opacity:
                                null !== (o = e.opacity) && void 0 !== o
                                  ? o
                                  : 1,
                            },
                          ],
                        },
                      },
                    ]));
              }
            })(o),
            b.addBackgroundBoxes(o, e, i),
            o
          );
        });
    },
    3494: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateTimelineHeadSlide =
          e.layoutTimelineHeadSlide =
          e.computeTimelineHeadLayoutVariant =
          e.isTimelineHeadLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(53399),
        l = i(97857),
        r = i(91199),
        a = i(51116),
        s = i(68605),
        c = i(55287),
        d = i(35561),
        u = i(41432),
        p = i(90189),
        h = i(12851),
        g = i(89391),
        f = i(14065),
        m = i(7381),
        b = i(28850),
        v = i(90351),
        x = "timeline-head";
      (e.isTimelineHeadLayoutEligibleFor = function (t, { parentTopic: e }) {
        return "list" === t && !!e;
      }),
        (e.computeTimelineHeadLayoutVariant = function (t) {
          return t.width < t.height ? "tree-chart" : "timeline-head";
        }),
        (e.layoutTimelineHeadSlide = function (t, e, i = {}) {
          var g, m, b;
          const {
              topic: y,
              subtopics: S,
              headerTopic: w,
              parentTopic: C,
              siblingTopics: T,
            } = e,
            L = null !== (g = i.numberOfVisibleTopics) && void 0 !== g ? g : 0,
            B =
              null !== (m = null == i ? void 0 : i.theme) && void 0 !== m
                ? m
                : r.defaultTheme,
            M = r.appearanceOf(B),
            k = r.dimensionOf(B, { width: t.width, height: t.height });
          if (!C)
            throw new Error(
              `No parent topic in timeline-head layout of ${y.id}.`,
            );
          r.initializeSlideStyle(t, k, M, { layout: x });
          const F = r.calcLength(k.hSlidePadding, t),
            P = r.calcLength(k.vSlidePadding, t),
            I = r.calcLength(k.fishboneHeadSlideFishboneHeadInterval, t),
            O = F,
            _ = r.calcLength(k.fishboneSlideFishboneLineWidth, t),
            z = r.calcLength(k.fishboneSlideFishboneHeadLineWidth, t),
            E = r.calcLength(k.fishboneHeadSlideFishboneHeadLength, t),
            A = r.calcLength(k.fishboneHeadSlideFishboneHeadLeftOffset, t),
            W = r.calcLength(
              k.timelineSlideVerticalLineEdgeCompensationLength,
              t,
            ),
            R = r.calcLength(k.timelineHeadSlideTimePointRadius, t),
            V = r.calcLength(k.fishboneSlideParentTopicAreaWidth, t),
            H = Math.round(
              r.calcLength(k.fishboneHeadSlideParentTopicDefaultFontSize, t),
            ),
            D = t.width - F - A,
            $ = r.calcLength(k.hPaddingXSmall, t),
            j = t.width - F - V,
            G = F,
            Z = P,
            q = A,
            N = r.calcLength(k.vPaddingNormal, t),
            X = r.calcLength(k.vPaddingMedium, t),
            Q = r.calcLength(k.fishboneHeadSlideSubtopicGroupTrailingOffset, t),
            J = q,
            U = r.calcLength(k.timelineHeadSlideSubtopicTitleLeftMargin, t),
            Y = 0.46 * U,
            K = r.calcLength(k.fishboneHeadSlideSubtopicLeadingLineWidth, t),
            tt = t.width - J - F,
            et = Math.round(
              r.calcLength(k.fishboneHeadSlideSubtopicMaxFontSize, t),
            ),
            it = Math.round(
              r.calcLength(k.fishboneHeadSlideSubtopicMinFontSize, t),
            ),
            nt = r.calcLength(k.hPaddingXSmall, t),
            ot = r.calcLength(k.vPaddingNormal, t),
            lt = r.calcLength(k.vPaddingMedium, t),
            rt = r.calcLength(k.braceListSlideScrollFaderHeight, t),
            at = r.calcLength(k.hPaddingSmall, t),
            st = (function (t, e) {
              const i = e.map((t) => t.id),
                n = i.indexOf(t),
                o = n % 2 == 0 ? n : n - 1,
                l = e.slice(o, o + 4);
              return l;
            })(y.id, T),
            ct = (function (t, e, i, a, d, g) {
              const {
                maxWidth: f,
                fontSize: m,
                preferredLineCount: b,
                maxLineCount: y,
                subtopicMaxWidth: S,
                markerRightMargin: w,
                traillingIconLeftMargin: C,
                numberOfVisibleTopics: T,
                scrollFaderSize: L,
                parentTopicBottomMargin: B,
                timelineMainLineWidth: M,
                timelineVerticalLineLength: k,
                timelineVerticalLinePaddingLeft: F,
                timelineVerticalLineWidth: P,
                subtopicInterval: I,
                leadingSubtopicOffset: O,
                siblingTopicGroupVerticalPadding: _,
                timePointRadius: z,
                timelineVerticalLineEdgeCompensationLength: E,
              } = g;
              function A(t) {
                return t.textMeasurement.lineCount <= b;
              }
              function W(t) {
                return t.textMeasurement.lineCount <= y;
              }
              const R = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: u.computeTopicTitle(t),
                  hyperlink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: c.computePlaceholder(t),
                };
              });
              function V(e) {
                const c = [],
                  u = [],
                  g = [];
                R.forEach(
                  (
                    {
                      topicId: t,
                      title: l,
                      text: r,
                      hyperlink: f,
                      markers: m,
                      placeholder: b,
                    },
                    y,
                  ) => {
                    var L;
                    const M = y > T,
                      R = m.slice(0, a.maxMarkerCount);
                    function V(o) {
                      return p.computeTopicTitleGroup(i, d, x, t, l, o, f, R, {
                        maxWidth: S,
                        fontSize: e,
                        markerRightMargin: w,
                        traillingIconLeftMargin: C,
                        textRoles: ["title"],
                        groupRoles: n.toBoxRoles({ pending: M }),
                        requestForHit: {
                          kind: "present",
                          topicId: t,
                          viaIntro: !0,
                        },
                        placeholder: b,
                      });
                    }
                    let H = V(r);
                    if (!W(H)) {
                      const t = o.rangedIntegers(r.length - 1, 1),
                        e = o.mapValues(t, (t) => h.getTruncatedText(r, t)),
                        i = o.mapValues(e, (t) => V(t));
                      H =
                        null !== (L = o.findClosestMatch(i, A)) && void 0 !== L
                          ? L
                          : V(h.getTruncatedText(r, 1));
                    }
                    c.push(H);
                    const D = 2 * (k + B + c[0].groupBox.bounds.height + _),
                      $ = Math.floor(y / 2),
                      j = y % 2 == 0 ? "above" : "below",
                      G = O + (S + I) * $ + ("above" === j ? 0 : S) + F,
                      Z =
                        "above" === j
                          ? Math.ceil(D / 2 - k - z + E)
                          : Math.floor(D / 2 + z - E);
                    (H.groupBox.bounds.x = G - F),
                      (H.groupBox.bounds.y =
                        Z +
                        ("above" === j
                          ? -c[y].groupBox.bounds.height - B
                          : k + B));
                    const q = v.computeTimelineTimePointShape(t, i, d, x, {
                      index: y,
                      timePointRadius: z,
                    });
                    (q.bounds.x = G + P / 2 - z),
                      (q.bounds.y = D / 2 - z),
                      u.push(q),
                      g.push(
                        ...s.computeContentFeaturesForTitleGroup(H, t, r, m),
                      );
                  },
                );
                const m =
                    c[c.length - 1].groupBox.bounds.x +
                    c[c.length - 1].groupBox.bounds.width,
                  b = 2 * (k + B + c[0].groupBox.bounds.height + _),
                  y = 0,
                  V = b / 2 - M / 2,
                  H = v.computeTimelineMainLineShape(t, i, d, x, y, V, M, m),
                  D = {
                    id: n.subtopicListGroupOfTopic(t),
                    roles: ["subtopicListGroup"],
                    bounds: { x: 0, y: 0, width: m, height: b },
                    absBounds: l.zeroRect(),
                    contentType: "group",
                    children: [...c.map((t) => t.groupBox), ...u, H],
                    overflow: m > f ? "scroll" : "hidden",
                    scrollFaderSize: L,
                    contentWidth: m,
                    contentHeight: b,
                    scrollPageLength: I,
                  };
                return (
                  r.initializeBoxStyle(D, i, d, { layout: x }),
                  { groupBox: D, subtopicGroups: c, contentFeatures: g }
                );
              }
              return V(m);
            })(C.id, st, t, k, M, {
              maxWidth: j,
              fontSize: H,
              preferredLineCount: 1,
              maxLineCount: 1,
              subtopicMaxWidth: D,
              markerRightMargin: $,
              traillingIconLeftMargin: at,
              numberOfVisibleTopics: L,
              scrollFaderSize: G,
              parentTopicBottomMargin: N,
              timelineMainLineWidth: _,
              timelineVerticalLineLength: E,
              timelineVerticalLinePaddingLeft: 94,
              timelineVerticalLineWidth: z,
              subtopicInterval: I,
              leadingSubtopicOffset: O,
              siblingTopicGroupVerticalPadding: Z,
              timePointRadius: R,
              timelineVerticalLineEdgeCompensationLength: W,
            });
          (ct.groupBox.bounds.x = F + V), (ct.groupBox.bounds.y = 0);
          const dt = st.findIndex((t) => t.id === y.id),
            ut = st[dt],
            pt = ct.subtopicGroups[dt],
            ht = s.computeContentFeaturesForTitleGroup(
              pt,
              ut.id,
              pt.textBox.text,
              null !== (b = ut.markers) && void 0 !== b ? b : [],
            ),
            gt = dt % 2 == 0 ? "above" : "below",
            ft = (function (t, e, i, a, d, g) {
              const {
                timelineHeadDirection: m,
                maxWidth: b,
                maxHeight: y,
                maxFontSize: S,
                minFontSize: w,
                preferredLineCount: C,
                maxLineCount: T,
                markerRightMargin: L,
                traillingIconLeftMargin: B,
                subtopicCompactSpacing: M,
                subtopicLooseSpacing: k,
                scrollFaderSize: F,
                subtopicGroupLeadingOffset: P,
                subtopicGroupTrailingOffset: I,
                subtopicGroupTitleLeftMargin: O,
                subtopicLeadingLineLength: _,
                subtopicLeadingLineWidth: z,
                timelineVerticalLineWidth: E,
                timePointRadius: A,
                numberOfVisibleTopics: W,
              } = g;
              function R(t) {
                return t.groupBox.contentHeight <= y;
              }
              function V(t) {
                return t.subtopicGroups.every(H);
              }
              function H(t) {
                return t.textMeasurement.lineCount <= C;
              }
              function D(t) {
                return t.textMeasurement.lineCount <= T;
              }
              const $ = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: u.computeTopicTitle(t),
                  hyperlink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: c.computePlaceholder(t),
                };
              });
              function j(e) {
                const c = [],
                  u = [],
                  g = [];
                $.forEach(
                  (
                    {
                      topicId: t,
                      title: f,
                      text: m,
                      hyperlink: v,
                      markers: y,
                      placeholder: S,
                    },
                    w,
                  ) => {
                    var C;
                    const T = w > W,
                      M = b - O,
                      k = y.slice(0, a.maxMarkerCount);
                    function F(o) {
                      return p.computeTopicTitleGroup(i, d, x, t, f, o, v, k, {
                        maxWidth: M,
                        fontSize: e,
                        markerRightMargin: L,
                        traillingIconLeftMargin: B,
                        textRoles: ["subtopic"],
                        groupRoles: n.toBoxRoles({ pending: T }),
                        requestForHit: {
                          kind: "present",
                          topicId: t,
                          viaIntro: !0,
                        },
                        placeholder: S,
                      });
                    }
                    let P = F(m);
                    if (!D(P)) {
                      const t = o.rangedIntegers(m.length - 1, 1),
                        e = o.mapValues(t, (t) => h.getTruncatedText(m, t)),
                        i = o.mapValues(e, (t) => F(t));
                      P =
                        null !== (C = o.findClosestMatch(i, H)) && void 0 !== C
                          ? C
                          : F(h.getTruncatedText(m, 1));
                    }
                    const I = P.groupBox.bounds;
                    (I.x = O), c.push(P);
                    const E = (function (t, e, i, o, a, s) {
                      const c = `M ${a}, ${s / 2} L ${o - a}, ${s / 2}`,
                        d = {
                          id: n.timelineSubtopicLeadingLineOfTopic(t),
                          roles: ["timelineSubtopicLeadingLine"],
                          bounds: { x: 0, y: 0, width: o, height: s },
                          absBounds: l.zeroRect(),
                          contentType: "shape",
                          shapePath: c,
                        };
                      return r.initializeBoxStyle(d, e, i, { layout: x }), d;
                    })(t, i, d, _, z, I.height);
                    (E.bounds.x = (O - _) / 2),
                      u.push(E),
                      g.push(
                        ...s.computeContentFeaturesForTitleGroup(P, t, m, y),
                      );
                  },
                );
                const S = c.length <= 3 && c.every(H) ? k : M,
                  w =
                    P +
                    I +
                    c
                      .map((t) => t.groupBox.bounds.height)
                      .reduce((t, e) => t + e, 0) +
                    S * (c.length - 1),
                  C = Math.max(w, y);
                if ("above" === m) {
                  let t = P;
                  c.forEach((e, i) => {
                    (e.groupBox.bounds.y = t),
                      (u[i].bounds.y = t),
                      (t += e.groupBox.bounds.height + S);
                  });
                } else {
                  let t = C - P;
                  c.forEach((e, i) => {
                    (e.groupBox.bounds.y = t - e.groupBox.bounds.height),
                      (u[i].bounds.y = t - e.groupBox.bounds.height),
                      (t -= e.groupBox.bounds.height + S);
                  });
                }
                const T = v.computeTimelineVerticalLineShape(
                    t,
                    i,
                    d,
                    x,
                    0,
                    "above" === m ? A : -A,
                    E,
                    C,
                    m,
                    A,
                  ),
                  R = {
                    id: n.subtopicListGroupOfTopic(t),
                    roles: ["subtopicListGroup"],
                    bounds: { x: 0, y: 0, width: b, height: y },
                    absBounds: l.zeroRect(),
                    contentType: "group",
                    children: [T, ...u, ...c.map((t) => t.groupBox)],
                    contentWidth: b,
                    contentHeight: C,
                    overflow: C > y ? "scroll" : "hidden",
                    scrollOffset: "above" === m ? 0 : C - y,
                    scrollFaderSize: F,
                    bottomScrollFaderOffset: f.computeBottomMaskOffset(i, F),
                  };
                return (
                  r.initializeBoxStyle(R, i, d, { layout: x }),
                  {
                    groupBox: R,
                    subtopicGroups: c,
                    contentFeatures: g,
                    actualContentHeight: w,
                  }
                );
              }
              let G, Z;
              const q = o.rangedIntegers(S, w),
                N = o.mapValues(q, (t) => ({ fontSize: t, group: j(t) })),
                X = o.findClosestMatch(N, ({ group: t }) => V(t));
              X ? ((G = X.fontSize), (Z = X.group)) : ((G = w), (Z = j(G)));
              if (!R(Z) && G > w) {
                const t = o.rangedIntegers(G, w),
                  e = o.mapValues(t, (t) => ({ fontSize: t, group: j(t) })),
                  i = o.findClosestMatch(e, ({ group: t }) => R(t));
                i ? ((G = i.fontSize), (Z = i.group)) : ((G = S), (Z = j(G)));
              }
              return Z;
            })(y.id, S, t, k, M, {
              timelineHeadDirection: gt,
              maxWidth: tt,
              maxHeight: E,
              maxFontSize: et,
              minFontSize: it,
              preferredLineCount: 1,
              maxLineCount: 2,
              markerRightMargin: nt,
              traillingIconLeftMargin: at,
              subtopicCompactSpacing: ot,
              subtopicLooseSpacing: lt,
              scrollFaderSize: rt,
              subtopicGroupLeadingOffset: X,
              subtopicGroupTrailingOffset: Q,
              subtopicGroupTitleLeftMargin: U,
              subtopicLeadingLineLength: Y,
              subtopicLeadingLineWidth: K,
              timelineVerticalLineWidth: z,
              timePointRadius: R,
              numberOfVisibleTopics: L,
            });
          (ft.groupBox.bounds.x = pt.groupBox.bounds.x + 94),
            (ft.groupBox.bounds.y =
              "above" === gt
                ? pt.groupBox.bounds.y + pt.groupBox.bounds.height + N
                : pt.groupBox.bounds.y - N - ft.groupBox.bounds.height);
          const mt = ft.groupBox.bounds.x + ft.groupBox.bounds.width;
          mt > ct.groupBox.bounds.width &&
            ((ct.groupBox.bounds.width = mt), (ct.groupBox.contentWidth = mt)),
            ct.groupBox.children.push(ft.groupBox);
          const bt = ct.groupBox.bounds.x + ct.groupBox.bounds.width,
            vt = ct.groupBox.bounds.height,
            xt = {
              id: n.contentGroupOfTopic(y.id),
              roles: [],
              bounds: { x: 0, y: 0, width: bt, height: vt },
              absBounds: l.zeroRect(),
              contentType: "group",
              children: [],
              contentWidth: bt,
              contentHeight: vt,
            };
          r.initializeBoxStyle(xt, t, M, { layout: x }),
            "above" === gt
              ? ((xt.bounds.x = -ct.groupBox.bounds.x),
                (xt.bounds.y = 0),
                ft.actualContentHeight < ft.groupBox.bounds.height &&
                  (xt.bounds.y +=
                    (ft.groupBox.bounds.height - ft.actualContentHeight) / 2))
              : ((xt.bounds.x = -(ct.groupBox.bounds.x + D)),
                (xt.bounds.y = t.height - xt.bounds.height),
                ft.actualContentHeight < ft.groupBox.bounds.height &&
                  (xt.bounds.y -=
                    (ft.groupBox.bounds.height - ft.actualContentHeight) / 2)),
            xt.children.push(ct.groupBox),
            t.boxes.push(xt),
            w && d.addHeaderBoxes(t, w, k, M, x, { compact: "below" === gt }),
            a.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(t, ...ht, ...ft.contentFeatures);
        }),
        (e.generateTimelineHeadSlide = function (t, e, i, o = {}) {
          const { subtopics: l } = e,
            {
              numberOfVisibleTopics: r = 0,
              numberOfVisitedTopics: a = 0,
              inSlideScroll: s = !1,
            } = o,
            c = Object.assign({}, t);
          l.forEach(({ id: t }, e) => {
            e > r &&
              (g.computePendingBoxStates(c, n.titleOfTopic(t)),
              g.computePendingBoxStates(
                c,
                n.timelineSubtopicLeadingLineOfTopic(t),
              ));
          });
          const d = n.assertBox(
            n.getBoxById(
              c.boxes,
              n.subtopicListGroupOfTopic(c.topicId),
              "group",
            ),
          );
          s && d.contentHeight > d.bounds.height && n.addMultistepBox(c, d.id);
          const u = r !== l.length ? r : a;
          if (
            (m.computeSubtopicListScrollingStates(
              c,
              n.subtopicListGroupOfTopic(c.topicId),
              n.titleOfTopic(l[u].id),
              (t, e) => e.bounds.height / 2 - t.bounds.height / 2,
            ),
            b.addBackgroundBoxes(c, e, i),
            (function (t, e, i = {}) {
              const { parentTopic: o, subtopics: l, siblingTopics: r } = e,
                { numberOfVisibleTopics: a = 0 } = i,
                s = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                });
              if ("background-shape" === (null == s ? void 0 : s.contentType)) {
                const e = o
                  ? n.getBoxById(
                      t.boxes,
                      n.timelineMainLineOfTopic(null == o ? void 0 : o.id),
                      "shape",
                    )
                  : null;
                e && (e.strokeColor = s.fillColor),
                  r.forEach(({ id: e }) => {
                    const i = n.getBoxById(
                      t.boxes,
                      n.timelineVerticalLineOfTopic(e),
                      "shape",
                    );
                    i && (i.strokeColor = s.fillColor);
                    const o = n.getBoxById(
                      t.boxes,
                      n.timelineTimePointOfTopic(e),
                      "shape",
                    );
                    o && (o.fillColor = s.fillColor);
                  });
              }
              const c = n.filterBoxes(t.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              });
              l.forEach(({ id: e }, i) => {
                var o;
                const l =
                  null == c
                    ? void 0
                    : c.find(
                        (t) =>
                          "background-shape" === t.contentType &&
                          -1 !== t.id.indexOf(e),
                      );
                l && (l.opacity = i <= a ? 1 : 0);
                const r = n.getBoxById(
                  t.boxes,
                  n.timelineSubtopicLeadingLineOfTopic(e),
                  "shape",
                );
                r &&
                  (r.strokeColor =
                    null !== (o = null == l ? void 0 : l.fillColor) &&
                    void 0 !== o
                      ? o
                      : "background-shape" ===
                          (null == s ? void 0 : s.contentType)
                        ? s.fillColor
                        : r.strokeColor);
              });
            })(c, e, o),
            r < l.length)
          ) {
            const t = l[r].id,
              i = n.assertBox(n.getBoxById(c.boxes, n.titleOfTopic(t))),
              o = n.assertBox(
                n.getBoxById(c.boxes, n.timelineSubtopicLeadingLineOfTopic(t)),
              );
            !(function (t, e, { titleBox: i, timelineSubtopicLeadingLine: o }) {
              var l, r;
              if (
                "one-by-one-drill-in" === e.computedListSlideDelivery &&
                (null === (l = t.aliases) || void 0 === l
                  ? void 0
                  : l.some(
                      (e) =>
                        "listOfTopic" === e.kind &&
                        e.topicId === t.topicId &&
                        1 === e.index,
                    ))
              )
                return;
              const a = [],
                s = [],
                c = (
                  null === (r = t.aliases) || void 0 === r
                    ? void 0
                    : r.some(
                        (e) =>
                          "listOfTopic" === e.kind &&
                          e.topicId === t.topicId &&
                          0 === e.index,
                      )
                )
                  ? { request: "forward" }
                  : {
                      request: "forward",
                      sourceSlideType: t.type,
                      sourceSlideTopicId: t.topicId,
                    };
              a.push(
                { id: o.id, strokeOffset: 1, opacity: 0 },
                { id: i.id, opacity: 0 },
              ),
                s.push(
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: o.id, strokeOffset: 0 }] },
                    when: c,
                  },
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: o.id, opacity: 1 }] },
                    when: c,
                  },
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 0.8,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                    when: c,
                  },
                ),
                n.addSlideAdditionalEnteringStates(t, [
                  { state: { boxes: a }, when: c },
                ]),
                n.addSlideEnteringAnimations(t, s);
            })(c, e, { titleBox: i, timelineSubtopicLeadingLine: o });
          }
          return c;
        });
    },
    68839: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateTimelineSlide =
          e.layoutTimelineSlide =
          e.computeTimelineLayoutVariant =
          e.isTimelineLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(53399),
        l = i(97857),
        r = i(91199),
        a = i(14594),
        s = i(89391),
        c = i(7381),
        d = i(51116),
        u = i(68605),
        p = i(55287),
        h = i(35561),
        g = i(41432),
        f = i(90189),
        m = i(12851),
        b = i(28850),
        v = i(90351),
        x = "timeline";
      (e.isTimelineLayoutEligibleFor = function (t) {
        return "list" === t;
      }),
        (e.computeTimelineLayoutVariant = function (t, e) {
          return 1 === e.subtopics.length
            ? "only-child"
            : t.width < t.height
              ? "tree-chart"
              : "timeline";
        }),
        (e.layoutTimelineSlide = function (t, e, i = {}) {
          var s, c;
          const { topic: b, subtopics: y, headerTopic: S } = e,
            w = null !== (s = i.numberOfVisibleTopics) && void 0 !== s ? s : 0,
            C =
              null !== (c = null == i ? void 0 : i.theme) && void 0 !== c
                ? c
                : r.defaultTheme,
            T = r.appearanceOf(C),
            L = r.dimensionOf(C, { width: t.width, height: t.height });
          r.initializeSlideStyle(t, L, T, { layout: x });
          const B = r.calcLength(L.hSlidePadding, t),
            M = r.calcLength(L.vSlidePadding, t),
            k = Math.round(
              r.calcLength(L.timelineSlideParentTopicMaxFontSize, t),
            ),
            F = Math.round(
              r.calcLength(L.timelineSlideParentTopicMinFontSize, t),
            ),
            P = r.calcLength(L.hPaddingXSmall, t),
            I = Math.round(
              r.calcLength(L.fishboneSlideParentTopicTitleMaxWidth, t),
            ),
            O = r.calcLength(L.hPaddingMedium, t),
            _ = Math.round(r.calcLength(L.timelineSlideSubtopicMaxFontSize, t)),
            z = Math.round(r.calcLength(L.timelineSlideSubtopicMinFontSize, t)),
            E = Math.round(
              r.calcLength(L.timelineSlideSubtopicTitleMaxWidth, t),
            ),
            A = r.calcLength(L.hPaddingXSmall, t),
            W = t.height - M - M,
            R = t.width - B - I - O,
            V = B,
            H = r.calcLength(L.fishboneSlideFishboneLineWidth, t),
            D = r.calcLength(L.fishboneSlideFishboneHeadLineWidth, t),
            $ = r.calcLength(L.vPaddingLarge, t),
            j = Math.round(
              r.calcLength(L.timelineSlideVerticalLineInterval, t),
            ),
            G = r.calcLength(L.timelineSlideVerticalLineSpacing, t),
            Z = r.calcLength(
              L.timelineSlideVerticalLineEdgeCompensationLength,
              t,
            ),
            q = B,
            N = r.calcLength(L.vPaddingXSmall, t),
            X = r.calcLength(L.timelineHeadSlideTimePointRadius, t),
            Q = r.calcLength(L.hPaddingSmall, t),
            J = (function (t, e, i, n, l) {
              var r, s;
              const {
                maxFontSize: c,
                minFontSize: d,
                markerRightMargin: h,
                traillingIconLeftMargin: b,
                maxWidth: v,
                maxLineCount: y,
                preferredLineCount: S,
              } = l;
              function w(t) {
                return t.textMeasurement.width <= v;
              }
              function C(t) {
                return t.textMeasurement.lineCount <= S;
              }
              function T(t) {
                return t.textMeasurement.lineCount <= y;
              }
              const L = null !== (r = t.markers) && void 0 !== r ? r : [],
                B = L.slice(0, i.maxMarkerCount),
                M = p.computePlaceholder(t);
              function k(i, o, l, r) {
                return f.computeTopicTitleGroup(
                  e,
                  n,
                  x,
                  t.id,
                  t.title,
                  i,
                  o,
                  B,
                  {
                    maxWidth: v,
                    fontSize: l,
                    markerRightMargin: h,
                    traillingIconLeftMargin: b,
                    overflowWrap: r,
                    textRoles: ["title"],
                    requestForHit: { kind: "fastBackward" },
                    placeholder: M,
                    disallowShortTrailingLine: !0,
                  },
                );
              }
              const F = g.computeTopicTitle(t),
                P = null !== (s = t.hyperlink) && void 0 !== s ? s : null;
              let I = F,
                O = c,
                _ = "normal",
                z = k(I, P, O, _);
              if (w(z) && C(z) && !z.textMeasurement.hasShortTrailingLine)
                return Object.assign(Object.assign({}, z), {
                  contentFeatures: u.computeContentFeaturesForTitleGroup(
                    z,
                    t.id,
                    F,
                    L,
                  ),
                });
              if (((O = d), (z = k(I, P, O, _)), w(z))) {
                if (C(z)) {
                  const t = o.rangedIntegers(c, d),
                    e = o.mapValues(t, (t) => ({
                      fontSize: t,
                      group: k(I, P, t, _),
                    })),
                    i = o.findClosestMatch(e, ({ group: t }) => w(t) && C(t));
                  if (!i)
                    throw new Error(
                      "Unable to find the best font size for parent topic of brace list slide",
                    );
                  (O = i.fontSize), (z = i.group);
                }
              } else {
                _ = "break-word";
                const t = o.rangedIntegers(c, d),
                  e = o.mapValues(t, (t) => ({
                    fontSize: t,
                    group: k(I, P, t, _),
                  })),
                  i = o.findClosestMatch(e, ({ group: t }) => C(t));
                i
                  ? ((O = i.fontSize), (z = i.group))
                  : ((O = d), (z = k(I, P, O, _)));
              }
              if (!T(z)) {
                const t = o.rangedIntegers(I.length - 1, 1),
                  e = o.mapValues(t, (t) => m.getTruncatedText(I, t)),
                  i = o.mapValues(e, (t) => ({
                    text: t,
                    group: k(t, P, O, _),
                  })),
                  n = o.findClosestMatch(i, ({ group: t }) => T(t));
                n
                  ? ((I = n.text), (z = n.group))
                  : ((I = m.getTruncatedText(I, 1)), (z = k(I, P, O, _)));
              }
              if (
                z.textMeasurement.hasShortTrailingLine &&
                !(z.textBox.text.length < F.length)
              ) {
                const { lineCount: t, fontSize: e } = z.textMeasurement,
                  i = k(
                    z.textBox.text,
                    P,
                    e * a.defaultFontSizeScaleRatioToEliminateShortTrailingLine,
                    _,
                  );
                i.textMeasurement.lineCount < t && (z = i);
              }
              return Object.assign(Object.assign({}, z), {
                contentFeatures: u.computeContentFeaturesForTitleGroup(
                  z,
                  t.id,
                  F,
                  L,
                ),
              });
            })(b, t, L, T, {
              maxFontSize: k,
              minFontSize: F,
              markerRightMargin: P,
              traillingIconLeftMargin: Q,
              maxWidth: I,
              maxLineCount: 3,
              preferredLineCount: 1,
            }),
            U = (function (t, e, i, a, s, c) {
              const {
                maxWidth: d,
                maxHeight: h,
                maxFontSize: b,
                minFontSize: y,
                preferredLineCount: S,
                maxLineCount: w,
                subtopicMaxWidth: C,
                subtopicBottomMargin: T,
                markerRightMargin: L,
                traillingIconLeftMargin: B,
                numberOfVisibleTopics: M,
                scrollFaderSize: k,
                timelineMainLineWidth: F,
                timelineVerticalLineWidth: P,
                timelineVerticalLineLength: I,
                subtopicInterval: O,
                timelineVerticalLineSpacing: _,
                timelineVerticalLineEdgeCompensationLength: z,
                leadingSubtopicOffset: E,
                timePointRadius: A,
              } = c;
              function W(t) {
                return t.every(R);
              }
              function R(t) {
                return t.textMeasurement.lineCount <= S;
              }
              function V(t) {
                return t.every(H);
              }
              function H(t) {
                return t.textMeasurement.lineCount <= w;
              }
              const D = e.map((t) => {
                var e, i;
                return {
                  topicId: t.id,
                  title: t.title,
                  text: g.computeTopicTitle(t),
                  hyperlink:
                    null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                  markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                  placeholder: p.computePlaceholder(t),
                };
              });
              function $(t, e) {
                const l = [];
                return (
                  D.forEach(
                    (
                      {
                        topicId: r,
                        title: c,
                        text: d,
                        hyperlink: u,
                        markers: p,
                        placeholder: h,
                      },
                      g,
                    ) => {
                      var b;
                      const v = g > M,
                        y = p.slice(0, a.maxMarkerCount);
                      function S(e) {
                        return f.computeTopicTitleGroup(
                          i,
                          s,
                          x,
                          r,
                          c,
                          e,
                          u,
                          y,
                          {
                            maxWidth: C,
                            fontSize: t,
                            markerRightMargin: L,
                            traillingIconLeftMargin: B,
                            textRoles: ["subtopic"],
                            groupRoles: n.toBoxRoles({ pending: v }),
                            requestForHit: {
                              kind: "present",
                              topicId: r,
                              viaIntro: !0,
                            },
                            placeholder: h,
                          },
                        );
                      }
                      let w = S(d);
                      if (e && !H(w)) {
                        const t = o.rangedIntegers(d.length - 1, 1),
                          e = o.mapValues(t, (t) => m.getTruncatedText(d, t)),
                          i = o.mapValues(e, (t) => S(t));
                        w =
                          null !== (b = o.findClosestMatch(i, H)) &&
                          void 0 !== b
                            ? b
                            : S(m.getTruncatedText(d, 1));
                      }
                      l.push(w);
                    },
                  ),
                  l
                );
              }
              let j, G;
              const Z = o.rangedIntegers(b, y),
                q = o.mapValues(Z, (t) => ({ fontSize: t, group: $(t) })),
                N = o.findClosestMatch(q, ({ group: t }) => W(t));
              if (N) (j = N.fontSize), (G = N.group);
              else if (w > S) {
                const t = o.rangedIntegers(b, y),
                  e = o.mapValues(t, (t) => ({ fontSize: t, group: $(t) })),
                  i = o.findClosestMatch(e, ({ group: t }) => V(t));
                i
                  ? ((j = i.fontSize), (G = i.group))
                  : ((j = y), (G = $(j, !0)));
              } else (j = y), (G = $(j, !0));
              const X = [],
                Q = [],
                J = [],
                U = Math.max(...G.map((t) => t.groupBox.bounds.height));
              D.forEach(({ topicId: t, text: e, markers: n }, o) => {
                const l = G[o],
                  r = Math.floor(o / 2),
                  a = o % 2 == 0 ? "above" : "below",
                  c = E + (C + O) * r + ("above" === a ? C / 2 : C + _),
                  d = "above" === a ? h / 2 - I + z : h / 2 - z,
                  p = v.computeTimelineVerticalLineShape(
                    t,
                    i,
                    s,
                    x,
                    c,
                    d,
                    P,
                    I,
                    a,
                    A,
                  ),
                  g = (U - l.groupBox.bounds.height) / 2;
                (l.groupBox.bounds.x =
                  c - Math.min(C, l.groupBox.bounds.width) / 2),
                  (l.groupBox.bounds.y =
                    d +
                    ("above" === a
                      ? -l.groupBox.bounds.height - T - g
                      : I + T + g));
                const f = v.computeTimelineTimePointShape(t, i, s, x, {
                  index: o,
                  timePointRadius: A,
                });
                (f.bounds.x = c + P / 2 - A),
                  (f.bounds.y = h / 2 - A),
                  X.push(p),
                  Q.push(f),
                  J.push(...u.computeContentFeaturesForTitleGroup(l, t, e, n));
              });
              const Y =
                  Q[Q.length % 2 == 0 ? Q.length - 2 : Q.length - 1].bounds.x +
                  (d - Q[0].bounds.x),
                K = 0,
                tt = h / 2 - F / 2,
                et = v.computeTimelineMainLineShape(t, i, s, x, K, tt, F, Y),
                it = {
                  id: n.subtopicListGroupOfTopic(t),
                  roles: ["subtopicListGroup"],
                  bounds: { x: 0, y: 0, width: d, height: h },
                  absBounds: l.zeroRect(),
                  contentType: "group",
                  children: [...G.map((t) => t.groupBox), ...X, ...Q, et],
                  overflow: Y > d ? "scroll" : "hidden",
                  scrollFaderSize: k,
                  contentWidth: Y,
                  contentHeight: h,
                  scrollPageLength: C + O,
                };
              return (
                r.initializeBoxStyle(it, i, s, { layout: x }),
                {
                  groupBox: it,
                  subtopicGroups: G,
                  timelineVerticalLineShapes: X,
                  contentFeatures: J,
                }
              );
            })(b.id, y, t, L, T, {
              maxWidth: R,
              maxHeight: W,
              maxFontSize: _,
              minFontSize: z,
              preferredLineCount: 1,
              maxLineCount: 2,
              subtopicMaxWidth: E,
              subtopicBottomMargin: N,
              markerRightMargin: A,
              traillingIconLeftMargin: Q,
              numberOfVisibleTopics: w,
              scrollFaderSize: V,
              timelineMainLineWidth: H,
              timelineVerticalLineWidth: D,
              timelineVerticalLineLength: $,
              subtopicInterval: j,
              timelineVerticalLineSpacing: G,
              timelineVerticalLineEdgeCompensationLength: Z,
              leadingSubtopicOffset: q,
              timePointRadius: X,
            });
          (J.groupBox.bounds.x = B + (I - J.groupBox.bounds.width) / 2),
            (J.groupBox.bounds.y = t.height / 2 - J.groupBox.bounds.height / 2),
            (U.groupBox.bounds.x = B + I + O),
            (U.groupBox.bounds.y = M),
            t.boxes.push(J.groupBox),
            t.boxes.push(U.groupBox),
            S && h.addHeaderBoxes(t, S, L, T, x),
            d.computeAbsoluteBounds(t.boxes),
            n.addSlideContentFeatures(
              t,
              ...J.contentFeatures,
              ...U.contentFeatures,
            );
        }),
        (e.generateTimelineSlide = function (t, e, i, o = {}) {
          var l;
          const { subtopics: r } = e,
            {
              numberOfVisibleTopics: a = 0,
              numberOfVisitedTopics: d = 0,
              inSlideScroll: u = !1,
            } = o,
            p = Object.assign({}, t);
          r.forEach(({ id: t }, e) => {
            e > a &&
              (s.computePendingBoxStates(p, n.timelineTimePointOfTopic(t)),
              s.computePendingBoxStates(p, n.timelineVerticalLineOfTopic(t)),
              s.computePendingBoxStates(p, n.titleOfTopic(t)));
          });
          const h = n.assertBox(
            n.getBoxById(
              p.boxes,
              n.subtopicListGroupOfTopic(p.topicId),
              "group",
            ),
          );
          u && h.contentWidth > h.bounds.width && n.addMultistepBox(p, h.id);
          const g = a !== r.length ? a : d,
            f = g % 2 == 0 ? g : g - 1,
            m = n.findBox(p.boxes, (t) => t.id === n.titleOfTopic(r[0].id));
          if (
            (c.computeSubtopicListScrollingStates(
              p,
              n.subtopicListGroupOfTopic(p.topicId),
              n.titleOfTopic(r[f].id),
              (t, e) => {
                var i, n;
                return (
                  -(null !== (i = null == m ? void 0 : m.bounds.x) &&
                  void 0 !== i
                    ? i
                    : 0) +
                  (e.bounds.width -
                    (null !== (n = null == m ? void 0 : m.bounds.width) &&
                    void 0 !== n
                      ? n
                      : 0)) /
                    2
                );
              },
            ),
            b.addBackgroundBoxes(p, e, i),
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0 } = i,
                r = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                });
              if ("background-shape" === (null == r ? void 0 : r.contentType)) {
                const e = n.getBoxById(
                  t.boxes,
                  n.timelineMainLineOfTopic(t.topicId),
                  "shape",
                );
                e && (e.strokeColor = r.fillColor),
                  o.forEach(({ id: e }) => {
                    const i = n.getBoxById(
                      t.boxes,
                      n.timelineTimePointOfTopic(e),
                      "shape",
                    );
                    i && (i.fillColor = r.fillColor);
                  });
              }
              const a = n.filterBoxes(t.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              });
              o.forEach(({ id: e }, i) => {
                var o;
                const s =
                  null == a
                    ? void 0
                    : a.find(
                        (t) =>
                          "background-shape" === t.contentType &&
                          -1 !== t.id.indexOf(e),
                      );
                s && (s.opacity = i <= l ? 1 : 0);
                const c = n.getBoxById(
                  t.boxes,
                  n.timelineVerticalLineOfTopic(e),
                  "shape",
                );
                c &&
                  (c.strokeColor =
                    null !== (o = null == s ? void 0 : s.fillColor) &&
                    void 0 !== o
                      ? o
                      : "background-shape" ===
                          (null == r ? void 0 : r.contentType)
                        ? r.fillColor
                        : c.strokeColor);
              });
            })(p, e, o),
            a < r.length)
          ) {
            const t = r[a].id,
              i = n.assertBox(n.getBoxById(p.boxes, n.titleOfTopic(t))),
              o = n.assertBox(
                n.getBoxById(p.boxes, n.timelineVerticalLineOfTopic(t)),
              ),
              s = n.assertBox(
                n.getBoxById(p.boxes, n.timelineTimePointOfTopic(t)),
              ),
              c = n.filterBoxes(p.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              }),
              d =
                null !==
                  (l =
                    null == c
                      ? void 0
                      : c.find(
                          (e) =>
                            "background-shape" === e.contentType &&
                            -1 !== e.id.indexOf(t),
                        )) && void 0 !== l
                  ? l
                  : null;
            !(function (
              t,
              e,
              {
                titleBox: i,
                timelineVerticalLineShape: o,
                timelineTimePointShape: l,
                shapeRefSubtopic: r,
              },
            ) {
              var a, s;
              if (
                "one-by-one-drill-in" === e.computedListSlideDelivery &&
                (null === (a = t.aliases) || void 0 === a
                  ? void 0
                  : a.some(
                      (e) =>
                        "listOfTopic" === e.kind &&
                        e.topicId === t.topicId &&
                        1 === e.index,
                    ))
              )
                return;
              const c = [],
                d = [],
                u = (
                  null === (s = t.aliases) || void 0 === s
                    ? void 0
                    : s.some(
                        (e) =>
                          "listOfTopic" === e.kind &&
                          e.topicId === t.topicId &&
                          0 === e.index,
                      )
                )
                  ? { request: "forward" }
                  : {
                      request: "forward",
                      sourceSlideType: t.type,
                      sourceSlideTopicId: t.topicId,
                    };
              c.push(
                { id: l.id, opacity: 0 },
                { id: o.id, strokeOffset: 1, opacity: 0 },
                { id: i.id, opacity: 0 },
              ),
                r && c.push({ id: r.id, opacity: 0 });
              d.push(
                {
                  on: "postTransition",
                  durationMultiplier: 1,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                  when: u,
                },
                {
                  on: "postTransition",
                  durationMultiplier: 1.5,
                  delayMultiplier: 1,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: o.id, strokeOffset: 0 }] },
                  when: u,
                },
                {
                  on: "postTransition",
                  durationMultiplier: 1.5,
                  delayMultiplier: 1,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: o.id, opacity: 1 }] },
                  when: u,
                },
                {
                  on: "postTransition",
                  durationMultiplier: 1,
                  delayMultiplier: 2.5,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                  when: u,
                },
              ),
                r &&
                  d.push({
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 1.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: r.id, opacity: 1 }] },
                    when: { request: "forward", sourceSlideTopicId: t.topicId },
                  });
              n.addSlideAdditionalEnteringStates(t, [
                { state: { boxes: c }, when: u },
              ]),
                n.addSlideEnteringAnimations(t, d);
            })(p, e, {
              titleBox: i,
              timelineVerticalLineShape: o,
              timelineTimePointShape: s,
              shapeRefSubtopic: d,
            });
          }
          return p;
        });
    },
    96818: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateTopicSlide =
          e.layoutTopicSlide =
          e.computeTopicSlideLayoutVariant =
          e.isTopicSlideLayoutEligibleFor =
            void 0);
      const n = i(6776),
        o = i(91199),
        l = i(14594),
        r = i(51116),
        a = i(35561),
        s = i(12284),
        c = i(90010),
        d = i(4898),
        u = i(90189),
        p = i(70188),
        h = i(68605),
        g = i(28850),
        f = i(53399),
        m = i(41432),
        b = i(12851),
        v = i(97857),
        x = "topic-slide";
      (e.isTopicSlideLayoutEligibleFor = function (t) {
        return "topic" === t;
      }),
        (e.computeTopicSlideLayoutVariant = function () {
          return "topic-slide";
        }),
        (e.layoutTopicSlide = function (t, e, i = {}) {
          var g, y, S, w, C, T, L, B, M, k, F, P;
          const {
              topic: I,
              headerTopic: O,
              topicLevel: _,
              calloutTopic: z,
            } = e,
            { id: E } = I,
            A =
              null !== (g = null == i ? void 0 : i.theme) && void 0 !== g
                ? g
                : o.defaultTheme,
            W = o.appearanceOf(A),
            R = o.dimensionOf(A, { width: t.width, height: t.height }),
            V = o.calcLength(R.hSlidePadding, t),
            H = o.calcLength(R.vSlidePadding, t),
            D = Math.round(o.calcLength(R.topicSlideTitleFontSizeLarge, t)),
            $ = Math.round(o.calcLength(R.topicSlideTitleFontSizeMedium, t)),
            j = Math.round(o.calcLength(R.topicSlideTitleFontSizeSmall, t)),
            G = o.calcLength(R.hPaddingSmall, t),
            Z = D,
            q = $,
            N = Math.round(0.8 * D),
            X = $,
            Q = $,
            J = j,
            U = Math.round(
              o.calcLength(R.topicSlideTitleFontSizeScrollable, t),
            ),
            Y = o.calcLength(R.topicSlideLabelFontSize, t),
            K = o.calcLength(R.topicSlideLabelMinWidth, t),
            tt = o.calcLength(R.hPaddingSmall, t),
            et = o.calcLength(R.hPaddingSmall, t),
            it = o.calcLength(R.topicSlideLabelSpacing, t),
            nt = o.calcLength(R.topicSlideLabelLineSpacing, t),
            ot = o.calcLength(R.hPaddingSmall, t),
            lt = o.calcLength(R.topicSlideCalloutFontSize, t),
            rt = o.calcLength(R.topicSlideNoteFontSize, t),
            at = o.calcLength(R.vPaddingXXSmall, t),
            st = o.calcLength(R.vPaddingXXSmall, t),
            ct = o.calcLength(R.vPaddingXLarge, t),
            dt = o.calcLength(R.vPaddingXLarge, t),
            ut = o.calcLength(R.topicSlideTitleScrollFaderHeight, t),
            pt = o.calcLength(R.topicSlideLeftTitleGroupWidth, t),
            ht = o.calcLength(R.topicSlideLeftTitleFontSize, t),
            gt = o.calcLength(R.topicSlideLeftTitleGroupRightPadding, t),
            ft = o.calcLength(R.topicSlideRightContentHorizontalPadding, t),
            mt = t.width - V - V,
            bt = mt - pt - 2 * ft - gt,
            vt = I.title,
            xt = null !== (y = I.hyperlink) && void 0 !== y ? y : null,
            yt = null !== (S = I.markers) && void 0 !== S ? S : [],
            St = vt.length > 0 || yt.length > 0 || xt,
            wt = yt.slice(0, R.maxMarkerCount),
            Ct =
              null !==
                (C =
                  null === (w = I.note) || void 0 === w
                    ? void 0
                    : w.plainText) && void 0 !== C
                ? C
                : "",
            Tt =
              null !==
                (L = null === (T = I.note) || void 0 === T ? void 0 : T.html) &&
              void 0 !== L
                ? L
                : "",
            Lt = !!Ct || !!Tt,
            Bt =
              null !== (B = null == z ? void 0 : z.title) && void 0 !== B
                ? B
                : "",
            Mt = null !== (M = I.labels) && void 0 !== M ? M : [],
            kt =
              t.width > t.height &&
              "centralTopic" !== _ &&
              St &&
              Ct &&
              vt.length <= 24
                ? "note"
                : "title";
          o.initializeSlideStyle(t, R, W, { layout: x, contentPrincipal: kt });
          const Ft =
              null !== (k = t.titlePlacement) && void 0 !== k ? k : "top",
            Pt = {
              left: "top" === Ft ? V : ft,
              top: H,
              right: "top" === Ft ? V : ft,
              bottom: H,
            },
            It = Lt
              ? d.computeNoteTextBox(t, W, x, E, Ct, Tt, {
                  maxWidth: "top" === Ft ? mt : bt,
                  fontSize: rt,
                  contentPrincipal: kt,
                  roles: ["htmlNote"],
                })
              : null,
            Ot = Bt
              ? s.computeCalloutTextBox(t, W, x, E, Bt, {
                  maxWidth: "top" === Ft ? mt : bt,
                  fontSize: lt,
                })
              : null,
            _t = Mt.map((e, i) =>
              c.computeLabelGroup(t, W, x, E, e, i, {
                maxWidth: "top" === Ft ? mt : bt,
                minWidth: K,
                fontSize: Y,
                leftPadding: tt,
                rightPadding: et,
              }),
            );
          if ("left" === Ft) {
            const { leftTopicTitleGroup: e, rightContentGroup: i } =
              (function () {
                const e = (function (e) {
                  var i;
                  const {
                    maxFontSize: n,
                    minFontSize: o,
                    maxWidth: l,
                    maxLineCount: r,
                    preferredLineCount: a,
                  } = e;
                  function s(t) {
                    return t.textMeasurement.width <= l;
                  }
                  function c(t) {
                    return t.textMeasurement.lineCount <= a;
                  }
                  function d(t) {
                    return t.textMeasurement.lineCount <= r;
                  }
                  function p(e, i, n, o) {
                    return u.computeTopicTitleGroup(
                      t,
                      W,
                      x,
                      I.id,
                      I.title,
                      e,
                      i,
                      wt,
                      {
                        maxWidth: l,
                        fontSize: n,
                        markerRightMargin: G,
                        traillingIconLeftMargin: ot,
                        overflowWrap: o,
                        textAlignment: "leading",
                        textRoles: ["title"],
                      },
                    );
                  }
                  const h = m.computeTopicTitle(I),
                    g = null !== (i = I.hyperlink) && void 0 !== i ? i : null;
                  let v = h,
                    y = n,
                    S = "normal",
                    w = p(v, g, y, S);
                  if (s(w) && c(w)) return w;
                  if (((y = o), (w = p(v, g, y, S)), s(w))) {
                    if (c(w)) {
                      const t = f.rangedIntegers(n, o),
                        e = f.mapValues(t, (t) => ({
                          fontSize: t,
                          group: p(v, g, t, S),
                        })),
                        i = f.findClosestMatch(
                          e,
                          ({ group: t }) => s(t) && c(t),
                        );
                      if (!i)
                        throw new Error(
                          "Unable to find the best font size for parent topic of brace list slide",
                        );
                      (y = i.fontSize), (w = i.group);
                    }
                  } else {
                    S = "break-word";
                    const t = f.rangedIntegers(n, o),
                      e = f.mapValues(t, (t) => ({
                        fontSize: t,
                        group: p(v, g, t, S),
                      })),
                      i = f.findClosestMatch(e, ({ group: t }) => c(t));
                    i
                      ? ((y = i.fontSize), (w = i.group))
                      : ((y = o), (w = p(v, g, y, S)));
                  }
                  if (!d(w)) {
                    const t = f.rangedIntegers(v.length - 1, 1),
                      e = f.mapValues(t, (t) => b.getTruncatedText(v, t)),
                      i = f.mapValues(e, (t) => ({
                        text: t,
                        group: p(t, g, y, S),
                      })),
                      n = f.findClosestMatch(i, ({ group: t }) => d(t));
                    n
                      ? ((v = n.text), (w = n.group))
                      : ((v = b.getTruncatedText(v, 1)), (w = p(v, g, y, S)));
                  }
                  return w;
                })({
                  maxFontSize: ht,
                  minFontSize: ht,
                  maxWidth: pt,
                  maxLineCount: 3,
                  preferredLineCount: 2,
                });
                return {
                  leftTopicTitleGroup: e,
                  rightContentGroup: (function (e) {
                    const { maxWidth: i } = e,
                      n =
                        _t.length > 0
                          ? c.computeLabelListGroupBox(
                              t,
                              W,
                              x,
                              E,
                              _t.map(({ groupBox: t }) => t),
                              {
                                maxWidth: i,
                                labelSpacing: it,
                                lineSpacing: nt,
                                alignment: "leading",
                              },
                            )
                          : null;
                    return p.computeTopicSlideContentGroup(
                      t,
                      W,
                      x,
                      E,
                      {
                        calloutTextBox: Ot,
                        labelListGroupBox: n,
                        noteTextBox: It,
                      },
                      {
                        maxWidth: i,
                        maxHeight: t.height,
                        paddings: Pt,
                        contentAlignment: "leading",
                        spacingBetweenCalloutAndTitle: at,
                        spacingBetweenTitleAndLabelList: st,
                        spacingBetweenTitleAndNote: ct,
                        spacingBetweenLabelListAndNote: dt,
                        scrollFaderSize: ut,
                      },
                    );
                  })({ maxWidth: bt + 2 * ft }),
                };
              })();
            (e.groupBox.bounds.x = V + (pt - e.groupBox.bounds.width) / 2),
              (e.groupBox.bounds.y = (t.height - e.groupBox.bounds.height) / 2);
            const l = {
              id: n.decorGroupOfTopic(E),
              roles: ["topicSecondaryContentDecorGroup"],
              bounds: { x: 0, y: 0, width: bt + 2 * ft, height: t.height },
              absBounds: v.zeroRect(),
              contentType: "group",
              children: [i.groupBox],
              contentWidth: i.groupBox.bounds.width,
              contentHeight: t.height,
            };
            o.initializeBoxStyle(l, t, W, { layout: x }),
              (l.bounds.x = t.width - bt - 2 * ft - V),
              (l.bounds.y = 0),
              (i.groupBox.bounds.x =
                l.bounds.width > i.groupBox.bounds.width
                  ? (l.bounds.width - i.groupBox.bounds.width) / 2
                  : 0),
              (i.groupBox.bounds.y =
                l.bounds.height > i.groupBox.bounds.height
                  ? (l.bounds.height - i.groupBox.bounds.height) / 2
                  : 0),
              t.boxes.push(e.groupBox),
              t.boxes.push(l),
              n.addSlideContentFeatures(
                t,
                ...h.computeContentFeaturesForTitleGroup(e, E, vt, yt),
              ),
              i.calloutTextBox &&
                n.addSlideContentFeatures(t, {
                  kind: "callout",
                  topicId: E,
                  integrity: "full",
                }),
              i.labelListGroupBox &&
                n.addSlideContentFeatures(t, {
                  kind: "labels",
                  topicId: E,
                  integrity: "full",
                }),
              i.noteTextBox &&
                n.addSlideContentFeatures(t, {
                  kind: "note",
                  topicId: E,
                  integrity: "full",
                });
          }
          if ("top" === Ft) {
            const e = (function () {
                function e(e) {
                  var i;
                  const n = St
                    ? u.computeTopicTitleGroup(t, W, x, E, vt, vt, xt, wt, {
                        maxWidth: mt,
                        fontSize: e,
                        markerRightMargin: G,
                        traillingIconLeftMargin: ot,
                        textRoles: ["title"],
                        disallowShortTrailingLine: !0,
                      })
                    : null;
                  let o;
                  n && n.textMeasurement.lineCount > 1
                    ? ((n.textBox.textAlignment = "leading"), (o = "leading"))
                    : (o =
                        (null !== (i = null == It ? void 0 : It.lineCount) &&
                        void 0 !== i
                          ? i
                          : 0) > 1
                          ? "leading"
                          : "center");
                  const l =
                    _t.length > 0
                      ? c.computeLabelListGroupBox(
                          t,
                          W,
                          x,
                          E,
                          _t.map(({ groupBox: t }) => t),
                          {
                            maxWidth: mt,
                            labelSpacing: it,
                            lineSpacing: nt,
                            alignment: o,
                          },
                        )
                      : null;
                  return p.computeTopicSlideContentGroup(
                    t,
                    W,
                    x,
                    E,
                    {
                      titleGroup: n,
                      calloutTextBox: Ot,
                      labelListGroupBox: l,
                      noteTextBox: It,
                    },
                    {
                      maxWidth: t.width,
                      maxHeight: t.height,
                      paddings: Pt,
                      contentAlignment: o,
                      spacingBetweenCalloutAndTitle: at,
                      spacingBetweenTitleAndLabelList: st,
                      spacingBetweenTitleAndNote: ct,
                      spacingBetweenLabelListAndNote: dt,
                      scrollFaderSize: ut,
                    },
                  );
                }
                const i =
                  !Ot && _t.length <= 0 && !It ? t.height - H - H : null;
                let n = p.searchForBestTopicSlideContent(
                  e,
                  function (t) {
                    var e, i;
                    return null !==
                      (i =
                        null === (e = t.titleGroup) || void 0 === e
                          ? void 0
                          : e.textMeasurement.lineCount) && void 0 !== i
                      ? i
                      : 0;
                  },
                  function (t) {
                    return t.groupBox.contentHeight;
                  },
                  {
                    maxHeight: t.height,
                    compactMaxHeight: i,
                    singleLineTitleMaxFontSize: Z,
                    singleLineTitleMinFontSize: q,
                    doubleLineTitleMaxFontSize: N,
                    doubleLineTitleMinFontSize: X,
                    multilineTitleMaxFontSize: Q,
                    multilineTitleMinFontSize: J,
                    scrollableTitleFontSize: U,
                  },
                );
                if (
                  n.titleGroup &&
                  n.titleGroup.textMeasurement.hasShortTrailingLine
                ) {
                  const { lineCount: t, fontSize: i } =
                      n.titleGroup.textMeasurement,
                    o = e(
                      i *
                        l.defaultFontSizeScaleRatioToEliminateShortTrailingLine,
                    );
                  o.titleGroup &&
                    o.titleGroup.textMeasurement.lineCount < t &&
                    (n = o);
                }
                return n;
              })(),
              i = o.calcLength(R.topicSlideFitInPageContentHeight, t);
            e.groupBox.contentHeight < i &&
              (t.backgroundShapeTemplates = [
                ...(null !== (F = t.backgroundShapeTemplates) && void 0 !== F
                  ? F
                  : []),
                ...(null !==
                  (P = t.fitInPageTopicAddedBackgroundShapeTemplates) &&
                void 0 !== P
                  ? P
                  : []),
              ]);
            const { groupBox: r } = e;
            (r.bounds.x = (t.width - r.bounds.width) / 2),
              (r.bounds.y = (t.height - r.bounds.height) / 2),
              t.boxes.push(r),
              n.addSlideContentFeatures(
                t,
                ...h.computeContentFeaturesForTitleGroup(
                  e.titleGroup,
                  E,
                  vt,
                  yt,
                ),
              ),
              e.calloutTextBox &&
                n.addSlideContentFeatures(t, {
                  kind: "callout",
                  topicId: E,
                  integrity: "full",
                }),
              e.labelListGroupBox &&
                n.addSlideContentFeatures(t, {
                  kind: "labels",
                  topicId: E,
                  integrity: "full",
                }),
              e.noteTextBox &&
                n.addSlideContentFeatures(t, {
                  kind: "note",
                  topicId: E,
                  integrity: "full",
                });
          }
          O && a.addHeaderBoxes(t, O, R, W, x),
            r.computeAbsoluteBounds(t.boxes);
        }),
        (e.generateTopicSlide = function (t, e, i) {
          const o = Object.assign({}, t),
            l = n.assertBox(
              n.getBoxById(o.boxes, n.contentGroupOfTopic(o.topicId), "group"),
            );
          return (
            l.contentHeight > l.bounds.height &&
              (n.addMultistepBox(o, l.id),
              n.addSlideLeavingAnimations(o, [
                {
                  durationMultiplier: 1,
                  easing: "easeInOutCubic",
                  on: "preTransition",
                  effect: "mutate",
                  finalState: { boxes: [{ id: l.id, scrollOffset: 0 }] },
                },
              ])),
            (function (t) {
              "epilogue" === t.type ||
              ("centralTopic" != t.topicLevel &&
                "floatingTopic" != t.topicLevel)
                ? (function (t) {
                    const e = n.titleOfTopic(t.topicId),
                      i = 1,
                      o = 0.75,
                      l = n.assertBox(
                        n.getBoxById(
                          t.boxes,
                          n.contentGroupOfTopic(t.topicId),
                          "group",
                        ),
                      ),
                      r = l.children;
                    r.forEach((l) => {
                      var r;
                      l.id !== e &&
                        (n.setBoxEnteringState(t, { id: l.id, opacity: 0 }),
                        n.addSlideEnteringAnimations(t, [
                          {
                            on: "postTransition",
                            durationMultiplier: i,
                            delayMultiplier: o,
                            effect: "mutate",
                            easing: "easeOutQuad",
                            finalState: {
                              boxes: [
                                {
                                  id: l.id,
                                  opacity:
                                    null !== (r = l.opacity) && void 0 !== r
                                      ? r
                                      : 1,
                                },
                              ],
                            },
                          },
                        ]));
                    });
                  })(t)
                : (function (t) {
                    const e = n.assertBox(
                        n.getBoxById(
                          t.boxes,
                          n.contentGroupOfTopic(t.topicId),
                          "group",
                        ),
                      ),
                      i = [...e.children].sort(
                        (t, e) => t.bounds.y - e.bounds.y,
                      );
                    let o = 0;
                    i.forEach((e) => {
                      var i;
                      n.setBoxEnteringState(t, {
                        id: e.id,
                        transform: [
                          { translate: { x: 0, y: e.bounds.height / 5 } },
                        ],
                        opacity: 0,
                      }),
                        n.addSlideEnteringAnimations(t, [
                          {
                            durationMultiplier: 1.75,
                            delayMultiplier: o,
                            easing: "easeInOutCubic",
                            on: "transition",
                            effect: "mutate",
                            finalState: {
                              boxes: [
                                {
                                  id: e.id,
                                  transform: [{ translate: { x: 0, y: 0 } }],
                                },
                              ],
                            },
                          },
                        ]),
                        n.addSlideEnteringAnimations(t, [
                          {
                            durationMultiplier: 2.5,
                            delayMultiplier: o,
                            easing: "easeInOutCubic",
                            on: "transition",
                            effect: "mutate",
                            finalState: {
                              boxes: [
                                {
                                  id: e.id,
                                  opacity:
                                    null !== (i = e.opacity) && void 0 !== i
                                      ? i
                                      : 1,
                                },
                              ],
                            },
                          },
                        ]),
                        (o += 0.75);
                    });
                  })(t);
            })(o),
            g.addBackgroundBoxes(o, e, i),
            o
          );
        });
    },
    95907: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateTreeChartSlide = e.layoutTreeChartSlide = void 0);
      const n = i(6776),
        o = i(97857),
        l = i(91199),
        r = i(53399),
        a = i(51116),
        s = i(12851),
        c = i(35561),
        d = i(41432),
        u = i(90189),
        p = i(68605),
        h = i(89391),
        g = i(7381),
        f = i(55287),
        m = i(14065),
        b = i(28850),
        v = i(55136),
        x = "tree-chart";
      function y(t) {
        const e = n.findBox(t.children, (t) => "text" === t.contentType);
        return e && "lineCount" in e && e.lineCount
          ? e.bounds.height / e.lineCount / 2
          : t.bounds.height / 2;
      }
      function S(t, e, i, r, a, s, c = {}) {
        var d;
        const u = null !== (d = c.additionalRoles) && void 0 !== d ? d : [],
          p = `M ${s / 2} ${a / 2} L ${r - s / 2} ${a / 2}`,
          h = {
            id: n.indicatorOfTopic(t),
            roles: ["indicator", ...u],
            bounds: { x: 0, y: 0, width: r, height: a },
            absBounds: o.zeroRect(),
            contentType: "shape",
            shapePath: p,
          };
        return l.initializeBoxStyle(h, e, i, { layout: x }), h;
      }
      (e.layoutTreeChartSlide = function (t, e, i = {}) {
        var h;
        const { topic: g, subtopics: b, headerTopic: w } = e,
          C =
            null !== (h = null == i ? void 0 : i.theme) && void 0 !== h
              ? h
              : l.defaultTheme,
          T = l.appearanceOf(C),
          L = l.dimensionOf(C, { width: t.width, height: t.height });
        l.initializeSlideStyle(t, L, T, { layout: x });
        const B = l.calcLength(L.hSlidePadding, t),
          M = l.calcLength(L.vSlidePadding, t),
          k = t.width - B - B,
          F = k,
          P = Math.round(
            l.calcLength(L.treeChartSlideParentTopicMaxFontSize, t),
          ),
          I = Math.round(
            l.calcLength(L.treeChartSlideParentTopicMinFontSize, t),
          ),
          O = l.calcLength(L.hPaddingXSmall, t),
          _ = L.treeChartSlideParentTopicMaxLineCount,
          z = l.calcLength(L.treeChartSlideParentTopicBottomMargin, t),
          E = {
            left: 0,
            top: l.calcLength(L.vPaddingLarge, t),
            right: 0,
            bottom: M,
          },
          A = l.calcLength(L.vPaddingSmall, t),
          W = Math.round(l.calcLength(L.treeChartSlideSubtopicMaxFontSize, t)),
          R = Math.round(l.calcLength(L.treeChartSlideSubtopicMinFontSize, t)),
          V = l.calcLength(L.hPaddingXSmall, t),
          H = l.calcLength(L.scrollFaderHeight, t),
          D = k * L.treeChartSlideTreeBranchLeftMarginRatio,
          $ = l.calcLength(L.treeChartSlideTreeBranchRightMargin, t),
          j = k * L.treeChartSlideTreeBranchWidthRatio,
          G = l.calcLength(L.treeChartSlideTreeBranchStrokeWidth, t),
          Z = l.calcLength(L.treeChartSlideSubtopicIndicatorLength, t),
          q = l.calcLength(L.treeChartSlideSubtopicIndicatorLeftMargin, t),
          N = l.calcLength(L.hPaddingSmall, t),
          X = (function (t, e, i, n, o) {
            var l;
            const {
              maxFontSize: a,
              minFontSize: c,
              markerRightMargin: h,
              traillingIconLeftMargin: g,
              maxWidth: m,
              maxLineCount: b,
              preferredLineCount: v,
            } = o;
            function y(t) {
              return t.textMeasurement.width <= m;
            }
            function S(t) {
              return t.textMeasurement.lineCount <= v;
            }
            function w(t) {
              return t.textMeasurement.lineCount <= b;
            }
            const C = null !== (l = t.markers) && void 0 !== l ? l : [],
              T = C.slice(0, i.maxMarkerCount),
              L = f.computePlaceholder(t);
            function B(i, o, l) {
              var r;
              return u.computeTopicTitleGroup(
                e,
                n,
                x,
                t.id,
                t.title,
                i,
                null !== (r = t.hyperlink) && void 0 !== r ? r : null,
                T,
                {
                  maxWidth: m,
                  fontSize: o,
                  markerRightMargin: h,
                  traillingIconLeftMargin: g,
                  overflowWrap: l,
                  textRoles: ["title"],
                  requestForHit: { kind: "fastBackward" },
                  placeholder: L,
                },
              );
            }
            const M = d.computeTopicTitle(t);
            let k = M,
              F = a,
              P = "normal",
              I = B(k, F, P);
            if (y(I) && S(I))
              return Object.assign(Object.assign({}, I), {
                contentFeatures: p.computeContentFeaturesForTitleGroup(
                  I,
                  t.id,
                  M,
                  C,
                ),
              });
            if (((F = c), (I = B(k, F, P)), y(I))) {
              if (S(I)) {
                const t = r.rangedIntegers(a, c),
                  e = r.mapValues(t, (t) => ({
                    fontSize: t,
                    group: B(k, t, P),
                  })),
                  i = r.findClosestMatch(e, ({ group: t }) => y(t) && S(t));
                if (!i)
                  throw new Error(
                    "Unable to find the best font size for parent topic of brace list slide",
                  );
                (F = i.fontSize), (I = i.group);
              }
            } else {
              P = "break-word";
              const t = r.rangedIntegers(a, c),
                e = r.mapValues(t, (t) => ({ fontSize: t, group: B(k, t, P) })),
                i = r.findClosestMatch(e, ({ group: t }) => S(t));
              i
                ? ((F = i.fontSize), (I = i.group))
                : ((F = c), (I = B(k, F, P)));
            }
            if (!w(I)) {
              const t = r.rangedIntegers(k.length - 1, 1),
                e = r.mapValues(t, (t) => s.getTruncatedText(k, t)),
                i = r.mapValues(e, (t) => ({ text: t, group: B(t, F, P) })),
                n = r.findClosestMatch(i, ({ group: t }) => w(t));
              n
                ? ((k = n.text), (I = n.group))
                : ((k = s.getTruncatedText(k, 1)), (I = B(k, F, P)));
            }
            return Object.assign(Object.assign({}, I), {
              contentFeatures: p.computeContentFeaturesForTitleGroup(
                I,
                t.id,
                M,
                C,
              ),
            });
          })(g, t, L, T, {
            maxFontSize: P,
            minFontSize: I,
            markerRightMargin: O,
            traillingIconLeftMargin: N,
            maxWidth: F,
            maxLineCount: _,
            preferredLineCount: 1,
          }),
          Q = t.width - B - B,
          J = t.height - M - X.groupBox.bounds.height - z,
          U = (function (t, e, i, a, c, h) {
            const {
              paddings: g,
              maxWidth: b,
              maxHeight: w,
              maxFontSize: C,
              minFontSize: T,
              markerRightMargin: L,
              traillingIconLeftMargin: B,
              maxLineCount: M,
              scrollFaderSize: k,
              subtopicSpacing: F,
              treeBranchLeftMargin: P,
              treeBranchRightMargin: I,
              treeBranchWidth: O,
              treeBranchStrokeWidth: _,
              indicatorLength: z,
              indicatorLeftMargin: E,
            } = h;
            function A(t) {
              return t.groupBox.contentHeight <= w;
            }
            function W(t) {
              return t.textMeasurement.lineCount <= M;
            }
            const R = e.map((t) => {
              var e, i;
              return {
                topicId: t.id,
                title: t.title,
                text: d.computeTopicTitle(t),
                hyperlink:
                  null !== (e = t.hyperlink) && void 0 !== e ? e : null,
                markers: null !== (i = t.markers) && void 0 !== i ? i : [],
                placeholder: f.computePlaceholder(t),
              };
            });
            function V(e) {
              const d = [],
                h = [],
                f = [],
                C = [];
              let T = g.top,
                M = g.top;
              R.forEach(
                (
                  {
                    topicId: t,
                    title: n,
                    text: o,
                    hyperlink: l,
                    markers: m,
                    placeholder: w,
                  },
                  k,
                ) => {
                  var A;
                  const V = b - P - I - O,
                    H = m.slice(0, a.maxMarkerCount);
                  function D(o) {
                    return u.computeTopicTitleGroup(i, c, x, t, n, o, l, H, {
                      maxWidth: V,
                      fontSize: e,
                      markerRightMargin: L,
                      traillingIconLeftMargin: B,
                      textRoles: ["subtopic"],
                      requestForHit: {
                        kind: "present",
                        topicId: t,
                        viaIntro: !0,
                      },
                      placeholder: w,
                    });
                  }
                  const $ = r.rangedIntegers(o.length, 1),
                    j = r.mapValues($, (t) => s.getTruncatedText(o, t)),
                    G = r.mapValues(j, (t) => D(t)),
                    Z =
                      null !== (A = r.findClosestMatch(G, W)) && void 0 !== A
                        ? A
                        : D(s.getTruncatedText(o, 1)),
                    q = Z.groupBox.bounds;
                  let N;
                  if (
                    ((q.x = P + I + O),
                    (q.y = T),
                    (T += q.height + F),
                    M > 0 && (M += F),
                    (M += q.height),
                    d.length > 0)
                  ) {
                    const t = d[d.length - 1].groupBox;
                    N = t.bounds.height - y(t) + F + y(Z.groupBox);
                  } else N = g.top + y(Z.groupBox) - _;
                  d.push(Z);
                  const X = v.computeTreeBranchShape(
                    t,
                    i,
                    c,
                    O,
                    N,
                    _,
                    0 === d.length,
                  );
                  if (
                    (X &&
                      ((X.bounds.x = P - _ / 2),
                      (X.bounds.y =
                        q.y + y(Z.groupBox) + _ / 2 - X.bounds.height),
                      h.push(X)),
                    "leading-line" === i.treeChartSubtopicIndicatorShapeStyle)
                  ) {
                    const e = S(t, i, c, z, _, _);
                    (e.bounds.x = P - _ / 2 + E),
                      (e.bounds.y = q.y + y(Z.groupBox)),
                      f.push(e);
                  }
                  if (
                    "underline" === i.treeChartSubtopicIndicatorShapeStyle &&
                    k !== R.length - 1
                  ) {
                    const e = S(t, i, c, b, _, _);
                    (e.bounds.x = Z.groupBox.bounds.x),
                      (e.bounds.y =
                        Z.groupBox.bounds.y + Z.groupBox.bounds.height + F / 2),
                      f.push(e);
                  }
                  C.push(...p.computeContentFeaturesForTitleGroup(Z, t, o, m));
                },
              ),
                (M += g.bottom);
              const A = {
                id: n.subtopicListGroupOfTopic(t),
                roles: ["subtopicListGroup"],
                bounds: { x: 0, y: 0, width: b, height: Math.min(M, w) },
                absBounds: o.zeroRect(),
                contentType: "group",
                children: [...d.map((t) => t.groupBox), ...h, ...f],
                contentWidth: b,
                contentHeight: M,
                overflow: M > w ? "scroll" : "hidden",
                scrollFaderSize: k,
                bottomScrollFaderOffset: m.computeBottomMaskOffset(i, k),
              };
              return (
                l.initializeBoxStyle(A, i, c, { layout: x }),
                {
                  groupBox: A,
                  subtopicGroups: d,
                  treeBranchShapes: h,
                  contentFeatures: C,
                }
              );
            }
            let H, D;
            const $ = r.rangedIntegers(C, T),
              j = r.mapValues($, (t) => ({ fontSize: t, group: V(t) })),
              G = r.findClosestMatch(j, ({ group: t }) => A(t));
            G ? ((H = G.fontSize), (D = G.group)) : ((H = C), (D = V(H)));
            return D;
          })(g.id, b, t, L, T, {
            paddings: E,
            maxWidth: Q,
            maxHeight: J,
            maxFontSize: W,
            minFontSize: R,
            markerRightMargin: V,
            traillingIconLeftMargin: N,
            maxLineCount: 2,
            scrollFaderSize: H,
            subtopicSpacing: A,
            treeBranchLeftMargin: D,
            treeBranchRightMargin: $,
            treeBranchWidth: j,
            treeBranchStrokeWidth: G,
            indicatorLength: Z,
            indicatorLeftMargin: q,
          });
        (X.groupBox.bounds.x = B),
          (X.groupBox.bounds.y = M),
          (U.groupBox.bounds.x = B),
          (U.groupBox.bounds.y =
            X.groupBox.bounds.y + X.groupBox.bounds.height + z),
          t.boxes.push(X.groupBox),
          t.boxes.push(U.groupBox),
          w && c.addHeaderBoxes(t, w, L, T, x),
          a.computeAbsoluteBounds(t.boxes),
          n.addSlideContentFeatures(
            t,
            ...X.contentFeatures,
            ...U.contentFeatures,
          );
      }),
        (e.generateTreeChartSlide = function (t, e, i, o = {}) {
          var l;
          const { subtopics: r } = e,
            {
              numberOfVisibleTopics: a = 0,
              numberOfVisitedTopics: s = 0,
              inSlideScroll: c = !1,
            } = o,
            d = Object.assign({}, t);
          r.forEach(({ id: t }, e) => {
            e > a &&
              (h.computePendingBoxStates(d, n.titleOfTopic(t)),
              h.computePendingBoxStates(d, n.treeBranchOfTopic(t)),
              h.computePendingBoxStates(d, n.indicatorOfTopic(t)));
          });
          const u = n.assertBox(
            n.getBoxById(
              d.boxes,
              n.subtopicListGroupOfTopic(d.topicId),
              "group",
            ),
          );
          c && u.contentHeight > u.bounds.height && n.addMultistepBox(d, u.id);
          const p = a !== r.length ? a : s,
            f = n.assertBox(
              n.getBoxById(d.boxes, n.titleOfTopic(r[r.length - 1].id)),
            ),
            m = u.contentHeight - f.bounds.y - f.bounds.height;
          if (
            (g.computeSubtopicListScrollingStates(
              d,
              u.id,
              n.titleOfTopic(r[p].id),
              (t, e) => e.bounds.height - t.bounds.height + m,
            ),
            b.addBackgroundBoxes(d, e, i),
            a < r.length)
          ) {
            const t = r[a].id,
              i = n.assertBox(n.getBoxById(d.boxes, n.titleOfTopic(t))),
              o = n.getBoxById(d.boxes, n.treeBranchOfTopic(t)),
              s = n.getBoxById(d.boxes, n.indicatorOfTopic(t)),
              c = n.filterBoxes(d.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              }),
              u =
                null !==
                  (l =
                    null == c
                      ? void 0
                      : c.find(
                          (e) =>
                            "background-shape" === e.contentType &&
                            -1 !== e.id.indexOf(t),
                        )) && void 0 !== l
                  ? l
                  : null;
            !(function (
              t,
              e,
              {
                titleBox: i,
                treeBranchShape: o,
                subtopicIndicator: l,
                shapeRefSubtopic: r,
              },
            ) {
              var a, s;
              if (
                "one-by-one-drill-in" === e.computedListSlideDelivery &&
                (null === (a = t.aliases) || void 0 === a
                  ? void 0
                  : a.some(
                      (e) =>
                        "listOfTopic" === e.kind &&
                        e.topicId === t.topicId &&
                        1 === e.index,
                    ))
              )
                return;
              const c = [],
                d = [],
                u = (
                  null === (s = t.aliases) || void 0 === s
                    ? void 0
                    : s.some(
                        (e) =>
                          "listOfTopic" === e.kind &&
                          e.topicId === t.topicId &&
                          0 === e.index,
                      )
                )
                  ? { request: "forward", sourceSlideTopicId: t.topicId }
                  : {
                      request: "forward",
                      sourceSlideType: t.type,
                      sourceSlideTopicId: t.topicId,
                    };
              if (o) {
                const t = -(i.bounds.x - o.bounds.x - o.bounds.width);
                c.push(
                  { id: o.id, strokeOffset: 1, opacity: 0 },
                  {
                    id: i.id,
                    opacity: 0,
                    transform: [{ translate: { x: t, y: 0 } }],
                  },
                );
              } else c.push({ id: i.id, opacity: 0 });
              l && c.push({ id: l.id, strokeOffset: 1, opacity: 0 });
              r && c.push({ id: r.id, opacity: 0 });
              o &&
                d.push(
                  {
                    on: "postTransition",
                    durationMultiplier: 1.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: o.id, strokeOffset: 0 }] },
                    when: u,
                  },
                  {
                    on: "postTransition",
                    durationMultiplier: 1.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: { boxes: [{ id: o.id, opacity: 1 }] },
                    when: u,
                  },
                  {
                    on: "postTransition",
                    durationMultiplier: 1,
                    delayMultiplier: 1.5,
                    effect: "mutate",
                    easing: "easeOutQuad",
                    finalState: {
                      boxes: [
                        {
                          id: i.id,
                          transform: [{ translate: { x: 0, y: 0 } }],
                        },
                      ],
                    },
                    when: u,
                  },
                );
              d.push({
                on: "postTransition",
                durationMultiplier: 1,
                delayMultiplier: 1.5,
                effect: "mutate",
                easing: "easeOutQuad",
                finalState: { boxes: [{ id: i.id, opacity: 1 }] },
                when: u,
              }),
                l &&
                  d.push(
                    {
                      on: "postTransition",
                      durationMultiplier: 1,
                      delayMultiplier: 1.5,
                      effect: "mutate",
                      easing: "easeOutQuad",
                      finalState: { boxes: [{ id: l.id, strokeOffset: 0 }] },
                      when: u,
                    },
                    {
                      on: "postTransition",
                      durationMultiplier: 1,
                      delayMultiplier: 1.5,
                      effect: "mutate",
                      easing: "easeOutQuad",
                      finalState: { boxes: [{ id: l.id, opacity: 1 }] },
                      when: u,
                    },
                  );
              r &&
                d.push({
                  on: "postTransition",
                  durationMultiplier: 1,
                  delayMultiplier: 1.5,
                  effect: "mutate",
                  easing: "easeOutQuad",
                  finalState: { boxes: [{ id: r.id, opacity: 1 }] },
                  when: u,
                });
              n.addSlideAdditionalEnteringStates(t, [
                { state: { boxes: c }, when: u },
              ]),
                n.addSlideEnteringAnimations(t, d);
            })(d, e, {
              titleBox: i,
              treeBranchShape: o,
              subtopicIndicator: s,
              shapeRefSubtopic: u,
            });
          }
          return (
            (function (t, e, i = {}) {
              const { subtopics: o } = e,
                { numberOfVisibleTopics: l = 0 } = i,
                r = n.findBox(t.boxes, (t) => {
                  var e;
                  return (
                    "background-shape" === t.contentType &&
                    "title" ===
                      (null === (e = t.relativePosition) || void 0 === e
                        ? void 0
                        : e.referenceBoxRole)
                  );
                });
              if ("background-shape" === (null == r ? void 0 : r.contentType)) {
                n.filterBoxes(t.boxes, (t) =>
                  t.roles.includes("treeBranch"),
                ).forEach((t) => {
                  var e;
                  "shape" === t.contentType &&
                    (t.strokeColor =
                      null !== (e = null == r ? void 0 : r.fillColor) &&
                      void 0 !== e
                        ? e
                        : "background-shape" ===
                            (null == r ? void 0 : r.contentType)
                          ? r.fillColor
                          : t.strokeColor);
                });
              }
              const a = n.filterBoxes(t.boxes, (t) => {
                var e;
                return (
                  "background-shape" === t.contentType &&
                  "subtopic" ===
                    (null === (e = t.relativePosition) || void 0 === e
                      ? void 0
                      : e.referenceBoxRole)
                );
              });
              o.forEach(({ id: e }, i) => {
                var o;
                const s =
                  null == a
                    ? void 0
                    : a.find(
                        (t) =>
                          "background-shape" === t.contentType &&
                          -1 !== t.id.indexOf(e),
                      );
                s && (s.opacity = i <= l ? 1 : 0);
                const c = n.getBoxById(t.boxes, n.indicatorOfTopic(e), "shape");
                c &&
                  (c.strokeColor =
                    null !== (o = null == s ? void 0 : s.fillColor) &&
                    void 0 !== o
                      ? o
                      : "background-shape" ===
                          (null == r ? void 0 : r.contentType)
                        ? r.fillColor
                        : c.strokeColor);
              });
            })(d, e, o),
            d
          );
        });
    },
    18706: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.isTrailingExitListSlide =
          e.isExitListSlide =
          e.isEntranceListSlide =
            void 0),
        (e.isEntranceListSlide = function (t) {
          var e;
          return (
            "list" === t.type &&
            !!(null === (e = t.aliases) || void 0 === e
              ? void 0
              : e.some((t) => "introOfTopic" === t.kind))
          );
        }),
        (e.isExitListSlide = function (t) {
          var e;
          return (
            "list" === t.type &&
            !!(null === (e = t.aliases) || void 0 === e
              ? void 0
              : e.some((t) => "outroOfTopic" === t.kind))
          );
        }),
        (e.isTrailingExitListSlide = function (t) {
          var e;
          const i =
            t.subtopics.length > 0 ? t.subtopics[t.subtopics.length - 1] : null;
          return (
            "list" === t.type &&
            !!(null === (e = t.aliases) || void 0 === e
              ? void 0
              : e.some((t) => "outroOfTopic" === t.kind && t.topicId === i))
          );
        });
    },
    84152: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__importDefault) ||
        function (t) {
          return t && t.__esModule ? t : { default: t };
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.generateSlideContentForEpilogueSlide =
          e.generateSlideFromDescriptor =
          e.generatePresentationalSlidesFor =
          e.getTopicIdForGeneratingSlideByAlias =
          e.generateTemplateSlideFor =
            void 0);
      const o = i(6776),
        l = i(92850),
        r = i(91199),
        a = i(22329),
        s = i(14594),
        c = i(42504),
        d = i(30207),
        u = i(42847),
        p = n(i(83465)),
        h = i(41992);
      function g(t, e, i, n, r, a) {
        var s, c;
        if (!t.type || !t.alias) return null;
        const { alias: d, type: u } = t,
          {
            topic: { id: g },
          } = n,
          f = a(u, g);
        if (!f)
          throw new Error(
            `Unable to obtain template slide for type "${u}" and topicId "${g}"`,
          );
        let m = Object.assign(Object.assign({}, p.default(f)), {
          aliases: [...(null !== (s = f.aliases) && void 0 !== s ? s : [])],
        });
        if (
          (o.addSlideAliases(m, d),
          (null == e ? void 0 : e.alias) && (m.previousSlide = e.alias),
          (null == i ? void 0 : i.alias) && (m.nextSlide = i.alias),
          (null == e ? void 0 : e.nextSlide) &&
            o.addSlideAliases(m, e.nextSlide),
          (null == i ? void 0 : i.previousSlide) &&
            o.addSlideAliases(m, i.previousSlide),
          (null == i ? void 0 : i.previousSlide2) &&
            o.addSlideAliases(m, i.previousSlide2),
          m.layout in l.layoutEngines)
        ) {
          const e = l.layoutEngines[m.layout].computeLayoutVariant(m, n);
          m =
            null !==
              (c = h.layoutVariantEngines[e].generatePresentationalSlide(
                m,
                n,
                r,
                t.layoutOptions,
              )) && void 0 !== c
              ? c
              : m;
        }
        return m;
      }
      (e.generateTemplateSlideFor = function (t, e, i = {}) {
        var n, a, d, p, g, f;
        const m = r.computeTheme(
            null !== (n = i.appearanceId) && void 0 !== n ? n : "default",
            null !== (a = i.preferredLanguage) && void 0 !== a ? a : "en",
          ),
          b = null !== (d = i.slideSize) && void 0 !== d ? d : o.slideSize_16_9,
          v = i.disablesWatermark,
          {
            topic: { id: x },
            parentTopic: y,
            topicLevel: S,
          } = e,
          w = c.computeSlideLayout(t, b, e),
          C = {
            type: t,
            layout: w,
            topicId: x,
            parentTopicId:
              null !== (p = null == y ? void 0 : y.id) && void 0 !== p
                ? p
                : null,
            subtopics: e.subtopics.map((t) => t.id),
            headerTopicId:
              null === (g = e.headerTopic) || void 0 === g ? void 0 : g.id,
            calloutTopicId:
              null === (f = e.calloutTopic) || void 0 === f ? void 0 : f.id,
            topicLevel: S,
            boxes: [],
            backgroundBoxes: [],
            width: b.width,
            height: b.height,
          };
        if (w && w in l.layoutEngines) {
          const t = l.layoutEngines[w].computeLayoutVariant(C, e);
          h.layoutVariantEngines[t].layoutTemplateSlide(C, e, { theme: m });
        }
        return (
          v || u.addSlideWatermark(C, { theme: m }),
          s.disposeTextMeasurementHelpers(),
          C
        );
      }),
        (e.getTopicIdForGeneratingSlideByAlias = function (t, e) {
          var i, n;
          if ("introOfSummary" === t.kind || "outroOfSummary" === t.kind)
            return e.getParentTopicId(t.topicId);
          if ("introOfTopic" === t.kind || "outroOfTopic" === t.kind) {
            const o = e.getParentTopicId(t.topicId);
            if (
              !o ||
              (null ===
                (n =
                  null === (i = e.getFloatingTopics) || void 0 === i
                    ? void 0
                    : i.call(e)) || void 0 === n
                ? void 0
                : n.includes(t.topicId))
            ) {
              const i = d.computeRootTopics(e),
                { previousSiblingTopicId: n, nextSiblingTopicId: o } =
                  d.computeSiblingTopics(t.topicId, i);
              return o || "outroOfTopic" !== t.kind
                ? "introOfTopic" === t.kind
                  ? n
                  : o
                : t.topicId;
            }
            return o;
          }
          return t.topicId;
        }),
        (e.generatePresentationalSlidesFor = function (t, e, i) {
          var n, o;
          const l = a.describeSlideSequenceForTopic(t),
            r = [];
          for (let a = 0; a < l.length; a++) {
            const s = g(
              l[a],
              null !== (n = l[a - 1]) && void 0 !== n ? n : null,
              null !== (o = l[a + 1]) && void 0 !== o ? o : null,
              t,
              e,
              i,
            );
            s && r.push(s);
          }
          return r;
        }),
        (e.generateSlideFromDescriptor = g),
        (e.generateSlideContentForEpilogueSlide = function (t) {
          return {
            topic: { id: t, title: "Thank you" },
            topicLevel: "centralTopic",
            parentTopic: null,
            siblingTopics: [],
            subtopics: [],
            summarySubtopics: [],
            headerTopic: null,
            calloutTopic: null,
            computedListSlideDelivery: "one-by-one-drill-in",
          };
        });
    },
    14446: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.hash = e.SlideStore = void 0);
      function i(t) {
        var e;
        return `${t.kind}:${null !== (e = t.index) && void 0 !== e ? e : "x"}:${t.topicId}`;
      }
      (e.SlideStore = class {
        constructor() {
          (this._slides = new Map()), (this._slideGenerations = new Map());
        }
        getSlide(t) {
          var e;
          return null !== (e = this._slides.get(i(t))) && void 0 !== e
            ? e
            : null;
        }
        setSlide(t, e) {
          this._slides.set(i(t), e);
        }
        hasSlidesGeneratedForTopic(t) {
          return this._slideGenerations.has(t);
        }
        getSlidesGeneratedForTopic(t) {
          var e, i;
          return null !==
            (i =
              null === (e = this._slideGenerations.get(t)) || void 0 === e
                ? void 0
                : e.slides) && void 0 !== i
            ? i
            : [];
        }
        addSlideGeneratedForTopic(t, e) {
          var i;
          const n =
            null !== (i = this._slideGenerations.get(t)) && void 0 !== i
              ? i
              : { slides: [] };
          n.slides.push(e), this._slideGenerations.set(t, n);
        }
        clear() {
          (this._slides = new Map()), (this._slideGenerations = new Map());
        }
      }),
        (e.hash = i);
    },
    10895: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.computeEndingScreenColors = void 0),
        (e.computeEndingScreenColors = function (t) {
          switch (t) {
            case "default":
              return {
                appearance: t,
                map: { background: "#101010", multiLine: ["#F6F6F6"] },
                centralTopic: { fill: "#F6F6F6", text: "#000000" },
                mainTopic: { fill: "#E3E3E3", text: "#000000" },
                subtopic: { fill: "#B9B9B9" },
                floatingTopic: { fill: "#BABABA" },
                callout: { fill: "#F6F6F6", text: "#000000" },
                summary: { fill: "#F6F6F6", text: "#000000" },
                relationship: { fill: "#F6F6F6", text: "#FFFFFF" },
                boundary: { fill: "#F6F6F6", text: "#000000" },
                important: { fill: "#A43838" },
                minor: { fill: "#CFA362", text: "#000000" },
              };
            case "light":
              return {
                appearance: t,
                map: { background: "#F4F4F4", multiLine: ["#282828"] },
                centralTopic: { fill: "#282828" },
                mainTopic: { fill: "#282828", text: "#FFFFFF" },
                subtopic: { fill: "#4F4F4F" },
                floatingTopic: { fill: "#494949", text: "#FFFFFF" },
                callout: { fill: "#282828", text: "#FFFFFF" },
                summary: { fill: "#282828", text: "#FFFFFF" },
                relationship: { fill: "#282828", text: "#000000" },
                boundary: { fill: "#282828", text: "#FFFFFF" },
                important: { fill: "#A43838" },
                minor: { fill: "#CFA362", text: "#000000" },
              };
            case "innocence":
              return {
                appearance: t,
                map: {
                  background: "#ECF4E9",
                  multiLine: [
                    "#FF9A9A",
                    "#F9E168",
                    "#FFC368",
                    "#ACDB87",
                    "#749AC7",
                    "#FF9A9A",
                  ],
                },
                centralTopic: { fill: "#F06767" },
                mainTopic: { text: "#000000" },
                subtopic: {},
                floatingTopic: { fill: "#797979", text: "#F7FFF4" },
                callout: { fill: "#F06767", text: "#F7FFF4" },
                summary: { fill: "#F06767", text: "#F7FFF4" },
                relationship: { fill: "#F06767", text: "#000000" },
                boundary: { fill: "#F06767", text: "#F7FFF4" },
                important: { fill: "#1000C6" },
                minor: { fill: "#22D896", text: "#000000" },
              };
            case "shape-for-you":
              return {
                appearance: t,
                map: {
                  background: "#F5D8DD",
                  multiLine: [
                    "#EDB998",
                    "#BEADA6",
                    "#E994B1",
                    "#ACBCD6",
                    "#B1ABD6",
                    "#B0CD99",
                    "#97D6C3",
                    "#BDB783",
                  ],
                },
                centralTopic: { fill: "#E59294", text: "#000000" },
                mainTopic: { text: "#000000" },
                subtopic: {},
                floatingTopic: { fill: "#4B4B4B", text: "#FFFFFF" },
                callout: { fill: "#E59294", text: "#000000" },
                summary: { fill: "#E59294", text: "#000000" },
                relationship: { fill: "#E59294", text: "#000000" },
                boundary: { fill: "#E59294", text: "#000000" },
                important: { fill: "#50209E" },
                minor: { fill: "#62A8CF", text: "#000000" },
              };
            case "hubble-bubble":
              return {
                appearance: t,
                map: { background: "#1D663A", multiLine: ["#A2B864"] },
                centralTopic: { fill: "#39B169", text: "#FEFFD0" },
                mainTopic: { fill: "#39B169", text: "#FEFFD0" },
                subtopic: { fill: "#2E9356", text: "#FEFFD0" },
                floatingTopic: { fill: "#A2B864", text: "#1D663A" },
                callout: { fill: "#FEFFD0", text: "#000000" },
                summary: { fill: "#A2B864", text: "#1D663A" },
                relationship: { fill: "#A2B864", text: "#FEFFD0" },
                boundary: { fill: "#A2B864" },
                important: { fill: "#FA813D", text: "#000000" },
                minor: { fill: "#ECDE5D", text: "#000000" },
              };
            case "midnight-rose":
              return {
                appearance: t,
                map: { background: "#010518", multiLine: ["#9EAEFF"] },
                centralTopic: { fill: "#2C47D8" },
                mainTopic: { fill: "#2C47D8", text: "#FFFFFF" },
                subtopic: { fill: "#3E4C95", text: "#FFFFFF" },
                floatingTopic: { fill: "#DEE3FF", text: "#404E9C" },
                callout: { fill: "#2C47D8", text: "#FFFFFF" },
                summary: { fill: "#9EAEFF", text: "#404E9C" },
                relationship: { fill: "#2C47D8", text: "#FFFFFF" },
                boundary: { fill: "#2C47D8", text: "#FFFFFF" },
                important: { fill: "#A716CB" },
                minor: { fill: "#D45757" },
              };
            case "hand-drawn":
              return {
                appearance: t,
                map: { background: "#DCE2D4", multiLine: ["#2F4DB5"] },
                centralTopic: { fill: "#2F4DB5" },
                mainTopic: { fill: "#2F4DB5", text: "#FFFFFF" },
                subtopic: { fill: "#5E6AA2", text: "#FFFFFF" },
                floatingTopic: { fill: "#5A5E74", text: "#EDF4E5" },
                callout: { fill: "#2F4DB5", text: "#FFFFFF" },
                summary: { fill: "#2F4DB5", text: "#FFFFFF" },
                relationship: { fill: "#2F4DB5", text: "#2F4DB5" },
                boundary: { fill: "#2F4DB5", text: "#FFFFFF" },
                important: { fill: "#9433AC" },
                minor: { fill: "#D05252" },
              };
          }
        });
    },
    91389: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.defaultDimension = void 0),
        (e.defaultDimension = {
          vPaddingXXSmall: { pct: 1, unit: "vmin" },
          vPaddingXSmall: { pct: 2, unit: "vmin" },
          vPaddingSmall: { pct: 4, unit: "vmin" },
          vPaddingNormal: { pct: 6, unit: "vmin" },
          vPaddingMedium: { pct: 8, unit: "vmin" },
          vPaddingLarge: { pct: 16, unit: "vmin" },
          vPaddingXLarge: { pct: 16, unit: "vmin" },
          vPaddingXXLarge: { pct: 25, unit: "vmin" },
          hPaddingXSmall: { pct: 1, unit: "vmin" },
          hPaddingSmall: { pct: 2, unit: "vmin" },
          hPaddingNormal: { pct: 3, unit: "vmin" },
          hPaddingMedium: { pct: 4, unit: "vmin" },
          hPaddingLarge: { pct: 5, unit: "vmin" },
          hPaddingXLarge: { pct: 7, unit: "vmin" },
          hSlidePadding: { pct: 100 / 13, unit: "vw" },
          vSlidePadding: { pct: 12.5, unit: "vh" },
          scrollFaderHeight: { pct: 12.5, unit: "vh" },
          topicSlideTitleFontSizeLarge: { pct: 15, unit: "vmin" },
          topicSlideTitleFontSizeMedium: { pct: 8, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 5, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 8, unit: "vmin" },
          topicSlideTitleScrollFaderHeight: { pct: 12.5, unit: "vh" },
          topicSlideSingleLineTitleAlignment: "center",
          topicSlideMultilineTitleAlignment: "leading",
          topicSlideFitInPageContentHeight: { pct: 74.7, unit: "vh" },
          topicSlideLabelFontSize: { pct: 3, unit: "vmin" },
          topicSlideLabelMinWidth: { pct: 9, unit: "vmin" },
          topicSlideLabelSpacing: { pct: 2, unit: "vmin" },
          topicSlideLabelLineSpacing: { pct: 2, unit: "vmin" },
          topicSlideNoteFontSize: { pct: 4, unit: "vmin" },
          topicSlideCalloutFontSize: { pct: 4, unit: "vmin" },
          topicSlideLeftTitleGroupWidth: { pct: 31.5, unit: "vmax" },
          topicSlideLeftTitleFontSize: { pct: 16, unit: "vmin" },
          topicSlideLeftTitleGroupRightPadding: { pct: 14, unit: "vmin" },
          topicSlideRightContentHorizontalPadding: { pct: 8.2, unit: "vmin" },
          imageTopicSlideSmallImageDefiningWidth: 400,
          imageTopicSlideHLayoutImageZoneWidth: { pct: 700 / 15, unit: "vw" },
          imageTopicSlideHLayoutImageZoneWidthForSmallImage: {
            pct: 20,
            unit: "vw",
          },
          imageTopicSlideHLayoutSpacingAroundImage: {
            pct: 100 / 15,
            unit: "vw",
          },
          imageTopicSlideHLayoutTitleFontSizeLarge: { pct: 10, unit: "vmin" },
          imageTopicSlideHLayoutTitleFontSizeMedium: { pct: 8, unit: "vmin" },
          imageTopicSlideHLayoutTitleFontSizeSmall: { pct: 7, unit: "vmin" },
          imageTopicSlideVLayoutImageZoneHeight: { pct: 62.5, unit: "vh" },
          imageTopicSlideVLayoutImageZoneHeightForSmallImage: {
            pct: 25,
            unit: "vh",
          },
          imageTopicSlideVLayoutTitleFontSizeLarge: { pct: 7, unit: "vmin" },
          imageTopicSlideVLayoutTitleFontSizeMedium: { pct: 6, unit: "vmin" },
          imageTopicSlideVLayoutTitleFontSizeSmall: { pct: 4.5, unit: "vmin" },
          headerZoneWidth: { pct: 20, unit: "vw" },
          headerZoneCompactWidth: { pct: 10, unit: "vw" },
          headerZoneHeight: { pct: 2.5, unit: "vh" },
          headerTextTopMargin: { pct: 4, unit: "vmin" },
          headerTextFontSize: { pct: 2.5, unit: "vmin" },
          headerTextLeftMargin: { pct: 5, unit: "vmin" },
          headerImagePlaceHolderTopMargin: { pct: 2, unit: "vmin" },
          headerMarkerRightMargin: { pct: 0.375, unit: "vmin" },
          headerLineTopMargin: { pct: 1, unit: "vmin" },
          headerLineLength: { pct: 5, unit: "vmin" },
          headerLineWidth: 4,
          braceListSlideParentTopicMaxFontSize: { pct: 10, unit: "vmin" },
          braceListSlideParentTopicMinFontSize: { pct: 7, unit: "vmin" },
          braceListSlideParentTopicZoneWidthRatio: 0.3,
          braceListSlideParentTopicRightPadding: { pct: 0, unit: "vmin" },
          braceListSlideParentTopicMaxLineCount: 5,
          braceListSlideParentTopicPreferredLineCount: 2,
          braceListSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          braceListSlideSubtopicMinFontSize: { pct: 4.5, unit: "vmin" },
          braceListSlideScrollFaderHeight: { pct: 25, unit: "vh" },
          braceListSlideSubtopicListLeftPadding: 0,
          braceListSlideSubtopicListRightPadding: {
            pct: 100 / 13,
            unit: "vmin",
          },
          braceListSlideSubtopicMinWidth: 0,
          braceListSlideBraceShapeGroupMaxWidth: { pct: 10.6, unit: "vmin" },
          braceListSlideBraceShapeLineWidth: 8,
          braceListSlidePreferredSingleLineSubtopicsCount: 5,
          braceListSlideCentralTopicPreferredSingleLineSubtopicsCount: 5,
          bulletListSlideParentTopicMaxFontSize: { pct: 11, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 9, unit: "vmin" },
          bulletListSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          bulletListSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          bulletListSlideContentLeftPadding: 0,
          bulletListSlideBulletDotSizeRatio: 0.3,
          bulletListSlideBulletDotStrokeLineWidth: 0,
          bulletListSlideBulletDotRightMargin: { pct: 2, unit: "vmin" },
          bulletListSlideParentTopicBottomMargin: { pct: 2, unit: "vmin" },
          bulletListSlideCentralTopicParentTopicBottomMargin: {
            pct: 2,
            unit: "vmin",
          },
          bulletListSlideSubtopicSpacing: { pct: 6, unit: "vmin" },
          bulletListSlideCentralTopicSubtopicSpacing: { pct: 6, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 11, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 9, unit: "vmin" },
          lyricListSlideParentTopicIndicatorLineWidth: 2,
          lyricListSlideParentTopicIndicatorTopMargin: { pct: 4, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 6, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 4.5, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 6, unit: "vmin" },
          lyricListSlideContentLeftPadding: 0,
          lyricListSlideContentBottomPadding: { pct: 12.5, unit: "vh" },
          lyricListSlideParentTopicBottomMargin: { pct: 2, unit: "vmin" },
          lyricListSlideCentralTopicParentTopicBottomMargin: {
            pct: 2,
            unit: "vmin",
          },
          lyricListSlideCurrentSubtopicOffsetRatio: 0.5,
          lyricListSlideSubtopicListLeftPadding: { pct: 100 / 13, unit: "vw" },
          lyricListSlideSubtopicSpacing: { pct: 4, unit: "vmin" },
          lyricListSlideCentralTopicSubtopicSpacing: { pct: 4, unit: "vmin" },
          lyricListSlideArrowWidth: 46,
          lyricListSlideArrowHeight: 36,
          lyricListSlideArrowCornerRadius: 4,
          treeChartSlideParentTopicMaxFontSize: { pct: 14, unit: "vmin" },
          treeChartSlideParentTopicMinFontSize: { pct: 11, unit: "vmin" },
          treeChartSlideSubtopicMaxFontSize: { pct: 7.3, unit: "vmin" },
          treeChartSlideSubtopicMinFontSize: { pct: 6.4, unit: "vmin" },
          treeChartSlideParentTopicMaxLineCount: 2,
          treeChartSlideParentTopicBottomMargin: { pct: 1, unit: "vmin" },
          treeChartSlideTreeBranchRightMargin: { pct: 2, unit: "vmin" },
          treeChartSlideTreeBranchLeftMarginRatio: 1 / 6,
          treeChartSlideTreeBranchWidthRatio: 1 / 12,
          treeChartSlideTreeBranchStrokeWidth: 8,
          treeChartSlideSubtopicIndicatorLength: { pct: 5.3, unit: "vmin" },
          treeChartSlideSubtopicIndicatorLeftMargin: { pct: 3.3, unit: "vmin" },
          summarySlideTopicMaxFontSize: { pct: 10, unit: "vmin" },
          summarySlideTopicMinFontSize: { pct: 6, unit: "vmin" },
          summarySlideTopicMarkerRightMargin: { pct: 1.2, unit: "vmin" },
          summarySlideSubtopicFontSize: { pct: 8, unit: "vmin" },
          summarySlideSubtopicMarkerRightMargin: { pct: 1.2, unit: "vmin" },
          summarySlideLineHeight: { pct: 3.125, unit: "vh" },
          summarySlideLineStrokeWidth: 5,
          summaryScrollFaderHeight: { pct: 12.5, unit: "vh" },
          onlyChildSlideSubtopicMaxFontSize: { pct: 10, unit: "vmin" },
          onlyChildSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
          onlyChildSlideSeparatorLineWidth: 4,
          fishboneSlideParentTopicMaxFontSize: { pct: 10, unit: "vmin" },
          fishboneSlideParentTopicMinFontSize: { pct: 8, unit: "vmin" },
          fishboneSlideParentTopicTitleMaxWidth: { pct: 32, unit: "vw" },
          fishboneSlideParentTopicAreaWidth: { pct: 62.22, unit: "vmin" },
          fishboneSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          fishboneSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          fishboneSlideSubtopicTitleMaxWidth: { pct: 50, unit: "vmin" },
          fishboneSlideFishboneLineWidth: 6,
          fishboneSlideFishboneHeadLineWidth: 4,
          fishboneSlideFishboneHeadLength: { pct: 21, unit: "vmin" },
          fishboneSlideFishboneHeadAngle: 35,
          fishboneSlideFishboneHeadInterval: { pct: 66, unit: "vmin" },
          fishboneSlideFishboneHeadSpacing: { pct: 16, unit: "vmin" },
          fishboneHeadSlideParentTopicDefaultFontSize: {
            pct: 10,
            unit: "vmin",
          },
          fishboneHeadSlideSubtopicGroupTrailingOffset: {
            pct: 22.5,
            unit: "vmin",
          },
          fishboneHeadSlideSubtopicTitleLeftMargin: { pct: 9, unit: "vmin" },
          fishboneHeadSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          fishboneHeadSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          fishboneHeadSlideSubtopicLeadingLineWidth: 4,
          fishboneHeadSlideFishboneHeadLength: { pct: 80, unit: "vmin" },
          fishboneHeadSlideFishboneHeadInterval: { pct: 200, unit: "vmin" },
          fishboneHeadSlideFishboneHeadLeftOffset: { pct: 21.44, unit: "vmin" },
          fishboneHeadSlideFishboneHeadAngle: 20,
          timelineSlideParentTopicMaxFontSize: { pct: 10, unit: "vmin" },
          timelineSlideParentTopicMinFontSize: { pct: 8, unit: "vmin" },
          timelineSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          timelineSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          timelineSlideSubtopicTitleMaxWidth: { pct: 48.67, unit: "vmin" },
          timelineSlideVerticalLineInterval: { pct: 11.56, unit: "vmin" },
          timelineSlideVerticalLineSpacing: { pct: 5.67, unit: "vmin" },
          timelineSlideVerticalLineEdgeCompensationLength: 0,
          timelineHeadSlideSubtopicTitleLeftMargin: { pct: 12, unit: "vmin" },
          timelineHeadSlideTimePointRadius: 10,
          maxMarkerCount: 3,
          hitRegionHPadding: { pct: 1, unit: "vmin" },
          hitRegionVPadding: { pct: 1, unit: "vmin" },
          bottomCenterWatermarkVerticalMargin: { pct: 12.5, unit: "vmin" },
          bottomEdgeWatermarkVerticalMargin: { pct: 6.25, unit: "vmin" },
          bottomEdgeWatermarkHorizontalMargin: { pct: 100 / 15, unit: "vw" },
          verticalWatermarkVerticalMargin: { pct: 100 / 26, unit: "vmin" },
          verticalWatermarkHorizontalMargin: { pct: 100 / 45, unit: "vw" },
        });
    },
    77474: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.portraitDimension = void 0),
        (e.portraitDimension = {
          vPaddingXXSmall: { pct: 2, unit: "vmin" },
          vPaddingXSmall: { pct: 5, unit: "vmin" },
          vPaddingSmall: { pct: 11, unit: "vmin" },
          vPaddingNormal: { pct: 13, unit: "vmin" },
          vPaddingMedium: { pct: 15, unit: "vmin" },
          vPaddingLarge: { pct: 16, unit: "vmin" },
          vPaddingXLarge: { pct: 20, unit: "vmin" },
          vPaddingXXLarge: { pct: 30, unit: "vmin" },
          hPaddingXSmall: { pct: 1, unit: "vmin" },
          hPaddingSmall: { pct: 2, unit: "vmin" },
          hPaddingNormal: { pct: 3, unit: "vmin" },
          hPaddingMedium: { pct: 5, unit: "vmin" },
          hPaddingLarge: { pct: 8, unit: "vmin" },
          hPaddingXLarge: { pct: 11, unit: "vmin" },
          hSlidePadding: { pct: 100 / 15, unit: "vw" },
          vSlidePadding: { pct: 12.5, unit: "vh" },
          scrollFaderHeight: { pct: 12.5, unit: "vh" },
          topicSlideTitleFontSizeLarge: { pct: 14, unit: "vmin" },
          topicSlideTitleFontSizeMedium: { pct: 8, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 7, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 8, unit: "vmin" },
          topicSlideTitleScrollFaderHeight: { pct: 25, unit: "vh" },
          topicSlideSingleLineTitleAlignment: "center",
          topicSlideMultilineTitleAlignment: "leading",
          topicSlideFitInPageContentHeight: { pct: 77.5, unit: "vh" },
          topicSlideLabelFontSize: { pct: 4, unit: "vmin" },
          topicSlideLabelMinWidth: { pct: 9, unit: "vmin" },
          topicSlideLabelSpacing: { pct: 3, unit: "vmin" },
          topicSlideLabelLineSpacing: { pct: 2, unit: "vmin" },
          topicSlideNoteFontSize: { pct: 5, unit: "vmin" },
          topicSlideCalloutFontSize: { pct: 6, unit: "vmin" },
          topicSlideLeftTitleGroupWidth: { pct: 31.5, unit: "vmax" },
          topicSlideLeftTitleFontSize: { pct: 16, unit: "vmin" },
          topicSlideLeftTitleGroupRightPadding: { pct: 14, unit: "vmin" },
          topicSlideRightContentHorizontalPadding: { pct: 8.2, unit: "vmin" },
          imageTopicSlideSmallImageDefiningWidth: 400,
          imageTopicSlideHLayoutImageZoneWidth: { pct: 700 / 15, unit: "vw" },
          imageTopicSlideHLayoutImageZoneWidthForSmallImage: {
            pct: 20,
            unit: "vw",
          },
          imageTopicSlideHLayoutSpacingAroundImage: {
            pct: 100 / 15,
            unit: "vw",
          },
          imageTopicSlideHLayoutTitleFontSizeLarge: { pct: 10, unit: "vmin" },
          imageTopicSlideHLayoutTitleFontSizeMedium: { pct: 8, unit: "vmin" },
          imageTopicSlideHLayoutTitleFontSizeSmall: { pct: 7, unit: "vmin" },
          imageTopicSlideVLayoutImageZoneHeight: { pct: 62.5, unit: "vh" },
          imageTopicSlideVLayoutImageZoneHeightForSmallImage: {
            pct: 25,
            unit: "vh",
          },
          imageTopicSlideVLayoutTitleFontSizeLarge: { pct: 14, unit: "vmin" },
          imageTopicSlideVLayoutTitleFontSizeMedium: { pct: 8, unit: "vmin" },
          imageTopicSlideVLayoutTitleFontSizeSmall: { pct: 7, unit: "vmin" },
          headerZoneWidth: { pct: 20, unit: "vmax" },
          headerZoneCompactWidth: { pct: 10, unit: "vmax" },
          headerZoneHeight: { pct: 4, unit: "vmin" },
          headerTextTopMargin: { pct: 5, unit: "vmin" },
          headerTextFontSize: { pct: 4, unit: "vmin" },
          headerTextLeftMargin: { pct: 100 / 15, unit: "vmin" },
          headerImagePlaceHolderTopMargin: { pct: 4, unit: "vmin" },
          headerMarkerRightMargin: { pct: 0.375, unit: "vmin" },
          headerLineTopMargin: { pct: 1, unit: "vmin" },
          headerLineLength: { pct: 5, unit: "vmin" },
          headerLineWidth: 4,
          braceListSlideParentTopicMaxFontSize: { pct: 14, unit: "vmin" },
          braceListSlideParentTopicMinFontSize: { pct: 11, unit: "vmin" },
          braceListSlideParentTopicZoneWidthRatio: 0.3,
          braceListSlideParentTopicRightPadding: { pct: 0, unit: "vmin" },
          braceListSlideParentTopicMaxLineCount: 5,
          braceListSlideParentTopicPreferredLineCount: 2,
          braceListSlideSubtopicMaxFontSize: { pct: 8, unit: "vmin" },
          braceListSlideSubtopicMinFontSize: { pct: 7, unit: "vmin" },
          braceListSlideScrollFaderHeight: { pct: 12.5, unit: "vh" },
          braceListSlideSubtopicListLeftPadding: 0,
          braceListSlideSubtopicListRightPadding: {
            pct: 100 / 15,
            unit: "vmin",
          },
          braceListSlideSubtopicMinWidth: 0,
          braceListSlideBraceShapeGroupMaxWidth: { pct: 10.6, unit: "vmin" },
          braceListSlideBraceShapeLineWidth: 8,
          braceListSlidePreferredSingleLineSubtopicsCount: 5,
          braceListSlideCentralTopicPreferredSingleLineSubtopicsCount: 5,
          bulletListSlideParentTopicMaxFontSize: { pct: 14, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 14, unit: "vmin" },
          bulletListSlideSubtopicMaxFontSize: { pct: 7.3, unit: "vmin" },
          bulletListSlideSubtopicMinFontSize: { pct: 6.4, unit: "vmin" },
          bulletListSlideContentLeftPadding: 0,
          bulletListSlideBulletDotSizeRatio: 0.3,
          bulletListSlideBulletDotStrokeLineWidth: 0,
          bulletListSlideBulletDotRightMargin: { pct: 2, unit: "vmin" },
          bulletListSlideParentTopicBottomMargin: { pct: 5, unit: "vmin" },
          bulletListSlideCentralTopicParentTopicBottomMargin: {
            pct: 5,
            unit: "vmin",
          },
          bulletListSlideSubtopicSpacing: { pct: 13, unit: "vmin" },
          bulletListSlideCentralTopicSubtopicSpacing: { pct: 13, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 14, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 14, unit: "vmin" },
          lyricListSlideParentTopicIndicatorLineWidth: 2,
          lyricListSlideParentTopicIndicatorTopMargin: { pct: 5, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 7.3, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 6.4, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 7.3, unit: "vmin" },
          lyricListSlideContentLeftPadding: 0,
          lyricListSlideContentBottomPadding: { pct: 12.5, unit: "vh" },
          lyricListSlideParentTopicBottomMargin: { pct: 5, unit: "vmin" },
          lyricListSlideCentralTopicParentTopicBottomMargin: {
            pct: 5,
            unit: "vmin",
          },
          lyricListSlideCurrentSubtopicOffsetRatio: 0.5,
          lyricListSlideSubtopicListLeftPadding: { pct: 100 / 15, unit: "vw" },
          lyricListSlideSubtopicSpacing: { pct: 11, unit: "vmin" },
          lyricListSlideCentralTopicSubtopicSpacing: { pct: 11, unit: "vmin" },
          treeChartSlideParentTopicMaxFontSize: { pct: 14, unit: "vmin" },
          treeChartSlideParentTopicMinFontSize: { pct: 11, unit: "vmin" },
          treeChartSlideSubtopicMaxFontSize: { pct: 7.3, unit: "vmin" },
          treeChartSlideSubtopicMinFontSize: { pct: 6.4, unit: "vmin" },
          treeChartSlideParentTopicMaxLineCount: 2,
          treeChartSlideParentTopicBottomMargin: { pct: 2, unit: "vmin" },
          treeChartSlideTreeBranchRightMargin: { pct: 2, unit: "vmin" },
          treeChartSlideTreeBranchLeftMarginRatio: 1 / 6,
          treeChartSlideTreeBranchWidthRatio: 1 / 12,
          treeChartSlideTreeBranchStrokeWidth: 8,
          treeChartSlideSubtopicIndicatorLength: { pct: 5.3, unit: "vmin" },
          treeChartSlideSubtopicIndicatorLeftMargin: { pct: 3.3, unit: "vmin" },
          summarySlideTopicMaxFontSize: { pct: 14, unit: "vmin" },
          summarySlideTopicMinFontSize: { pct: 8, unit: "vmin" },
          summarySlideTopicMarkerRightMargin: { pct: 1.2, unit: "vmin" },
          summarySlideSubtopicFontSize: { pct: 7.3, unit: "vmin" },
          summarySlideSubtopicMarkerRightMargin: { pct: 1.2, unit: "vmin" },
          summarySlideLineHeight: { pct: 3.125, unit: "vh" },
          summarySlideLineStrokeWidth: 4,
          summaryScrollFaderHeight: { pct: 25, unit: "vh" },
          lyricListSlideArrowWidth: 46,
          lyricListSlideArrowHeight: 36,
          lyricListSlideArrowCornerRadius: 4,
          onlyChildSlideSubtopicMaxFontSize: { pct: 8, unit: "vmin" },
          onlyChildSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
          onlyChildSlideSeparatorLineWidth: 4,
          fishboneSlideParentTopicMaxFontSize: { pct: 10, unit: "vmin" },
          fishboneSlideParentTopicMinFontSize: { pct: 8, unit: "vmin" },
          fishboneSlideParentTopicTitleMaxWidth: { pct: 32, unit: "vmax" },
          fishboneSlideParentTopicAreaWidth: { pct: 62.22, unit: "vmin" },
          fishboneSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          fishboneSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          fishboneSlideSubtopicTitleMaxWidth: { pct: 50, unit: "vmin" },
          fishboneSlideFishboneLineWidth: 6,
          fishboneSlideFishboneHeadLineWidth: 4,
          fishboneSlideFishboneHeadLength: { pct: 21, unit: "vmin" },
          fishboneSlideFishboneHeadAngle: 35,
          fishboneSlideFishboneHeadInterval: { pct: 66, unit: "vmin" },
          fishboneSlideFishboneHeadSpacing: { pct: 16, unit: "vmin" },
          fishboneHeadSlideParentTopicDefaultFontSize: {
            pct: 10,
            unit: "vmin",
          },
          fishboneHeadSlideSubtopicGroupTrailingOffset: {
            pct: 22.5,
            unit: "vmin",
          },
          fishboneHeadSlideSubtopicTitleLeftMargin: { pct: 9, unit: "vmin" },
          fishboneHeadSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          fishboneHeadSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          fishboneHeadSlideSubtopicLeadingLineWidth: 4,
          fishboneHeadSlideFishboneHeadLength: { pct: 80, unit: "vmin" },
          fishboneHeadSlideFishboneHeadInterval: { pct: 200, unit: "vmin" },
          fishboneHeadSlideFishboneHeadLeftOffset: { pct: 21.44, unit: "vmin" },
          fishboneHeadSlideFishboneHeadAngle: 20,
          timelineSlideParentTopicMaxFontSize: { pct: 10, unit: "vmin" },
          timelineSlideParentTopicMinFontSize: { pct: 8, unit: "vmin" },
          timelineSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          timelineSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          timelineSlideSubtopicTitleMaxWidth: { pct: 48.67, unit: "vmin" },
          timelineSlideVerticalLineInterval: { pct: 11.56, unit: "vmin" },
          timelineSlideVerticalLineSpacing: { pct: 5.67, unit: "vmin" },
          timelineSlideVerticalLineEdgeCompensationLength: 0,
          timelineHeadSlideSubtopicTitleLeftMargin: { pct: 12, unit: "vmin" },
          timelineHeadSlideTimePointRadius: 10,
          maxMarkerCount: 3,
          hitRegionHPadding: { pct: 1, unit: "vmin" },
          hitRegionVPadding: { pct: 1, unit: "vmin" },
          bottomCenterWatermarkVerticalMargin: { pct: 25, unit: "vmin" },
          bottomEdgeWatermarkVerticalMargin: { pct: 5, unit: "vmin" },
          bottomEdgeWatermarkHorizontalMargin: { pct: 100 / 15, unit: "vw" },
          verticalWatermarkVerticalMargin: { pct: 12.5, unit: "vmin" },
          verticalWatermarkHorizontalMargin: { pct: 100 / 45, unit: "vw" },
        });
    },
    91199: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__createBinding) ||
          (Object.create
            ? function (t, e, i, n) {
                void 0 === n && (n = i),
                  Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                      return e[i];
                    },
                  });
              }
            : function (t, e, i, n) {
                void 0 === n && (n = i), (t[n] = e[i]);
              }),
        o =
          (this && this.__exportStar) ||
          function (t, e) {
            for (var i in t)
              "default" === i ||
                Object.prototype.hasOwnProperty.call(e, i) ||
                n(e, t, i);
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.handDrawnTheme =
          e.midnightRoseTheme =
          e.hubbleBubbleTheme =
          e.shapeForYouTheme =
          e.innocenceTheme =
          e.lightTheme =
          e.defaultTheme =
          e.dimensionOf =
          e.appearanceOf =
          e.appearanceIdOf =
          e.computeTheme =
            void 0);
      const l = i(6776),
        r = i(90674);
      Object.defineProperty(e, "defaultTheme", {
        enumerable: !0,
        get: function () {
          return r.defaultTheme;
        },
      });
      const a = i(54021);
      Object.defineProperty(e, "lightTheme", {
        enumerable: !0,
        get: function () {
          return a.lightTheme;
        },
      });
      const s = i(3322);
      Object.defineProperty(e, "innocenceTheme", {
        enumerable: !0,
        get: function () {
          return s.innocenceTheme;
        },
      });
      const c = i(51730);
      Object.defineProperty(e, "shapeForYouTheme", {
        enumerable: !0,
        get: function () {
          return c.shapeForYouTheme;
        },
      });
      const d = i(97456);
      Object.defineProperty(e, "hubbleBubbleTheme", {
        enumerable: !0,
        get: function () {
          return d.hubbleBubbleTheme;
        },
      });
      const u = i(52357);
      Object.defineProperty(e, "handDrawnTheme", {
        enumerable: !0,
        get: function () {
          return u.handDrawnTheme;
        },
      });
      const p = i(73808);
      Object.defineProperty(e, "midnightRoseTheme", {
        enumerable: !0,
        get: function () {
          return p.midnightRoseTheme;
        },
      }),
        o(i(4069), e);
      const h = {
          default: r.defaultTheme,
          light: a.lightTheme,
          innocence: s.innocenceTheme,
          "shape-for-you": c.shapeForYouTheme,
          "hubble-bubble": d.hubbleBubbleTheme,
          "midnight-rose": p.midnightRoseTheme,
          "hand-drawn": u.handDrawnTheme,
        },
        g = {
          innocence: { zh: s.innocenceZhBoxStyles },
          "midnight-rose": { zh: p.midnightRoseZhBoxStyles },
        };
      (e.computeTheme = function (t, e) {
        var i, n;
        const o = h[t],
          l = g[t];
        return (
          l &&
            (o.boxStyles = Object.assign(
              Object.assign(
                {},
                null !== (i = o.boxStyles) && void 0 !== i ? i : {},
              ),
              null !== (n = l[e]) && void 0 !== n ? n : {},
            )),
          o
        );
      }),
        (e.appearanceIdOf = function (t) {
          return Object.keys(h).find((e) => h[e] === t);
        }),
        (e.appearanceOf = function (t) {
          return t;
        }),
        (e.dimensionOf = function (t, e) {
          var i;
          return t.dimension[
            null !==
              (i = (function (t) {
                let e = null,
                  i = null;
                return (
                  Object.keys(l.slideSizes).forEach((n) => {
                    const { width: o, height: r } = l.slideSizes[n],
                      a = Math.abs(o / r - t.width / t.height);
                    (null === e || e > a) && ((e = a), (i = n));
                  }),
                  i
                );
              })(e)) && void 0 !== i
              ? i
              : "16:9"
          ];
        });
    },
    90674: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.defaultTheme = void 0);
      const n = i(91389),
        o = i(77474),
        l = i(4069);
      e.defaultTheme = {
        slideStyles: {
          slide: {
            opacity: 1,
            backgroundColor: "#000",
            backgroundOpacity: 1,
            foregroundColor: "white",
            watermarkColor: "white",
            hitRegionFillColor: "rgba(196, 196, 196, 0.12)",
            hitRegionActiveFillColor: "rgba(196, 196, 196, 0.3)",
            hitRegionBoxShadow: "0px 1px 21px -7px rgba(0, 0, 0, 0.25)",
            hitRegionStrokeColor: "rgba(185, 185, 185, 0.1)",
            hitRegionCornerRadius: 18,
            hitRegionLineWidth: 1,
            hitRegionHighlightTextColor: "#0A84FF",
            opacityForPendingSubtopicsUnderPresenterPerspectiveMode: 0.3,
          },
        },
        boxStyles: {
          box: { opacity: 1, transform: "none" },
          "box.text": {
            fontFamily: [
              "SF Pro Display",
              "-apple-system",
              "Helvetica Neue",
              "Helvetica",
              "Arial",
              "PingFang SC",
              "Microsoft YaHei",
              "sans-serif",
            ],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "normal",
            fontStyle: "normal",
            textColor: "#fff",
            textAlignment: "leading",
          },
          "box.shape": { lineWidth: 1, lineCap: "round" },
          "box.headerLine": { strokeColor: "#fff", lineCap: "round" },
          "box.labelBorder": { strokeColor: "#fff", lineWidth: 2 },
          "box.note": { fontWeight: "normal", opacity: 0.8 },
          "box.callout": {
            fontWeight: "normal",
            fontStyle: "italic",
            opacity: 0.6,
          },
          "box.svg-template.hyperlink": { borderWidth: 2, borderRadius: 4 },
          "slide.layout-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "center",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide.image-placement-full box.text": {
            textShadow: "0 0 8px rgba(0, 0, 0, 0.3)",
          },
          "slide.layout-brace-list box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-brace-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-brace-list box.curlyBrace": {
            strokeColor: "#fff",
            lineWidth: 8,
            lineCap: "round",
          },
          "slide.layout-bullet-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-bullet-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-bullet-list box.bulletDot": { fillColor: "#fff" },
          "slide.layout-lyric-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-lyric-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-lyric-list box.arrow": { fillColor: "#fff" },
          "slide.layout-tree-chart box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
          },
          "slide.layout-tree-chart box.treeBranch": {
            strokeColor: "#fff",
            lineWidth: 8,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-summary box.curlyBrace": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-scrollable-summary box.curlyBrace": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-scrollable-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-only-child box.title": {
            fontSize: "82px",
            fontWeight: "bold",
          },
          "slide.layout-only-child box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-only-child box.separatorLine": {
            strokeColor: "#fff",
            lineCap: "round",
          },
          "slide.layout-fishbone box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-fishbone box.fishboneHead": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
          },
          "slide.layout-fishbone box.fishbone": {
            strokeColor: "#fff",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone-head box.fishbone": {
            strokeColor: "#fff",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHead": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHeadSubtopicLeadingLine": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-timeline box.timelineMain": {
            strokeColor: "#fff",
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-timeline box.timelineVertical": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.timelineTimePoint": { fillColor: "#fff" },
          "slide.layout-timeline-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline-head box.timelineMain": {
            strokeColor: "#fff",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineVertical": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineTimePoint": {
            fillColor: "#fff",
          },
          "slide.layout-timeline-head box.timelineSubtopicLeadingLine": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-imageable-parent-slide box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-imageable-children-slide box.title": {
            fontWeight: "bold",
          },
          "slide.layout-imageable-list-slide box.title": {
            opacity: 0.7,
            filter: "blur(50px)",
          },
          "slide.layout-only-child-imageable-parent box.separatorLine": {
            strokeColor: "#fff",
            lineCap: "round",
          },
          "slide.layout-only-imageable-child  box.title": {
            fontWeight: "bold",
          },
          "slide.layout-only-imageable-child box.separatorLine": {
            strokeColor: "#fff",
            lineCap: "round",
          },
        },
        dimension: {
          "16:9": n.defaultDimension,
          "4:3": l.inheritDimension(n.defaultDimension, {
            fishboneSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            fishboneSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            fishboneSlideFishboneHeadInterval: { pct: 47, unit: "vmin" },
            fishboneSlideFishboneHeadSpacing: { pct: 9, unit: "vmin" },
            fishboneSlideParentTopicTitleMaxWidth: { pct: 30, unit: "vw" },
            fishboneSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            timelineSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            timelineSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideVerticalLineSpacing: { pct: 3.1, unit: "vmin" },
            timelineSlideVerticalLineInterval: { pct: 16, unit: "vmin" },
          }),
          "9:16": o.portraitDimension,
          "3:4": o.portraitDimension,
        },
      };
    },
    52357: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.handDrawnTheme = void 0);
      const n = i(91389),
        o = i(77474),
        l = i(4069),
        r = "#2F4DB5",
        a = {
          content:
            '<svg width="1600" height="900" viewBox="0 0 1600 900" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M15 23L790.75 23.5L1569 32L1562 856.5H1449L803 874L38 862.5L29.5 43" stroke="#2F4DB5" stroke-width="42"/>\n    </svg>',
          clipPath:
            "M46.6601 43.2613C46.4351 45.0106 46.2083 47.0022 45.9844 49.2488C45.2307 56.8126 44.5774 66.5015 44.0223 78.0817C42.9129 101.227 42.2168 131.469 41.8437 166.47C41.0979 236.448 41.6468 325.025 42.7125 413.015C44.1409 530.964 46.5049 648.138 47.9032 717.454C48.5869 751.341 49.0398 773.789 49.0398 779.298C49.0398 791.977 47.8518 804.715 46.8236 815.74C46.4431 819.82 46.0845 823.665 45.8161 827.186C45.2965 834.002 45.0911 839.65 45.4222 844.291C45.547 846.041 45.7403 847.51 45.9759 848.739C48.0272 848.99 50.6349 849.254 53.8286 849.523C63.6418 850.348 77.9771 851.142 96.3146 851.894C132.937 853.396 184.933 854.707 247.329 855.8C372.093 857.986 538.131 859.298 705.246 859.548C872.363 859.798 1040.49 858.985 1169.43 856.924C1233.91 855.894 1288.51 854.552 1328.26 852.879C1348.15 852.042 1364.2 851.127 1375.85 850.138C1381.7 849.643 1386.28 849.142 1389.63 848.647C1392.07 848.287 1393.32 847.998 1393.79 847.89C1394.07 847.826 1394.07 847.825 1393.89 847.909C1406.98 841.986 1424.81 840.456 1442.28 840.306C1457.94 840.172 1475.02 841.181 1490.88 842.118C1493.12 842.25 1495.33 842.38 1497.51 842.506C1515.63 843.552 1531.15 844.227 1542.08 843.134C1546.21 842.719 1548.92 842.112 1550.54 841.559C1550.56 834.339 1550.61 816.455 1550.68 790.773C1550.89 720.543 1551.26 592.003 1551.48 463.777C1551.63 372.217 1551.71 280.797 1551.59 210.803C1551.54 175.803 1551.43 146.181 1551.26 124.586C1551.17 113.784 1551.07 105.022 1550.95 98.6108C1550.89 95.4019 1550.83 92.8203 1550.77 90.8844C1550.73 89.9157 1550.7 89.1425 1550.67 88.5524C1550.66 88.2586 1550.64 88.03 1550.63 87.859C1550.62 87.7149 1550.61 87.6416 1550.61 87.6236L1550.61 87.6202C1549.8 79.9711 1550.81 72.7411 1551.7 67.0783C1551.84 66.191 1551.98 65.3517 1552.11 64.5547C1552.88 59.7177 1553.41 56.4375 1553.35 53.4104C1553.3 50.5202 1552.69 49.2072 1551.71 48.1094C1550.39 46.6458 1547.06 44.1532 1538.71 41.8468C1538.83 41.8795 1538.81 41.8767 1538.6 41.8481C1538.22 41.7964 1537.24 41.6604 1535.34 41.4958C1532.78 41.274 1529.28 41.0521 1524.82 40.8348C1515.93 40.4011 1503.6 40.0037 1488.15 39.6438C1457.27 38.9245 1414.22 38.3614 1361.83 37.9433C1257.07 37.1072 1115.17 36.8523 959.082 37.0785C651.274 37.5248 288.428 39.8424 46.6601 43.2613ZM1537.5 16.5894C1540.11 16.8163 1543.14 17.1333 1545.37 17.7498C1556.02 20.6934 1564.5 24.9508 1570.3 31.3933C1576.42 38.2018 1578.22 45.9512 1578.35 52.9358C1578.45 58.4179 1577.5 64.2497 1576.74 68.8839C1576.61 69.6167 1576.5 70.3195 1576.39 70.9863C1575.52 76.4797 1575.03 80.8746 1575.47 84.9755C1575.87 88.7079 1576.09 103.241 1576.26 124.389C1576.43 146.063 1576.54 175.746 1576.59 210.761C1576.71 280.799 1576.63 372.253 1576.48 463.819C1576.26 592.157 1575.89 720.673 1575.68 790.852C1575.6 820.844 1575.54 840.182 1575.54 844.298C1575.54 853.666 1569.78 859.818 1563.56 863.109C1557.96 866.068 1551.08 867.357 1544.57 868.009C1531.3 869.337 1513.7 868.482 1496.07 867.465C1493.84 867.336 1491.6 867.204 1489.36 867.072C1473.4 866.131 1457.24 865.179 1442.49 865.305C1425.27 865.453 1412.1 867.11 1404.19 870.687C1401.07 872.101 1396.84 872.852 1393.29 873.378C1389.21 873.981 1384.04 874.534 1377.97 875.049C1365.79 876.082 1349.33 877.015 1329.31 877.857C1289.24 879.544 1234.38 880.889 1169.83 881.921C1040.69 883.985 872.404 884.798 705.209 884.548C538.011 884.298 371.831 882.985 246.891 880.796C184.436 879.702 132.209 878.387 95.2903 876.873C76.8573 876.117 62.0926 875.306 51.7326 874.435C46.5943 874.002 42.281 873.534 39.0597 873.008C37.4979 872.752 35.8072 872.423 34.2751 871.961C33.5323 871.737 32.4208 871.363 31.2406 870.754C30.4843 870.363 27.5893 868.857 25.6645 865.461C22.2342 859.407 20.9455 852.518 20.4855 846.07C20.0197 839.539 20.3456 832.406 20.8884 825.285C21.2178 820.964 21.6225 816.629 22.0307 812.255C23.0248 801.606 24.0398 790.731 24.0398 779.298C24.0398 773.826 23.5915 751.65 22.9134 718.106C21.5188 649.117 19.1522 532.045 17.7143 413.317C16.648 325.273 16.0962 236.47 16.8452 166.204C17.2195 131.083 17.9197 100.485 19.051 76.8848C19.6162 65.092 20.2943 54.9312 21.1076 46.7698C21.8933 38.8848 22.8788 32.018 24.2892 27.317L26.9214 18.5427L36.081 18.4101C277.904 14.909 646.806 12.5312 959.045 12.0786C1115.17 11.8522 1257.15 12.1071 1362.03 12.9441C1414.46 13.3625 1457.66 13.9268 1488.73 14.6506C1504.26 15.0123 1516.83 15.4155 1526.04 15.8644C1530.64 16.0885 1534.49 16.3284 1537.5 16.5894Z",
        },
        s = {
          content:
            '<svg width="887" height="1589" viewBox="0 0 887 1589" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M2 23.5L121 26.5L458 22H736L865 32.5L855.5 1567L24.5 1559L22 43.5" stroke="#2F4DB5" stroke-width="43"/>\n  </svg>',
          clipPath:
            "M34.2407 46.101C32.4928 81.0017 31.5561 166.814 31.1898 280.03C30.778 407.286 31.0812 568.258 31.6686 728.035C32.4581 942.747 33.7615 1155.39 34.5313 1280.98C34.9068 1342.24 35.1554 1382.78 35.1554 1392.75C35.1554 1414.09 34.5806 1436.9 34.0363 1458.5C33.8009 1467.84 33.5712 1476.96 33.3961 1485.63C32.8807 1511.17 32.8705 1532.21 34.2458 1545.29C34.3419 1545.31 34.4403 1545.34 34.5411 1545.36C39.1243 1546.55 46.281 1547.73 56.0391 1548.84C75.4025 1551.04 103.159 1552.76 136.84 1554.07C204.107 1556.7 293.925 1557.65 385.055 1557.76C476.148 1557.86 568.411 1557.12 640.514 1556.35C677.191 1555.95 708.721 1555.55 732.211 1555.25C754.81 1554.97 769.967 1554.77 775.107 1554.77C784.196 1554.77 794.042 1555.92 803.01 1556.96C803.993 1557.08 804.965 1557.19 805.925 1557.3C816.109 1558.47 825.004 1559.34 832.548 1558.87C840.139 1558.41 844.346 1556.68 846.713 1554.48C848.787 1552.55 851.447 1548.35 851.447 1537.99C851.447 1530.49 851.477 1494.93 851.525 1439.7C851.796 1124.89 852.618 171.156 851.453 135.091C851.091 123.885 851.528 112.902 852.016 102.744C852.087 101.285 852.157 99.847 852.227 98.4302C852.652 89.8096 853.039 81.9538 852.997 74.625C852.902 58.1667 850.523 48.4158 845.195 42.5958C844.306 42.3778 843.013 42.1155 841.238 41.8305C836.752 41.1101 830.288 40.4145 821.877 39.7691C805.12 38.4833 781.598 37.4664 752.781 36.7089C695.201 35.1952 617.118 34.7319 531.14 35.1425C363.916 35.941 167.253 40.0429 34.2407 46.101ZM846.444 42.9673C846.438 42.9693 846.354 42.9415 846.209 42.878C846.378 42.9336 846.45 42.9653 846.444 42.9673ZM30.9194 1544.19C30.6129 1544.03 30.7072 1544.03 31.0251 1544.24C30.9789 1544.22 30.944 1544.2 30.9194 1544.19ZM852.709 18.7275C854.279 19.1761 857.903 20.2492 860.787 22.8743C875.531 36.2944 877.892 56.3081 877.997 74.4809C878.043 82.5577 877.616 91.1967 877.192 99.7628C877.123 101.159 877.054 102.554 876.988 103.944C876.503 114.038 876.113 124.159 876.44 134.284C877.622 170.865 876.794 1128.25 876.524 1441.36C876.477 1495.71 876.447 1530.64 876.447 1537.99C876.447 1552.58 872.597 1564.53 863.759 1572.77C855.212 1580.73 844.103 1583.21 834.08 1583.83C824.01 1584.45 812.993 1583.28 803.073 1582.14C802.136 1582.03 801.208 1581.92 800.289 1581.82C791.018 1580.74 782.656 1579.77 775.107 1579.77C770.082 1579.77 755.231 1579.96 732.964 1580.25C709.521 1580.54 677.856 1580.95 640.782 1581.34C568.633 1582.12 476.26 1582.86 385.026 1582.76C293.828 1582.65 203.624 1581.7 135.866 1579.06C102.035 1577.74 73.528 1575.99 53.2135 1573.68C43.1325 1572.53 34.5966 1571.2 28.3005 1569.57C25.2252 1568.78 22.0285 1567.76 19.2966 1566.32C17.4679 1565.36 11.5665 1562.09 10.3363 1554.94C7.74696 1539.89 7.82407 1513.72 8.4012 1485.13C8.58167 1476.19 8.81542 1466.92 9.0531 1457.49C9.59404 1436.03 10.1554 1413.77 10.1554 1392.75C10.1554 1382.79 9.90724 1342.33 9.53226 1281.17C8.76279 1155.69 7.45911 943.076 6.66881 728.127C6.0813 568.333 5.77786 407.293 6.18991 279.949C6.60059 153.027 7.71636 58.6656 10.0538 33.0007L11.0405 22.1669L21.9068 21.6486C155.38 15.2834 358.85 10.9649 531.021 10.1428C617.108 9.73166 695.483 10.194 753.438 11.7175C782.389 12.4786 806.404 13.5083 823.79 14.8424C832.451 15.507 839.709 16.2647 845.202 17.1467C847.926 17.5842 850.498 18.0959 852.709 18.7275Z",
        },
        c = {
          id: "curve-line",
          content:
            '<svg width="354" height="286" viewBox="0 0 354 286" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M22 197.5L83.5 81V221.5L154 81L167.5 217.5L252 97L238 202L344.5 159.5" stroke="#2F4DB5" stroke-width="49"/>\n    </svg>',
          clipPath:
            "M78.5 126.762C60.9 112.362 38.8333 156.429 30 180.262C31.1667 183.595 35.8 190.262 45 190.262C56.5 190.262 63 148.762 68.5 155.762C74 162.762 62 193.762 82 200.762C102 207.762 107 185.762 120 173.262C133 160.762 127 151.262 141 155.762C155 160.262 141 199.262 176.5 200.762C212 202.262 209 173.262 214 168.262C219 163.262 215 134.262 226 173.262C237 212.262 263.5 197.262 300.5 190.262C337.5 183.262 312 169.262 300.5 163.762C289 158.262 269 180.262 254 180.262C239 180.262 272 143.262 226 126.762C180 110.263 225 180.262 176.5 180.262C128 180.262 191.5 151.261 150.5 126.762C109.5 102.263 117 180.262 87 180.262C57 180.262 100.5 144.762 78.5 126.762Z",
        },
        d = {
          id: "fold-line",
          content:
            '<svg width="520" height="123" viewBox="0 0 520 123" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0.5 29L517 16L151.5 76.5L440.5 58L331.5 107L431.5 98.5" stroke="#2F4DB5" stroke-width="32"/>\n    </svg>',
          clipPath:
            "M22.945 37.7568C13.9891 31.5918 19.2134 21.3169 22.945 16.95C56.1436 23.1149 403.185 6.5466 409.747 4.23473C416.31 1.92286 454.913 16.95 451.824 37.7568C448.736 58.5636 265.758 56.2518 255.721 64.7286C245.684 73.2055 419.398 50.8574 419.398 64.7286C419.398 78.5998 375.004 92.8563 390.06 90.5445C405.115 88.2326 404.343 95.9388 396.622 103.645C388.902 111.351 360.721 110.195 341.42 103.645C322.118 97.0947 399.71 64.7286 396.622 64.7286C393.534 64.7286 205.151 78.9851 193.184 79.7557C181.217 80.5264 170.409 75.5173 185.464 64.7286C200.519 53.9399 472.284 30.0506 419.398 26.9681C366.512 23.8856 124.857 43.1512 103.239 37.7568C81.6216 32.3625 34.1399 45.463 22.945 37.7568Z",
        },
        u = {
          id: "right-leaf-shape",
          content:
            '<svg width="47" height="72" viewBox="0 0 47 72" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M12 5L35.5 67.5" stroke="#2F4DB5" stroke-width="24"/>\n    </svg>',
          clipPath:
            "M13.878 32.9663C7.84685 21.1798 11.2137 14.1879 19.0122 16.4112C34.7621 20.9013 37.5849 60.2966 30.7404 60.5265C23.8959 60.7565 21.4168 47.6994 13.878 32.9663Z",
        },
        p = {
          id: "middle-leaf-shape",
          content:
            '<svg width="83" height="80" viewBox="0 0 83 80" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M9 10L74.5 70" stroke="#2F4DB5" stroke-width="25"/>\n    </svg>',
          clipPath:
            "M31.6401 44.9562C16.6576 34.1729 12.5287 21.6316 22.2696 18.7532C41.9425 12.9399 74.0234 61.7675 67.0881 67.1125C60.1528 72.4575 50.3682 58.4354 31.6401 44.9562Z",
        },
        h = {
          id: "left-leaf-shape",
          content:
            '<svg width="64" height="42" viewBox="0 0 64 42" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M3 14L60.5 27.5" stroke="#2F4DB5" stroke-width="24"/>\n    </svg>',
          clipPath:
            "M23.113 27.4246C13.1539 25.4601 12.6046 15.786 17.6453 12.1465C27.8255 4.79611 52.8829 21.7991 49.772 26.0288C46.6611 30.2586 35.5618 29.8803 23.113 27.4246Z",
        },
        g = {
          id: "flower-shape",
          content:
            '<svg width="109" height="108" viewBox="0 0 109 108" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M22.7634 41.3701C3.64821 18.9416 14.0731 21.7757 23.9647 16.8728C60.8493 51.1888 65.7417 59.1858 89.2544 78.7814C108.736 95.0173 84.4086 99.231 74.9692 95.2435C65.5319 86.6309 41.8786 63.7985 22.7634 41.3701Z" fill="#2F4DB5"/>\n    <path d="M33.3622 88.6508C10.0625 106.694 13.3821 96.4132 8.9482 86.3027C44.955 51.0669 53.1725 46.5546 73.8485 23.9861C90.9795 5.28692 94.0486 29.7849 89.623 39.0271C80.5776 48.0504 56.6618 70.6077 33.3622 88.6508Z" fill="#2F4DB5"/>\n    <path d="M20.5705 67.243C-8.74845 64.2724 0.739785 59.1067 4.49025 48.7233C54.864 47.9842 63.9291 50.3739 94.4636 48.2566C119.763 46.5024 105.112 66.3751 95.5375 70.0262C82.7647 70.3363 49.8895 70.2136 20.5705 67.243Z" fill="#2F4DB5"/>\n    <path d="M67.6002 86.0008C67.9678 115.468 61.7612 106.625 51.0199 104.074C44.5829 54.1081 45.931 44.8307 40.3706 14.7322C35.7635 -10.2058 57.1671 2.10106 61.8787 11.2008C63.6327 23.8563 67.2326 56.5341 67.6002 86.0008Z" fill="#2F4DB5"/>\n    </svg>',
        },
        f = l.inheritDimension(n.defaultDimension, {
          braceListSlideParentTopicMaxFontSize: { pct: 9, unit: "vmin" },
          braceListSlideSubtopicMinFontSize: { pct: 5, unit: "vmin" },
          braceListSlideSubtopicListLeftPadding: { pct: 3.45, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          lyricListSlideContentLeftPadding: { pct: 2.5, unit: "vw" },
          lyricListSlideArrowWidth: 82,
          lyricListSlideArrowHeight: 55,
          fishboneSlideParentTopicMaxFontSize: { pct: 7, unit: "vmin" },
          fishboneSlideParentTopicMinFontSize: { pct: 6, unit: "vmin" },
          fishboneSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          fishboneSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          fishboneSlideFishboneLineWidth: 15,
          fishboneSlideFishboneHeadLineWidth: 13,
          timelineSlideParentTopicMaxFontSize: { pct: 7, unit: "vmin" },
          timelineSlideParentTopicMinFontSize: { pct: 6, unit: "vmin" },
          timelineSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          timelineSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          timelineSlideVerticalLineEdgeCompensationLength: 5,
          timelineHeadSlideTimePointRadius: 15,
          topicSlideTitleFontSizeMedium: { pct: 10, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 6, unit: "vmin" },
          verticalWatermarkHorizontalMargin: { pct: 4, unit: "vw" },
          verticalWatermarkVerticalMargin: { pct: 100 / 12, unit: "vmin" },
          headerTextTopMargin: { pct: 6, unit: "vmin" },
          headerTextLeftMargin: { pct: 7, unit: "vmin" },
          headerImagePlaceHolderTopMargin: { pct: 4.5, unit: "vmin" },
        }),
        m = l.inheritDimension(o.portraitDimension, {
          treeChartSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          treeChartSlideParentTopicMinFontSize: { pct: 10, unit: "vmin" },
          treeChartSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          treeChartSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          bulletListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          lyricListSlideContentLeftPadding: { pct: 4, unit: "vw" },
          lyricListSlideSubtopicListLeftPadding: { pct: 10, unit: "vw" },
          headerTextTopMargin: { pct: 6.67, unit: "vmin" },
          headerImagePlaceHolderTopMargin: { pct: 5, unit: "vmin" },
        });
      e.handDrawnTheme = {
        slideStyles: {
          slide: {
            opacity: 1,
            backgroundColor: "#EDF4E5",
            backgroundOpacity: 1,
            foregroundColor: r,
            hitRegionFillColor: "rgba(196, 196, 196, 0.12)",
            hitRegionActiveFillColor: "rgba(196, 196, 196, 0.3)",
            hitRegionBoxShadow: "0px 1px 21px -7px rgba(0, 0, 0, 0.15)",
            hitRegionStrokeColor: "rgba(185, 185, 185, 0.1)",
            hitRegionLineWidth: 1,
            hitRegionCornerRadius: 18,
            hitRegionHighlightTextColor: "#007AFF",
            opacityForPendingSubtopicsUnderPresenterPerspectiveMode: 0.2,
            braceCurveShapeStyle: "hand-drawn",
            braceParentTopicIndicatorShapeStyle: "underline",
            bulletDotShapeStyle: "hand-drawn",
            lyricArrowShapeStyle: "hand-drawn",
            timelineTimePointShapeStyle: "hand-drawn",
            fitInPageTopicAddedBackgroundShapeTemplates: [
              {
                id: c.id,
                styles: {
                  "16:9": {
                    content: c.content,
                    clipPath: c.clipPath,
                    translate: { x: 1216, y: -50 },
                  },
                  "4:3": {
                    content: c.content,
                    clipPath: c.clipPath,
                    translate: { x: 816, y: -50 },
                  },
                  "9:16": {
                    content: c.content,
                    clipPath: c.clipPath,
                    translate: { x: 516, y: -50 },
                  },
                },
              },
              {
                id: d.id,
                styles: {
                  "16:9": {
                    content: d.content,
                    clipPath: d.clipPath,
                    relativePosition: {
                      referenceBoxRole: "contentGroup",
                      referenceAnchor: { x: "right", y: "bottom" },
                    },
                    translate: { x: -525, y: -60 },
                  },
                  "9:16": {
                    content: d.content,
                    clipPath: d.clipPath,
                    relativePosition: {
                      referenceBoxRole: "contentGroup",
                      referenceAnchor: { x: "right", y: "bottom" },
                    },
                    translate: { x: -525, y: -160 },
                  },
                },
              },
              {
                id: g.id,
                styles: {
                  "16:9": { content: g.content, translate: { x: 137, y: 671 } },
                  "4:3": { content: g.content, translate: { x: 87, y: 672 } },
                  "9:16": { content: g.content, translate: { x: 67, y: 1400 } },
                  "3:4": { content: g.content, translate: { x: 67, y: 1e3 } },
                },
              },
              {
                id: u.id,
                styles: {
                  "16:9": {
                    content: u.content,
                    clipPath: u.clipPath,
                    relativePosition: {
                      referenceBoxRole: "title",
                      referenceAnchor: { x: "left", y: "top" },
                    },
                    translate: { x: 30, y: -110 },
                  },
                },
              },
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    clipPath: p.clipPath,
                    relativePosition: {
                      referenceBoxRole: "title",
                      referenceAnchor: { x: "left", y: "top" },
                    },
                    translate: { x: -10, y: -90 },
                  },
                },
              },
              {
                id: h.id,
                styles: {
                  "16:9": {
                    content: h.content,
                    clipPath: h.clipPath,
                    relativePosition: {
                      referenceBoxRole: "title",
                      referenceAnchor: { x: "left", y: "top" },
                    },
                    translate: { x: -15, y: -40 },
                  },
                },
              },
            ],
            backgroundShapeLaunchEffect: "stroke-offset",
            contentClipPath: "inset(30px)",
            backgroundShapeTemplates: [
              {
                id: "frame-shape",
                styles: {
                  "16:9": {
                    content: a.content,
                    clipPath: a.clipPath,
                    translate: { x: 0, y: 0 },
                    scale: { x: 1, y: 1 },
                    elevation: "background",
                  },
                  "4:3": {
                    content: a.content,
                    clipPath: a.clipPath,
                    translate: { x: -200, y: 0 },
                    scale: { x: 0.75, y: 1 },
                    elevation: "background",
                  },
                  "9:16": {
                    content: s.content,
                    clipPath: s.clipPath,
                    translate: { x: 8, y: 0 },
                    scale: { x: 1, y: 1 },
                    elevation: "background",
                  },
                  "3:4": {
                    content: s.content,
                    clipPath: s.clipPath,
                    translate: { x: 8, y: -200 },
                    scale: { x: 1, y: 0.75 },
                    elevation: "background",
                  },
                },
              },
            ],
          },
        },
        boxStyles: {
          box: { opacity: 1, transform: "none" },
          "box.text": {
            fontFamily: ["NeverMind Handwriting", "XiaolaiSC", "sans-serif"],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "normal",
            fontStyle: "normal",
            textColor: "#2F4DB5",
            textAlignment: "leading",
          },
          "box.shape": { lineWidth: 1, lineCap: "round", rough: !0 },
          "box.headerLine": { strokeColor: r, lineCap: "round" },
          "box.labelBorder": { strokeColor: r, lineWidth: 2 },
          "box.note": { fontWeight: "normal", opacity: 0.8 },
          "box.callout": {
            fontWeight: "normal",
            fontStyle: "italic",
            opacity: 0.6,
          },
          "box.svg-template.hyperlink": { borderWidth: 2, borderRadius: 4 },
          "slide.layout-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "center",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide.image-placement-full box.text": {
            textShadow: "0 0 8px rgba(0, 0, 0, 0.3)",
          },
          "slide.layout-brace-list box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-brace-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-brace-list box.curlyBrace": {
            strokeColor: r,
            lineWidth: 29,
            rough: !1,
          },
          "slide.layout-brace-list box.primaryIndicator": {
            strokeColor: r,
            lineWidth: 29,
            rough: !1,
          },
          "slide.layout-lyric-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-lyric-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-lyric-list box.arrow": {
            strokeColor: r,
            lineWidth: 62,
            rough: !1,
          },
          "slide.layout-bullet-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-bullet-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-bullet-list box.bulletDot": { fillColor: r },
          "slide.layout-tree-chart box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
          },
          "slide.layout-tree-chart box.treeBranch": {
            strokeColor: r,
            lineWidth: 8,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-summary box.curlyBrace": {
            strokeColor: r,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-scrollable-summary box.curlyBrace": {
            strokeColor: r,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-scrollable-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-only-child box.title": {
            fontSize: "82px",
            fontWeight: "bold",
          },
          "slide.layout-only-child box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-only-child box.separatorLine": {
            strokeColor: r,
            lineCap: "round",
          },
          "slide.layout-fishbone box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-fishbone box.fishboneHead": {
            strokeColor: r,
            lineWidth: 13,
            lineCap: "round",
            rough: !1,
          },
          "slide.layout-fishbone box.fishbone": {
            strokeColor: r,
            lineWidth: 15,
            lineCap: "round",
            lineJoin: "round",
            rough: !1,
          },
          "slide.layout-fishbone-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone-head box.fishbone": {
            strokeColor: r,
            lineWidth: 15,
            lineCap: "round",
            lineJoin: "round",
            rough: !1,
          },
          "slide.layout-fishbone-head box.fishboneHead": {
            strokeColor: r,
            lineWidth: 13,
            lineCap: "round",
            lineJoin: "round",
            rough: !1,
          },
          "slide.layout-fishbone-head box.fishboneHeadSubtopicLeadingLine": {
            strokeColor: r,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-timeline box.timelineMain": {
            strokeColor: r,
            lineWidth: 15,
            lineCap: "round",
            rough: !1,
          },
          "slide.layout-timeline box.timelineVertical": {
            strokeColor: r,
            lineWidth: 13,
            lineCap: "round",
            lineJoin: "round",
            rough: !1,
          },
          "slide.layout-timeline box.timelineTimePoint": { fillColor: r },
          "slide.layout-timeline-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline-head box.timelineMain": {
            strokeColor: r,
            lineWidth: 15,
            lineCap: "round",
            lineJoin: "round",
            rough: !1,
          },
          "slide.layout-timeline-head box.timelineVertical": {
            strokeColor: r,
            lineWidth: 13,
            lineCap: "round",
            lineJoin: "round",
            rough: !1,
          },
          "slide.layout-timeline-head box.timelineTimePoint": { fillColor: r },
          "slide.layout-timeline-head box.timelineSubtopicLeadingLine": {
            strokeColor: r,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-imageable-parent-slide box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-imageable-children-slide box.title": {
            fontWeight: "bold",
          },
          "slide.layout-imageable-list-slide box.title": {
            opacity: 0.5,
            filter: "blur(50px)",
          },
          "slide.layout-only-child-imageable-parent box.separatorLine": {
            strokeColor: r,
            lineCap: "round",
          },
          "slide.layout-only-imageable-child  box.title": {
            fontWeight: "bold",
          },
          "slide.layout-only-imageable-child box.separatorLine": {
            strokeColor: r,
            lineCap: "round",
          },
        },
        dimension: {
          "16:9": f,
          "4:3": l.inheritDimension(f, {
            fishboneSlideParentTopicMaxFontSize: { pct: 6.2, unit: "vmin" },
            fishboneSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            fishboneSlideFishboneHeadInterval: { pct: 47, unit: "vmin" },
            fishboneSlideFishboneHeadSpacing: { pct: 9, unit: "vmin" },
            fishboneSlideParentTopicTitleMaxWidth: { pct: 30, unit: "vw" },
            fishboneSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideParentTopicMaxFontSize: { pct: 6.2, unit: "vmin" },
            timelineSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            timelineSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideVerticalLineSpacing: { pct: 3.1, unit: "vmin" },
            timelineSlideVerticalLineInterval: { pct: 16, unit: "vmin" },
          }),
          "9:16": m,
          "3:4": m,
        },
      };
    },
    97456: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.hubbleBubbleTheme = void 0);
      const n = i(4069),
        o = i(96486),
        l = i(91389),
        r = i(77474),
        a = "#279452",
        s = "#FDFF8C",
        c = "easeOutElastic(1, 1.5)",
        d = "bouncing",
        u = {
          id: "yellowLargeBubble",
          content:
            '<svg width="759" height="760" viewBox="0 0 759 760" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <circle opacity="0.8" cx="379.5" cy="380.005" r="375" fill="url(#paint0_linear_1015_437)" stroke="#F0F35A" stroke-width="9"/>\n    <defs>\n    <linearGradient id="paint0_linear_1015_437" x1="659.791" y1="117.582" x2="49.071" y2="555.22" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#F0F35A" stop-opacity="0.5"/>\n    <stop offset="1" stop-color="#48C279" stop-opacity="0"/>\n    </linearGradient>\n    </defs>\n    </svg>',
        },
        p = {
          id: "yellowLittleBubble",
          content:
            '<svg width="288" height="288" viewBox="0 0 288 288" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M279 144.005C279 218.258 218.588 278.505 144 278.505C69.412 278.505 9 218.258 9 144.005C9 69.7521 69.412 9.50488 144 9.50488C218.588 9.50488 279 69.7521 279 144.005ZM288 144.005C288 223.258 223.529 287.505 144 287.505C64.471 287.505 0 223.258 0 144.005C0 64.752 64.471 0.504883 144 0.504883C223.529 0.504883 288 64.752 288 144.005ZM157.787 260.43L157.803 260.428L158.398 265.49L158.381 265.492C155.397 265.843 152.409 266.082 149.421 266.212C128.834 267.107 108.301 262.791 89.7504 253.6C71.1994 244.409 55.3273 230.686 43.5676 213.765C41.8669 211.318 40.2522 208.804 38.7279 206.227L38.7035 206.186L43.0918 203.592L43.1028 203.611C54.6652 223.167 71.6563 238.946 92.0135 249.032C112.372 259.119 135.221 263.079 157.787 260.43Z" fill="#F0F35A"/>\n    </svg>',
        },
        h = {
          id: "whiteLargeBubble",
          content:
            '<svg width="605" height="605" viewBox="0 0 605 605" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M214.504 13.9963C373.84 -34.6027 542.405 55.1677 591.004 214.504C639.603 373.84 549.833 542.405 390.497 591.004C231.16 639.603 62.5952 549.833 13.9963 390.497C-34.6027 231.16 55.1677 62.5952 214.504 13.9963Z" fill="url(#paint0_linear_1150_455)"/>\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M582.396 217.13C535.247 62.5477 371.712 -24.5441 217.13 22.6047C62.5477 69.7536 -24.5441 233.289 22.6047 387.871C69.7536 542.453 233.289 629.545 387.871 582.396C542.453 535.247 629.545 371.712 582.396 217.13ZM591.004 214.504C542.405 55.1677 373.84 -34.6027 214.504 13.9963C55.1677 62.5952 -34.6027 231.16 13.9963 390.497C62.5952 549.833 231.16 639.603 390.497 591.004C549.833 542.405 639.603 373.84 591.004 214.504Z" fill="url(#paint1_linear_1150_455)"/>\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M74.8956 213.63C75.8702 210.787 76.897 207.968 77.9752 205.171C93.4928 164.926 119.647 129.577 153.719 102.945C187.79 76.3119 228.408 59.4666 271.209 54.1257C274.183 53.7546 277.167 53.439 280.161 53.1796L281.019 63.0843C281.005 63.0856 280.991 63.0868 280.977 63.088C236.833 66.9222 194.752 83.4889 159.841 110.777C124.92 138.075 98.6765 174.926 84.3 216.854L74.8956 213.63Z" fill="#BFEDA3"/>\n    <defs>\n    <linearGradient id="paint0_linear_1150_455" x1="38.0081" y1="150.265" x2="512.32" y2="513.071" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#BADD96"/>\n    <stop offset="1" stop-color="#BADD96" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint1_linear_1150_455" x1="621.932" y1="86.5306" x2="-75.537" y2="411.341" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#BADD96"/>\n    <stop offset="1" stop-color="#BADD96" stop-opacity="0"/>\n    </linearGradient>\n    </defs>\n    </svg>',
        },
        g = {
          id: "whiteLittleBubble",
          content:
            '<svg width="304" height="304" viewBox="0 0 304 304" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M107.667 6.65087C187.941 -17.8334 272.865 27.3932 297.349 107.667C321.833 187.941 276.607 272.865 196.333 297.349C116.059 321.833 31.1352 276.607 6.65087 196.333C-17.8334 116.059 27.3932 31.1352 107.667 6.65087Z" fill="url(#paint0_linear_1150_456)"/>\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M293.012 108.99C269.258 31.1112 186.869 -12.7659 108.99 10.9878C31.1112 34.7416 -12.7659 117.131 10.9878 195.01C34.7416 272.889 117.131 316.766 195.01 293.012C272.889 269.258 316.766 186.869 293.012 108.99ZM297.349 107.667C272.865 27.3932 187.941 -17.8334 107.667 6.65087C27.3932 31.1352 -17.8334 116.059 6.65087 196.333C31.1352 276.607 116.059 321.833 196.333 297.349C276.607 272.865 321.833 187.941 297.349 107.667Z" fill="url(#paint1_linear_1150_456)"/>\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M37.3321 107.227C37.8231 105.795 38.3405 104.374 38.8836 102.965C46.7015 82.6896 59.878 64.881 77.0433 51.4633C94.2087 38.0457 114.672 29.559 136.235 26.8682C137.734 26.6812 139.237 26.5222 140.745 26.3915L141.178 31.3816C141.171 31.3822 141.164 31.3828 141.156 31.3834C118.917 33.3151 97.716 41.6615 80.128 55.4095C62.5343 69.162 49.313 87.7277 42.0701 108.851L37.3321 107.227Z" fill="#BFEDA3"/>\n    <defs>\n    <linearGradient id="paint0_linear_1150_456" x1="18.7481" y1="75.3036" x2="257.708" y2="258.086" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#BADD96"/>\n    <stop offset="1" stop-color="#BADD96" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint1_linear_1150_456" x1="312.931" y1="43.1939" x2="-38.4562" y2="206.834" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#BADD96"/>\n    <stop offset="1" stop-color="#BADD96" stop-opacity="0"/>\n    </linearGradient>\n    </defs>\n    </svg>',
        },
        f = [
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -39.8, unit: "vw" },
                    y: { pct: 50.4, unit: "vh" },
                  },
                  scale: 1.87,
                },
                "9:16": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -42.8, unit: "vw" },
                    y: { pct: 41.2, unit: "vh" },
                  },
                  scale: 1.87,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 80.4, unit: "vw" },
                    y: { pct: -27, unit: "vh" },
                  },
                  scale: 1.78,
                },
                "9:16": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 65.4, unit: "vw" },
                    y: { pct: -3.6, unit: "vh" },
                  },
                  scale: 1.78,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -2.3, unit: "vw" },
                    y: { pct: -5.8, unit: "vh" },
                  },
                  scale: 0.8,
                },
                "9:16": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -10.2, unit: "vw" },
                    y: { pct: -12.5, unit: "vh" },
                  },
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 81.4, unit: "vw" },
                    y: { pct: 81.7, unit: "vh" },
                  },
                  scale: 0.8,
                },
                "9:16": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 75.9, unit: "vw" },
                    y: { pct: 85.3, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -12.1, unit: "vw" },
                    y: { pct: -14.4, unit: "vh" },
                  },
                  scale: 0.96,
                },
                "9:16": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -8.1, unit: "vw" },
                    y: { pct: -14.4, unit: "vh" },
                  },
                  scale: 1.167,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 83.2, unit: "vw" },
                    y: { pct: 76.2, unit: "vh" },
                  },
                  scale: 1.08,
                },
                "9:16": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 83.2, unit: "vw" },
                    y: { pct: 69.2, unit: "vh" },
                  },
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  relativePosition: {
                    referenceBoxRole: "topicSecondaryContentDecorGroup",
                  },
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -14.3, unit: "vw" },
                    y: { pct: 3.3, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 89.4, unit: "vw" },
                    y: { pct: 69.2, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
          ],
        ],
        m = [
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -18.9, unit: "vw" },
                    y: { pct: -25.4, unit: "vh" },
                  },
                  scale: 1.87,
                },
                "9:16": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -49.6, unit: "vw" },
                    y: { pct: 40.8, unit: "vh" },
                  },
                  scale: 1.87,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 92.1, unit: "vw" },
                    y: { pct: -14.5, unit: "vh" },
                  },
                  scale: 1.78,
                },
                "9:16": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 82, unit: "vw" },
                    y: { pct: 13.3, unit: "vh" },
                  },
                  scale: 1.78,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -5.5, unit: "vw" },
                    y: { pct: 68.8, unit: "vh" },
                  },
                  scale: 0.8,
                },
                "9:16": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -15.5, unit: "vw" },
                    y: { pct: 68.8, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 87.1, unit: "vw" },
                    y: { pct: 83, unit: "vh" },
                  },
                  scale: 0.8,
                },
                "9:16": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 78.5, unit: "vw" },
                    y: { pct: 38, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -5.3, unit: "vw" },
                    y: { pct: 50, unit: "vh" },
                  },
                  scale: 0.96,
                },
                "9:16": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -16.3, unit: "vw" },
                    y: { pct: 62, unit: "vh" },
                  },
                  scale: 1.167,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 86, unit: "vw" },
                    y: { pct: 2.9, unit: "vh" },
                  },
                  scale: 1.08,
                },
                "9:16": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 79.9, unit: "vw" },
                    y: { pct: 2.9, unit: "vh" },
                  },
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 62.5, unit: "vw" },
                    y: { pct: 17.8, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 83.2, unit: "vw" },
                    y: { pct: 85.9, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
          ],
        ],
        b = [
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -43.3, unit: "vw" },
                    y: { pct: 40, unit: "vh" },
                  },
                  scale: 1.87,
                },
                "9:16": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 24.2, unit: "vw" },
                    y: { pct: 51.4, unit: "vh" },
                  },
                  scale: 1.87,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 70, unit: "vw" },
                    y: { pct: -13.7, unit: "vh" },
                  },
                  scale: 1.78,
                },
                "9:16": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 0, unit: "vw" },
                    y: { pct: -7, unit: "vh" },
                  },
                  scale: 1.78,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -7.3, unit: "vw" },
                    y: { pct: 55.6, unit: "vh" },
                  },
                  scale: 0.8,
                },
                "9:16": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -16.4, unit: "vw" },
                    y: { pct: 5.6, unit: "vh" },
                  },
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 84.7, unit: "vw" },
                    y: { pct: -6.2, unit: "vh" },
                  },
                  scale: 0.8,
                },
                "9:16": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 73.3, unit: "vw" },
                    y: { pct: 71.9, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -5.3, unit: "vw" },
                    y: { pct: 50, unit: "vh" },
                  },
                  scale: 0.96,
                },
                "9:16": {
                  content: h.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -11.1, unit: "vw" },
                    y: { pct: 12.5, unit: "vh" },
                  },
                  scale: 1.167,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 91, unit: "vw" },
                    y: { pct: 2.9, unit: "vh" },
                  },
                  scale: 1.08,
                },
                "9:16": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 80, unit: "vw" },
                    y: { pct: 75, unit: "vh" },
                  },
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: -100, unit: "vw" },
                    y: { pct: -100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 100, unit: "vw" },
                    y: { pct: 100, unit: "vh" },
                  },
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  privilegedAnimation: d,
                  relativePosition: {
                    referenceBoxRole: "topicSecondaryContentDecorGroup",
                  },
                  translate: {
                    x: { pct: -14.4, unit: "vw" },
                    y: { pct: 58.9, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  privilegedAnimation: d,
                  translate: {
                    x: { pct: 90.1, unit: "vw" },
                    y: { pct: 8.1, unit: "vh" },
                  },
                  scale: 0.8,
                },
              },
            },
          ],
        ],
        v = o.shuffle([f, m, b]),
        x = v.map((t) => t[0]),
        y = v.map((t) => t[1]),
        S = v.map((t) => t[2]),
        w = v.map((t) => t[3]),
        C = n.inheritDimension(l.defaultDimension, {
          topicSlideTitleFontSizeLarge: { pct: 20, unit: "vmin" },
          topicSlideTitleFontSizeMedium: { pct: 14, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 9, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 9, unit: "vmin" },
          topicSlideLeftTitleFontSize: { pct: 10, unit: "vmin" },
          braceListSlideParentTopicMaxFontSize: { pct: 12, unit: "vmin" },
          braceListSlideParentTopicMinFontSize: { pct: 10, unit: "vmin" },
          braceListSlideParentTopicZoneWidthRatio: 0.42,
          braceListSlideSubtopicMaxFontSize: { pct: 10, unit: "vmin" },
          braceListSlideSubtopicMinFontSize: { pct: 8, unit: "vmin" },
          braceListSlideSubtopicListLeftPadding: { pct: 7, unit: "vmin" },
          braceListSlideBraceShapeLineWidth: 6,
          braceListSlideCentralTopicPreferredSingleLineSubtopicsCount: 4,
          bulletListSlideParentTopicMaxFontSize: { pct: 16, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideSubtopicMaxFontSize: { pct: 8, unit: "vmin" },
          bulletListSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          bulletListSlideBulletDotStrokeLineWidth: 6,
          bulletListSlideBulletDotRightMargin: { pct: 4, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 8, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 8, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 10, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 10, unit: "vmin" },
          lyricListSlideContentBottomPadding: 0,
          lyricListSlideParentTopicBottomMargin: { pct: 4, unit: "vmin" },
          lyricListSlideCentralTopicParentTopicBottomMargin: {
            pct: 4,
            unit: "vmin",
          },
          lyricListSlideSubtopicSpacing: { pct: 8, unit: "vmin" },
          lyricListSlideCentralTopicSubtopicSpacing: { pct: 8, unit: "vmin" },
          lyricListSlideArrowWidth: 33,
          lyricListSlideArrowHeight: 33,
          lyricListSlideArrowCornerRadius: 3,
          fishboneSlideParentTopicMaxFontSize: { pct: 7.5, unit: "vmin" },
          fishboneSlideParentTopicMinFontSize: { pct: 7, unit: "vmin" },
          fishboneSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          fishboneSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          timelineSlideParentTopicMaxFontSize: { pct: 7.5, unit: "vmin" },
          timelineSlideParentTopicMinFontSize: { pct: 7, unit: "vmin" },
          timelineSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          timelineSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
        }),
        T = n.inheritDimension(r.portraitDimension, {
          topicSlideTitleFontSizeMedium: { pct: 11, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 8, unit: "vmin" },
          bulletListSlideBulletDotStrokeLineWidth: 6,
          lyricListSlideParentTopicMaxFontSize: { pct: 8, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 8, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 10, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 10, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 10, unit: "vmin" },
          lyricListSlideCurrentSubtopicOffsetRatio: 0.415,
          treeChartSlideSubtopicMaxFontSize: { pct: 8, unit: "vmin" },
          treeChartSlideSubtopicMinFontSize: { pct: 7, unit: "vmin" },
        });
      e.hubbleBubbleTheme = {
        slideStyles: {
          slide: {
            opacity: 1,
            backgroundColor: "#48C279",
            backgroundOpacity: 1,
            foregroundColor: s,
            watermarkColor: "white",
            hitRegionFillColor: "rgba(196, 196, 196, 0.12)",
            hitRegionActiveFillColor: "rgba(196, 196, 196, 0.3)",
            hitRegionBoxShadow: "0px 1px 21px -7px rgba(0, 0, 0, 0.15)",
            hitRegionStrokeColor: "rgba(185, 185, 185, 0.1)",
            hitRegionLineWidth: 1,
            hitRegionCornerRadius: 18,
            hitRegionHighlightTextColor: "#0A84FF",
            opacityForPendingSubtopicsUnderPresenterPerspectiveMode: 0.2,
            braceCurveShapeStyle: "hubble-bubble",
            backgroundShapeGroupCount: 3,
            backgroundShapeTemplates: S.map((t, e) =>
              t.map((t) => ({
                id: t.id,
                styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
              })),
            ).reduce((t, e) => t.concat(e)),
            backgroundColorBricks: [
              {
                id: "horizontal-dark-green",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 1 },
                    sizeRatio: { width: 1, height: 0 },
                    color: a,
                  },
                },
                transitionEasing: c,
              },
              {
                id: "vertical-dark-green",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 0, height: 1 },
                    color: a,
                  },
                },
                elevation: "foreground",
                transitionEasing: c,
              },
            ],
            normalImageOutlineWidth: 10,
          },
          "slide.topic.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: u.id,
                styles: {
                  "16:9": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 10, unit: "vw" },
                      y: { pct: 40, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                  "4:3": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -10, unit: "vw" },
                      y: { pct: 40, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                  "9:16": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -30.9, unit: "vw" },
                      y: { pct: 53.9, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                },
              },
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 78.8, unit: "vw" },
                      y: { pct: -5.4, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                  "9:16": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 58.6, unit: "vw" },
                      y: { pct: -4.4, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                },
              },
            ],
          },
          "slide.epilogue": {
            backgroundShapeTemplates: [
              {
                id: u.id,
                styles: {
                  "16:9": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 10, unit: "vw" },
                      y: { pct: 40, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                  "4:3": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -10, unit: "vw" },
                      y: { pct: 40, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                  "9:16": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -30.9, unit: "vw" },
                      y: { pct: 53.9, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                },
              },
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 78.8, unit: "vw" },
                      y: { pct: -5.4, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                  "9:16": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 58.6, unit: "vw" },
                      y: { pct: -4.4, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                },
              },
            ],
          },
          "slide.list.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: u.id,
                styles: {
                  "16:9": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -26.9, unit: "vw" },
                      y: { pct: 46.1, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                  "9:16": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -70, unit: "vw" },
                      y: { pct: 52.3, unit: "vh" },
                    },
                    scale: 1.75,
                  },
                },
              },
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 83.5, unit: "vw" },
                      y: { pct: 65.6, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                  "9:16": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 85.3, unit: "vw" },
                      y: { pct: 61.6, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                },
              },
            ],
          },
          "slide.topic.level-mainTopic": {
            backgroundShapeTemplates: x
              .map((t, e) =>
                t.map((t) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
              )
              .reduce((t, e) => t.concat(e)),
          },
          "slide.list.level-mainTopic": {
            backgroundShapeTemplates: y
              .map((t, e) =>
                t.map((t) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
              )
              .reduce((t, e) => t.concat(e)),
          },
          "slide.topic.level-floatingTopic": {
            backgroundShapeTemplates: x
              .map((t, e) =>
                t.map((t) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
              )
              .reduce((t, e) => t.concat(e)),
          },
          "slide.list.level-floatingTopic": {
            backgroundShapeTemplates: y
              .map((t, e) =>
                t.map((t) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
              )
              .reduce((t, e) => t.concat(e)),
          },
          "slide.list.layout-lyric-list": {
            backgroundColorBricks: [
              {
                id: "horizontal-dark-green",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0.26 },
                    sizeRatio: { width: 1, height: 0.74 },
                    color: a,
                  },
                  "9:16": {
                    offsetRatio: { x: 0, y: 0.212 },
                    sizeRatio: { width: 1, height: 0.788 },
                    color: a,
                  },
                },
                transitionEasing: c,
              },
              {
                id: "vertical-dark-green",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 0.001, height: 1 },
                    color: a,
                  },
                },
                elevation: "foreground",
                transitionEasing: c,
              },
            ],
            backgroundShapeTemplates: [
              {
                id: u.id,
                styles: {
                  "16:9": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -100, unit: "vw" },
                      y: { pct: -100, unit: "vh" },
                    },
                  },
                },
              },
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 100, unit: "vw" },
                      y: { pct: 100, unit: "vh" },
                    },
                  },
                },
              },
              {
                id: h.id,
                styles: {
                  "16:9": {
                    content: h.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -5.5, unit: "vw" },
                      y: { pct: 78.8, unit: "vh" },
                    },
                    scale: 0.8,
                  },
                  "9:16": {
                    content: h.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -5.5, unit: "vw" },
                      y: { pct: 78.8, unit: "vh" },
                    },
                    scale: 0.8,
                  },
                },
              },
              {
                id: g.id,
                styles: {
                  "16:9": {
                    content: g.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 89.1, unit: "vw" },
                      y: { pct: 88, unit: "vh" },
                    },
                    scale: 0.8,
                  },
                  "9:16": {
                    content: g.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 83.5, unit: "vw" },
                      y: { pct: 38, unit: "vh" },
                    },
                    scale: 0.8,
                  },
                },
              },
            ],
          },
          "slide.list.level-centralTopic.layout-lyric-list": {
            backgroundShapeTemplates: [
              {
                id: u.id,
                styles: {
                  "16:9": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -16.9, unit: "vw" },
                      y: { pct: 68.9, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                  "4:3": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -26.9, unit: "vw" },
                      y: { pct: 68.9, unit: "vh" },
                    },
                    scale: 1.87,
                  },
                  "9:16": {
                    content: u.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: -70, unit: "vw" },
                      y: { pct: 62.3, unit: "vh" },
                    },
                    scale: 1.75,
                  },
                },
              },
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 83.5, unit: "vw" },
                      y: { pct: 65.6, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                  "9:16": {
                    content: p.content,
                    privilegedAnimation: d,
                    translate: {
                      x: { pct: 85.3, unit: "vw" },
                      y: { pct: 71.6, unit: "vh" },
                    },
                    scale: 1.78,
                  },
                },
              },
            ],
          },
          "slide.topic.content-principal-note": {
            titlePlacement: "left",
            backgroundColorBricks: [
              {
                id: "horizontal-dark-green",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 1 },
                    sizeRatio: { width: 1, height: 0.001 },
                    color: a,
                  },
                },
                transitionEasing: c,
              },
              {
                id: "vertical-dark-green",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 0.47, height: 1 },
                    color: a,
                  },
                  "4:3": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 0.498, height: 1 },
                    color: a,
                  },
                },
                elevation: "foreground",
                transitionEasing: c,
              },
            ],
            backgroundShapeTemplates: w
              .map((t, e) =>
                t.map((t) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
              )
              .reduce((t, e) => t.concat(e)),
          },
        },
        boxStyles: {
          box: { opacity: 1, transform: "none" },
          "box.text": {
            fontFamily: ["NeverMindRounded", "Yuanti SC", "sans-serif"],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "bold",
            fontStyle: "normal",
            textColor: s,
            textAlignment: "leading",
          },
          "box.shape": { lineWidth: 1, lineCap: "round" },
          "box.headerLine": { strokeColor: s, lineCap: "round" },
          "box.labelBorder": { strokeColor: s, lineWidth: 2 },
          "box.note": { fontWeight: "bold", opacity: 0.8 },
          "box.htmlNote": { fontWeight: "normal", opacity: 0.8 },
          "box.callout": {
            fontWeight: "bold",
            fontStyle: "italic",
            opacity: 0.6,
          },
          "box.svg-template.hyperlink": { borderWidth: 2, borderRadius: 4 },
          "slide.layout-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "center",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide.image-placement-full box.text": {
            textShadow: "0 0 8px rgba(0, 0, 0, 0.3)",
          },
          "slide.layout-image-topic-slide box.image": { outlineColor: "#FFF" },
          "slide.layout-brace-list box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-brace-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
            textColor: s,
          },
          "slide.layout-brace-list box.curlyBrace": {
            strokeColor: s,
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-lyric-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-lyric-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
            textColor: s,
          },
          "slide.layout-lyric-list box.arrow": { fillColor: s },
          "slide.layout-bullet-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-bullet-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
            textColor: s,
          },
          "slide.layout-bullet-list box.bulletDot": {
            fillColor: "#BADD96",
            strokeColor: s,
            lineWidth: 6,
          },
          "slide.layout-tree-chart box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
          },
          "slide.layout-tree-chart box.treeBranch": {
            strokeColor: s,
            lineWidth: 8,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-summary box.curlyBrace": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-summary box.subtopic": { fontWeight: "bold" },
          "slide.layout-scrollable-summary box.curlyBrace": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-scrollable-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-scrollable-summary box.subtopic": {
            fontWeight: "bold",
          },
          "slide.layout-only-child box.title": {
            fontSize: "82px",
            fontWeight: "bold",
          },
          "slide.layout-only-child box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-only-child box.separatorLine": {
            strokeColor: s,
            lineCap: "round",
          },
          "slide.layout-fishbone box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-fishbone box.fishboneHead": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
          },
          "slide.layout-fishbone box.fishbone": {
            strokeColor: s,
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone-head box.fishbone": {
            strokeColor: s,
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHead": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHeadSubtopicLeadingLine": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-timeline box.timelineMain": {
            strokeColor: s,
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-timeline box.timelineVertical": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.timelineTimePoint": { fillColor: s },
          "slide.layout-timeline-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline-head box.timelineMain": {
            strokeColor: s,
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineVertical": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineTimePoint": { fillColor: s },
          "slide.layout-timeline-head box.timelineSubtopicLeadingLine": {
            strokeColor: s,
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-imageable-parent-slide box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-imageable-children-slide box.title": {
            fontWeight: "bold",
          },
          "slide.layout-imageable-list-slide box.title": {
            opacity: 0.7,
            filter: "blur(50px)",
          },
          "slide.layout-only-child-imageable-parent box.separatorLine": {
            strokeColor: s,
            lineCap: "round",
          },
          "slide.layout-only-imageable-child box.title": { fontWeight: "bold" },
          "slide.layout-only-imageable-child box.separatorLine": {
            strokeColor: s,
            lineCap: "round",
          },
          "slide.topic.level-centralTopic box.title": {
            fontFamily: ["Modak", "Yuanti SC", "sans-serif"],
            fontWeight: "bold",
          },
          "slide.list.level-centralTopic box.title": {
            fontFamily: ["Modak", "Yuanti SC", "sans-serif"],
            fontWeight: "bold",
          },
          "slide.list.level-centralTopic box.subtopic": {
            fontFamily: ["Modak", "Yuanti SC", "sans-serif"],
            fontWeight: "bold",
          },
          "slide.topic.level-mainTopic box.title": {
            fontFamily: ["Modak", "Yuanti SC", "sans-serif"],
            fontWeight: "bold",
          },
          "slide.list.level-mainTopic box.title": {
            fontFamily: ["Modak", "Yuanti SC", "sans-serif"],
            fontWeight: "bold",
          },
        },
        dimension: {
          "16:9": C,
          "4:3": n.inheritDimension(C, {
            fishboneSlideParentTopicMaxFontSize: { pct: 6.2, unit: "vmin" },
            fishboneSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            fishboneSlideFishboneHeadInterval: { pct: 47, unit: "vmin" },
            fishboneSlideFishboneHeadSpacing: { pct: 9, unit: "vmin" },
            fishboneSlideParentTopicTitleMaxWidth: { pct: 30, unit: "vw" },
            fishboneSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideParentTopicMaxFontSize: { pct: 6.2, unit: "vmin" },
            timelineSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            timelineSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideVerticalLineSpacing: { pct: 3.1, unit: "vmin" },
            timelineSlideVerticalLineInterval: { pct: 16, unit: "vmin" },
          }),
          "9:16": T,
          "3:4": T,
        },
      };
    },
    3322: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.innocenceZhBoxStyles = e.innocenceTheme = void 0);
      const n = i(96486),
        o = i(91389),
        l = i(77474),
        r = i(4069),
        a = "#FF9A9A",
        s = "#FFEB83",
        c = "#FFC368",
        d = "#ACDB87",
        u = "#749AC7",
        p = {
          id: "waveLine",
          content:
            '<svg width="832" height="488" viewBox="0 0 832 488" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 50.2073C87.8333 26.8739 252.6 13.0073 289 144.207C334.5 308.207 485 144.207 610 189.707C759.337 244.066 774 381.207 798.5 479.207" stroke-width="69"/>\n    </svg>',
        },
        h = {
          id: "curveLine",
          content:
            '<svg width="647" height="558" viewBox="0 0 647 558" xmlns="http://www.w3.org/2000/svg">\n    <path d="M309.19 35C159.19 37.3333 -90.7096 112 109.69 392C360.19 742 721.69 292 579.69 194.5C437.69 97 255.69 88 211.69 194.5C167.69 301 309.69 330 342.69 299" stroke-width="69"/>\n    </svg>',
        },
        g = {
          id: "doubleLine",
          content:
            '<svg width="334" height="362" viewBox="0 0 334 362" xmlns="http://www.w3.org/2000/svg">\n    <path d="M33.8745 109.018L106.952 351.344M125.558 17.9995L303.495 327.176" stroke-width="69"/>\n    </svg>',
        },
        f = {
          id: "triangleShape",
          content:
            '<svg width="162" height="152" viewBox="0 0 162 152" xmlns="http://www.w3.org/2000/svg">\n    <path d="M161.052 18.4338L68.7154 151.573L4.19692e-05 0.70595L161.052 18.4338Z"/>\n    </svg>',
        },
        m = {
          id: "starShape",
          content:
            '<svg width="258" height="258" viewBox="0 0 258 258" xmlns="http://www.w3.org/2000/svg">\n    <path d="M148.044 7.27086C156.793 -4.73225 175.752 0.625786 176.924 15.4325L182.942 91.4575C183.311 96.1127 185.694 100.375 189.468 103.125L251.098 148.044C263.101 156.793 257.743 175.753 242.937 176.925L166.912 182.942C162.257 183.311 157.995 185.695 155.244 189.468L110.325 251.098C101.576 263.102 82.6167 257.744 81.4447 242.937L75.427 166.912C75.0585 162.257 72.6747 157.995 68.901 155.244L7.27077 110.325C-4.73235 101.576 0.625691 82.6168 15.4324 81.4448L91.4574 75.4271C96.1126 75.0586 100.374 72.6748 103.125 68.9011L148.044 7.27086Z"/>\n    </svg>',
        },
        b = {
          id: "littleEllipseShape",
          content:
            '<svg width="69" height="69" viewBox="0 0 69 69" xmlns="http://www.w3.org/2000/svg">\n    <circle cx="34.5" cy="34.5" r="34.5"/>\n    </svg>',
        },
        v = {
          id: "largeEllipseShape",
          content:
            '<svg width="73" height="73" viewBox="0 0 73 73" xmlns="http://www.w3.org/2000/svg">\n    <circle cx="36.5" cy="36.5" r="36.5"/>\n    </svg>',
        },
        x = [
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -34, unit: "vw" },
                    y: { pct: 69, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -23.67,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: -20.3, unit: "vw" },
                    y: { pct: 86.3, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -11.33,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 71, unit: "vw" },
                    y: { pct: -11.6, unit: "vh" },
                  },
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 47.8, unit: "vw" },
                    y: { pct: -15.4, unit: "vh" },
                  },
                  strokeColor: u,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 10, unit: "vw" },
                    y: { pct: -28.8, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 82.52,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -6.1, unit: "vw" },
                    y: { pct: -10, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 15.02,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 76, unit: "vw" },
                    y: { pct: 96, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -24.92,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 22, unit: "vw" },
                    y: { pct: 83.5, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 6.9, unit: "vw" },
                    y: { pct: 21.2, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.586,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 23.6, unit: "vw" },
                    y: { pct: 21.2, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 15,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 29.3, unit: "vw" },
                    y: { pct: 87.7, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "4:3": {
                  content: v.content,
                  translate: {
                    x: { pct: 45.9, unit: "vw" },
                    y: { pct: 87.7, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 88.6, unit: "vw" },
                    y: { pct: 84.5, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 50, unit: "vw" },
                    y: { pct: 17.4, unit: "vh" },
                  },
                  fillColor: d,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: -3.3, unit: "vw" },
                    y: { pct: 23, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -33.8, unit: "vw" },
                    y: { pct: 70, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -23.67,
                  scale: 0.76,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: -14.7, unit: "vw" },
                    y: { pct: 81.3, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 3.5,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 83.5, unit: "vw" },
                    y: { pct: -23.3, unit: "vh" },
                  },
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 40, unit: "vw" },
                    y: { pct: -25.3, unit: "vh" },
                  },
                  strokeColor: u,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 5.6, unit: "vw" },
                    y: { pct: -32.1, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 82.52,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -6.1, unit: "vw" },
                    y: { pct: -16.3, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 15.02,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 85.9, unit: "vw" },
                    y: { pct: 89, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -24.92,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 23.1, unit: "vw" },
                    y: { pct: 75, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: -2.5, unit: "vw" },
                    y: { pct: 13.6, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.475,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 93.4, unit: "vw" },
                    y: { pct: 24.3, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.39,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 36, unit: "vw" },
                    y: { pct: 83.3, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 75.6, unit: "vw" },
                    y: { pct: 88.7, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 50, unit: "vw" },
                    y: { pct: 14.2, unit: "vh" },
                  },
                  fillColor: d,
                },
                "4:3": {
                  content: b.content,
                  translate: {
                    x: { pct: 75, unit: "vw" },
                    y: { pct: 6.4, unit: "vh" },
                  },
                  fillColor: d,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 3.2, unit: "vw" },
                    y: { pct: 35, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -30.8, unit: "vw" },
                    y: { pct: 68, unit: "vh" },
                  },
                  strokeColor: a,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: -25.8, unit: "vw" },
                    y: { pct: 81.3, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -9.1,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 58.8, unit: "vw" },
                    y: { pct: -26.7, unit: "vh" },
                  },
                  strokeColor: u,
                  scale: 0.83,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 65.3, unit: "vw" },
                    y: { pct: -15.9, unit: "vh" },
                  },
                  strokeColor: u,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 6.3, unit: "vw" },
                    y: { pct: -28.8, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 82.52,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: 11.7, unit: "vw" },
                    y: { pct: -10, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 15.02,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 83.6, unit: "vw" },
                    y: { pct: 90, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -24.92,
                  scale: 2.2,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 17.6, unit: "vw" },
                    y: { pct: 72.5, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: -5.6, unit: "vw" },
                    y: { pct: 18.9, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.586,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 82.3, unit: "vw" },
                    y: { pct: 21.2, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.35,
                },
                "3:4": {
                  content: m.content,
                  translate: {
                    x: { pct: 82.3, unit: "vw" },
                    y: { pct: 36.2, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.35,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 29.4, unit: "vw" },
                    y: { pct: 87.7, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "4:3": {
                  content: v.content,
                  translate: {
                    x: { pct: 41.9, unit: "vw" },
                    y: { pct: 87.7, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 81.7, unit: "vw" },
                    y: { pct: 80.5, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 29.4, unit: "vw" },
                    y: { pct: 1, unit: "vh" },
                  },
                  fillColor: d,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 7.6, unit: "vw" },
                    y: { pct: 35.2, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
        ],
        y = [
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -18.8, unit: "vw" },
                    y: { pct: 62.2, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 40.64,
                },
                "4:3": {
                  content: p.content,
                  translate: {
                    x: { pct: -22.8, unit: "vw" },
                    y: { pct: 62.2, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 40.64,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: -16.9, unit: "vw" },
                    y: { pct: 74.8, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 11.99,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 25, unit: "vw" },
                    y: { pct: -27.7, unit: "vh" },
                  },
                  scale: 0.78,
                  strokeColor: u,
                },
                "4:3": {
                  content: h.content,
                  translate: {
                    x: { pct: 44.2, unit: "vw" },
                    y: { pct: -27.7, unit: "vh" },
                  },
                  scale: 0.78,
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 47, unit: "vw" },
                    y: { pct: -4.6, unit: "vh" },
                  },
                  strokeColor: u,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 2.3, unit: "vw" },
                    y: { pct: -22.2, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -16.36,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -16.7, unit: "vw" },
                    y: { pct: 4.3, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -20.7,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: { x: 0, y: 0 },
                  opacity: 0,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 10.9, unit: "vw" },
                    y: { pct: 57.3, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 74.6, unit: "vw" },
                    y: { pct: 46.5, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 1.2,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 63.4, unit: "vw" },
                    y: { pct: 59, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 14.3,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 29.4, unit: "vw" },
                    y: { pct: 87.7, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 76.6, unit: "vw" },
                    y: { pct: 87.7, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 86, unit: "vw" },
                    y: { pct: 12.3, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.63,
                },
                "4:3": {
                  content: b.content,
                  translate: {
                    x: { pct: 90.2, unit: "vw" },
                    y: { pct: 12.3, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.63,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 6.1, unit: "vw" },
                    y: { pct: 38.7, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -30, unit: "vw" },
                    y: { pct: 53.3, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 24.73,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: -22.4, unit: "vw" },
                    y: { pct: 74.8, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 6.68,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 35.9, unit: "vw" },
                    y: { pct: -40, unit: "vh" },
                  },
                  scale: 0.78,
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 47, unit: "vw" },
                    y: { pct: -15.8, unit: "vh" },
                  },
                  strokeColor: u,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: -5, unit: "vw" },
                    y: { pct: -20, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -16.36,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -2.3, unit: "vw" },
                    y: { pct: -10.6, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -3.2,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: { x: 0, y: 0 },
                  opacity: 0,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 55.3, unit: "vw" },
                    y: { pct: 69, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 84.6, unit: "vw" },
                    y: { pct: 66.7, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.67,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 83.3, unit: "vw" },
                    y: { pct: 59, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 1.5,
                  scale: 0.78,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 35.9, unit: "vw" },
                    y: { pct: 96.6, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 84.4, unit: "vw" },
                    y: { pct: 90.9, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 93, unit: "vw" },
                    y: { pct: 8.4, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.63,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 5.4, unit: "vw" },
                    y: { pct: 28.6, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -11, unit: "vw" },
                    y: { pct: 66.7, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 24.73,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: -20, unit: "vw" },
                    y: { pct: 68.5, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 19.92,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: -10.3, unit: "vw" },
                    y: { pct: -28.9, unit: "vh" },
                  },
                  scale: 0.78,
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 58.1, unit: "vw" },
                    y: { pct: -23.4, unit: "vh" },
                  },
                  strokeColor: u,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 76, unit: "vw" },
                    y: { pct: 78.5, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -16.36,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -19, unit: "vw" },
                    y: { pct: 10.6, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -20.2,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: { x: 0, y: 0 },
                  opacity: 0,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 36.4, unit: "vw" },
                    y: { pct: 59.6, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 83, unit: "vw" },
                    y: { pct: -6.2, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.98,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 72.2, unit: "vw" },
                    y: { pct: 15.3, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 1.5,
                  scale: 0.71,
                },
                "3:4": {
                  content: m.content,
                  translate: {
                    x: { pct: 72.2, unit: "vw" },
                    y: { pct: 27.8, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 1.5,
                  scale: 0.71,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 21, unit: "vw" },
                    y: { pct: 76.8, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 81.7, unit: "vw" },
                    y: { pct: 75.9, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 87.3, unit: "vw" },
                    y: { pct: 37, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.63,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 17.3, unit: "vw" },
                    y: { pct: 6.2, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
        ],
        S = [
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -18.8, unit: "vw" },
                    y: { pct: -10.9, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 120.88,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 40, unit: "vw" },
                    y: { pct: 2.2, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -147.76,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 77, unit: "vw" },
                    y: { pct: 54, unit: "vh" },
                  },
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: -12, unit: "vw" },
                    y: { pct: 71.9, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 29,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 74, unit: "vw" },
                    y: { pct: -17.1, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -0.42,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: 68, unit: "vw" },
                    y: { pct: 65, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 143,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 55.6, unit: "vw" },
                    y: { pct: 90, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 1.37,
                  rotate: -89.97,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 66.7, unit: "vw" },
                    y: { pct: 25.3, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 0.76,
                  rotate: -89.97,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 5.15, unit: "vw" },
                    y: { pct: 68, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.59,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 4.4, unit: "vw" },
                    y: { pct: 2.38, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 14.9,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 29.4, unit: "vw" },
                    y: { pct: 87.7, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 81.4, unit: "vw" },
                    y: { pct: 91, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.77,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 62.4, unit: "vw" },
                    y: { pct: -3.8, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 1.01,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 7.7, unit: "vw" },
                    y: { pct: 34, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -6.25, unit: "vw" },
                    y: { pct: -38.9, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 120.88,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 40, unit: "vw" },
                    y: { pct: -10.2, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -156.59,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 87.6, unit: "vw" },
                    y: { pct: 66.9, unit: "vh" },
                  },
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: -12, unit: "vw" },
                    y: { pct: 81.9, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 29,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 89.4, unit: "vw" },
                    y: { pct: -17.1, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -0.42,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: 68, unit: "vw" },
                    y: { pct: 65, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 143,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 61.8, unit: "vw" },
                    y: { pct: 93.1, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 1.37,
                  rotate: -89.97,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 72.2, unit: "vw" },
                    y: { pct: 34.7, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 0.76,
                  rotate: -89.97,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 1.2, unit: "vw" },
                    y: { pct: 74.6, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.59,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 4.4, unit: "vw" },
                    y: { pct: 2.38, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.81,
                  rotate: -24.4,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 22, unit: "vw" },
                    y: { pct: 92.7, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 72.2, unit: "vw" },
                    y: { pct: 92.7, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.77,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: { x: 0, y: 0 },
                  opacity: 0,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: -1.3, unit: "vw" },
                    y: { pct: 26.6, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: -18.8, unit: "vw" },
                    y: { pct: -16.7, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 140.11,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 40, unit: "vw" },
                    y: { pct: -10.2, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -156.59,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: -11.3, unit: "vw" },
                    y: { pct: 70, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 16,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: -40, unit: "vw" },
                    y: { pct: 75, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 32.68,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 81.3, unit: "vw" },
                    y: { pct: -22.2, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 28.4,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: 68, unit: "vw" },
                    y: { pct: 75, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 143,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 96, unit: "vw" },
                    y: { pct: 96, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 1.37,
                  rotate: -89.97,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 72.2, unit: "vw" },
                    y: { pct: 22.2, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -120,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 84.4, unit: "vw" },
                    y: { pct: 40.6, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.59,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 15.6, unit: "vw" },
                    y: { pct: 8, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.54,
                  rotate: -24.4,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 86.3, unit: "vw" },
                    y: { pct: 81.4, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 43.8, unit: "vw" },
                    y: { pct: 69, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.77,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 62.4, unit: "vw" },
                    y: { pct: -3.8, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 1.01,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: -1.3, unit: "vw" },
                    y: { pct: 26.6, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
          ],
        ],
        w = [
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 56.3, unit: "vw" },
                    y: { pct: -20, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 176.85,
                  scale: 1.24,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 44.4, unit: "vw" },
                    y: { pct: 72.5, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -86.57,
                },
              },
            },
            {
              id: h.content,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 72, unit: "vw" },
                    y: { pct: 76.4, unit: "vh" },
                  },
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: -24.5, unit: "vw" },
                    y: { pct: 77.8, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 96.35,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: -9.4, unit: "vw" },
                    y: { pct: -2, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -42.97,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: 65, unit: "vw" },
                    y: { pct: -5, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 58.5,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 15, unit: "vw" },
                    y: { pct: -6.9, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 1.37,
                  rotate: -24.92,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 70.6, unit: "vw" },
                    y: { pct: 31.9, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
                "3:4": {
                  content: f.content,
                  translate: {
                    x: { pct: 70.6, unit: "vw" },
                    y: { pct: 44.3, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 0, unit: "vw" },
                    y: { pct: 76.2, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 1.01,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 11.1, unit: "vw" },
                    y: { pct: -3.1, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 1.01,
                  rotate: 16,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 30.9, unit: "vw" },
                    y: { pct: 76.4, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 21.2, unit: "vw" },
                    y: { pct: 62.8, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.76,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 50, unit: "vw" },
                    y: { pct: 17.4, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 1.01,
                },
                "4:3": {
                  content: b.content,
                  translate: {
                    x: { pct: 37.5, unit: "vw" },
                    y: { pct: 20.6, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 1.01,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 13.8, unit: "vw" },
                    y: { pct: 26.2, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 62.5, unit: "vw" },
                    y: { pct: -20, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 205.16,
                  scale: 1.24,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 50, unit: "vw" },
                    y: { pct: 77.5, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -72.24,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 78.7, unit: "vw" },
                    y: { pct: 71.6, unit: "vh" },
                  },
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: -30, unit: "vw" },
                    y: { pct: 88, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 96.35,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: -11.3, unit: "vw" },
                    y: { pct: -13.3, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -11.78,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: 70, unit: "vw" },
                    y: { pct: -10, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 58.5,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 15, unit: "vw" },
                    y: { pct: -11.3, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 1.37,
                  rotate: -24.92,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 81.7, unit: "vw" },
                    y: { pct: 35, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
                "3:4": {
                  content: f.content,
                  translate: {
                    x: { pct: 81.7, unit: "vw" },
                    y: { pct: 43.3, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: -6.3, unit: "vw" },
                    y: { pct: 76.4, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 1.01,
                },
                "4:3": {
                  content: m.content,
                  translate: {
                    x: { pct: -6.7, unit: "vw" },
                    y: { pct: 76.4, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 1.01,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 10.7, unit: "vw" },
                    y: { pct: -2.8, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.8,
                  rotate: 16,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 19.4, unit: "vw" },
                    y: { pct: 84, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 5.1, unit: "vw" },
                    y: { pct: 24, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.76,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 67.5, unit: "vw" },
                    y: { pct: 8.6, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 1.01,
                },
                "4:3": {
                  content: b.content,
                  translate: {
                    x: { pct: 59.5, unit: "vw" },
                    y: { pct: 8.6, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 1.01,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 37.9, unit: "vw" },
                    y: { pct: 81.6, unit: "vh" },
                  },
                  fillColor: c,
                },
                "3:4": {
                  content: b.content,
                  translate: {
                    x: { pct: 37.9, unit: "vw" },
                    y: { pct: 106.5, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 81.3, unit: "vw" },
                    y: { pct: 72.2, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: 176.85,
                  scale: 1.24,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 44.4, unit: "vw" },
                    y: { pct: 72.5, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -72.24,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 72.6, unit: "vw" },
                    y: { pct: -16.7, unit: "vh" },
                  },
                  strokeColor: u,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: -30, unit: "vw" },
                    y: { pct: 88, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 131.14,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 6.3, unit: "vw" },
                    y: { pct: -22, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 17.25,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: 65, unit: "vw" },
                    y: { pct: -5, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 58.5,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: -1, unit: "vw" },
                    y: { pct: 44.7, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 1.37,
                  rotate: -24.92,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 70.6, unit: "vw" },
                    y: { pct: 31.9, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
                "3:4": {
                  content: f.content,
                  translate: {
                    x: { pct: 70.6, unit: "vw" },
                    y: { pct: 44.3, unit: "vh" },
                  },
                  fillColor: u,
                  rotate: -88.92,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 9.4, unit: "vw" },
                    y: { pct: 82, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 1.01,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 10.7, unit: "vw" },
                    y: { pct: -2.8, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 16,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 31.2, unit: "vw" },
                    y: { pct: 87.6, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.64,
                },
                "4:3": {
                  content: v.content,
                  translate: {
                    x: { pct: 34.3, unit: "vw" },
                    y: { pct: 82, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.64,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 17.4, unit: "vw" },
                    y: { pct: 68, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.76,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 62.6, unit: "vw" },
                    y: { pct: 4.1, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 1.01,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 9.8, unit: "vw" },
                    y: { pct: 27.7, unit: "vh" },
                  },
                  fillColor: c,
                },
              },
            },
          ],
        ],
        C = [
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 57, unit: "vw" },
                    y: { pct: 46.2, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -62.73,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 37.5, unit: "vw" },
                    y: { pct: 0, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -147.76,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: -22.5, unit: "vw" },
                    y: { pct: 70, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 165.73,
                  scale: 0.63,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 66.5, unit: "vw" },
                    y: { pct: 75, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 29,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 71.9, unit: "vw" },
                    y: { pct: -6.7, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 40.05,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -9, unit: "vw" },
                    y: { pct: 86, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -134,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: { x: 0, y: 0 },
                  opacity: 0,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: -6.7, unit: "vw" },
                    y: { pct: 33.8, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 0.76,
                  rotate: -175.11,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: -3.1, unit: "vw" },
                    y: { pct: -11, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: -6.79,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 10.9, unit: "vw" },
                    y: { pct: 1.6, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 15,
                  scale: 1.04,
                },
                "3:4": {
                  content: m.content,
                  translate: {
                    x: { pct: 10.9, unit: "vw" },
                    y: { pct: -5.8, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 15,
                  scale: 1.04,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 55.2, unit: "vw" },
                    y: { pct: 77.7, unit: "vh" },
                  },
                  fillColor: c,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 43.8, unit: "vw" },
                    y: { pct: 85.9, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.77,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 90, unit: "vw" },
                    y: { pct: 15.3, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.56,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 62, unit: "vw" },
                    y: { pct: 29.7, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 71.9, unit: "vw" },
                    y: { pct: 55.6, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -62.73,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 37.5, unit: "vw" },
                    y: { pct: -10, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -147.76,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: -22.5, unit: "vw" },
                    y: { pct: 70, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 116.94,
                  scale: 0.63,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 66.5, unit: "vw" },
                    y: { pct: 80, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 44.78,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 75, unit: "vw" },
                    y: { pct: -22.7, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -3,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -9, unit: "vw" },
                    y: { pct: 91, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -134,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: { x: 0, y: 0 },
                  opacity: 0,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: -6.7, unit: "vw" },
                    y: { pct: 30, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 0.76,
                  rotate: -175.11,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: -6.25, unit: "vw" },
                    y: { pct: -18.9, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: 23.36,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 10.9, unit: "vw" },
                    y: { pct: -1.6, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.79,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 60, unit: "vw" },
                    y: { pct: 90, unit: "vh" },
                  },
                  fillColor: c,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 50, unit: "vw" },
                    y: { pct: 90.6, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.77,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 93.2, unit: "vw" },
                    y: { pct: 26.1, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.56,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 72.1, unit: "vw" },
                    y: { pct: 27.5, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 50, unit: "vw" },
                    y: { pct: 77.8, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -42.81,
                },
                "9:16": {
                  content: p.content,
                  translate: {
                    x: { pct: 37.5, unit: "vw" },
                    y: { pct: -5, unit: "vh" },
                  },
                  strokeColor: a,
                  rotate: -157.67,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: -21.25, unit: "vw" },
                    y: { pct: 15.6, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 165.73,
                  scale: 0.63,
                },
                "9:16": {
                  content: h.content,
                  translate: {
                    x: { pct: 60, unit: "vw" },
                    y: { pct: 55, unit: "vh" },
                  },
                  strokeColor: u,
                  rotate: 19.18,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 71.9, unit: "vw" },
                    y: { pct: -16.7, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: 40,
                },
                "9:16": {
                  content: g.content,
                  translate: {
                    x: { pct: -9, unit: "vw" },
                    y: { pct: 86, unit: "vh" },
                  },
                  strokeColor: s,
                  rotate: -134,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: { x: 0, y: 0 },
                  opacity: 0,
                },
                "9:16": {
                  content: f.content,
                  translate: {
                    x: { pct: 2.4, unit: "vw" },
                    y: { pct: 30.1, unit: "vh" },
                  },
                  fillColor: u,
                  scale: 0.76,
                  rotate: -175.11,
                },
              },
            },
            {
              id: m.id,
              styles: {
                "16:9": {
                  content: m.content,
                  translate: {
                    x: { pct: 20, unit: "vw" },
                    y: { pct: -13.3, unit: "vh" },
                  },
                  fillColor: d,
                  rotate: -66.64,
                  scale: 0.6,
                },
                "9:16": {
                  content: m.content,
                  translate: {
                    x: { pct: 6.4, unit: "vw" },
                    y: { pct: 1.6, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.87,
                  rotate: 14,
                },
              },
            },
            {
              id: v.id,
              styles: {
                "16:9": {
                  content: v.content,
                  translate: {
                    x: { pct: 55, unit: "vw" },
                    y: { pct: 77.7, unit: "vh" },
                  },
                  fillColor: c,
                },
                "9:16": {
                  content: v.content,
                  translate: {
                    x: { pct: 43.8, unit: "vw" },
                    y: { pct: 74, unit: "vh" },
                  },
                  fillColor: c,
                  scale: 0.77,
                },
              },
            },
            {
              id: b.id,
              styles: {
                "16:9": {
                  content: b.content,
                  translate: {
                    x: { pct: 87.8, unit: "vw" },
                    y: { pct: 32, unit: "vh" },
                  },
                  fillColor: d,
                  scale: 0.56,
                },
                "9:16": {
                  content: b.content,
                  translate: {
                    x: { pct: 71.2, unit: "vw" },
                    y: { pct: 22.6, unit: "vh" },
                  },
                  fillColor: d,
                },
              },
            },
          ],
        ],
        T = n.shuffle([x, y, S, w, C]),
        L = T.map((t) => t[0]),
        B = T.map((t) => t[1]),
        M = T.map((t) => t[2]),
        k = r.inheritDimension(o.defaultDimension, {
          topicSlideTitleFontSizeMedium: { pct: 10, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 6, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 10, unit: "vmin" },
          braceListSlideParentTopicMaxFontSize: { pct: 9, unit: "vmin" },
          braceListSlideSubtopicMaxFontSize: { pct: 6, unit: "vmin" },
          braceListSlideSubtopicMinFontSize: { pct: 5, unit: "vmin" },
          braceListSlideSubtopicListLeftPadding: { pct: 7, unit: "vmin" },
          bulletListSlideContentLeftPadding: { pct: 7, unit: "vmin" },
          bulletListSlideBulletDotRightMargin: { pct: 5, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 5.5, unit: "vmin" },
          lyricListSlideContentLeftPadding: { pct: 100 / 13, unit: "vw" },
          lyricListSlideArrowHeight: 38,
          lyricListSlideArrowCornerRadius: 5,
          fishboneSlideParentTopicMaxFontSize: { pct: 7, unit: "vmin" },
          fishboneSlideParentTopicMinFontSize: { pct: 6, unit: "vmin" },
          fishboneSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          fishboneSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          timelineSlideParentTopicMaxFontSize: { pct: 8, unit: "vmin" },
          timelineSlideParentTopicMinFontSize: { pct: 7, unit: "vmin" },
          timelineSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          timelineSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
        }),
        F = r.inheritDimension(l.portraitDimension, {
          topicSlideTitleFontSizeLarge: { pct: 13, unit: "vmin" },
          topicSlideTitleFontSizeMedium: { pct: 10, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 10, unit: "vmin" },
          bulletListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          bulletListSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          bulletListSlideBulletDotRightMargin: { pct: 3, unit: "vmin" },
          bulletListSlideParentTopicBottomMargin: { pct: 16, unit: "vmin" },
          bulletListSlideCentralTopicParentTopicBottomMargin: {
            pct: 16,
            unit: "vmin",
          },
          bulletListSlideSubtopicSpacing: { pct: 11, unit: "vmin" },
          bulletListSlideCentralTopicSubtopicSpacing: { pct: 11, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 7, unit: "vmin" },
          lyricListSlideCurrentSubtopicOffsetRatio: 0.405,
          treeChartSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          treeChartSlideParentTopicMinFontSize: { pct: 10, unit: "vmin" },
          treeChartSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          treeChartSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
        });
      (e.innocenceTheme = {
        slideStyles: {
          slide: {
            opacity: 1,
            backgroundColor: "#F7FFF4",
            backgroundOpacity: 1,
            foregroundColor: "black",
            hitRegionFillColor: "rgba(196, 196, 196, 0.12)",
            hitRegionActiveFillColor: "rgba(196, 196, 196, 0.3)",
            hitRegionBoxShadow: "0px 1px 21px -7px rgba(0, 0, 0, 0.15)",
            hitRegionStrokeColor: "rgba(185, 185, 185, 0.1)",
            hitRegionLineWidth: 1,
            hitRegionCornerRadius: 18,
            hitRegionHighlightTextColor: "#0A84FF",
            opacityForPendingSubtopicsUnderPresenterPerspectiveMode: 0.2,
            braceCurveShapeStyle: "innocence",
            lyricArrowShapeStyle: "innocence",
            backgroundShapeGroupCount: 5,
            backgroundShapeTemplates: M.map((t, e) =>
              t.map((t) => ({
                id: t.id,
                styles: r.mergeAttrStyles(t.styles, { groupIndex: e }),
              })),
            ).reduce((t, e) => t.concat(e)),
          },
          "slide.topic.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    translate: {
                      x: { pct: -3.7, unit: "vw" },
                      y: { pct: 63.9, unit: "vh" },
                    },
                    strokeColor: a,
                  },
                  "9:16": {
                    content: p.content,
                    translate: {
                      x: { pct: -9.5, unit: "vw" },
                      y: { pct: 80, unit: "vh" },
                    },
                    strokeColor: a,
                  },
                },
              },
              {
                id: h.id,
                styles: {
                  "16:9": {
                    content: h.content,
                    translate: {
                      x: { pct: 76.2, unit: "vw" },
                      y: { pct: -8.9, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                  "9:16": {
                    content: h.content,
                    translate: {
                      x: { pct: 40, unit: "vw" },
                      y: { pct: -13.9, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                  "3:4": {
                    content: h.content,
                    translate: {
                      x: { pct: 42.5, unit: "vw" },
                      y: { pct: -20.3, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                },
              },
              {
                id: g.id,
                styles: {
                  "16:9": {
                    content: g.content,
                    translate: {
                      x: { pct: 6.3, unit: "vw" },
                      y: { pct: -16.7, unit: "vh" },
                    },
                    strokeColor: s,
                  },
                  "9:16": {
                    content: g.content,
                    translate: {
                      x: { pct: -11.9, unit: "vw" },
                      y: { pct: 0.5, unit: "vh" },
                    },
                    strokeColor: s,
                    rotate: -19,
                  },
                },
              },
              {
                id: f.id,
                styles: {
                  "16:9": {
                    content: f.content,
                    translate: {
                      x: { pct: -2, unit: "vw" },
                      y: { pct: 17.8, unit: "vh" },
                    },
                    fillColor: u,
                  },
                  "4:3": {
                    content: f.content,
                    translate: {
                      x: { pct: -6.2, unit: "vw" },
                      y: { pct: 26.6, unit: "vh" },
                    },
                    fillColor: u,
                  },
                  "9:16": {
                    content: f.content,
                    translate: {
                      x: { pct: -2, unit: "vw" },
                      y: { pct: 60, unit: "vh" },
                    },
                    fillColor: u,
                  },
                  "3:4": {
                    content: f.content,
                    translate: {
                      x: { pct: -6.4, unit: "vw" },
                      y: { pct: 60, unit: "vh" },
                    },
                    fillColor: u,
                  },
                },
              },
              {
                id: m.id,
                styles: {
                  "16:9": {
                    content: m.content,
                    translate: {
                      x: { pct: 78.1, unit: "vw" },
                      y: { pct: 59.6, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "9:16": {
                    content: m.content,
                    translate: {
                      x: { pct: 68.2, unit: "vw" },
                      y: { pct: 72.6, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "3:4": {
                    content: m.content,
                    translate: {
                      x: { pct: 73.9, unit: "vw" },
                      y: { pct: 72.6, unit: "vh" },
                    },
                    fillColor: d,
                  },
                },
              },
              {
                id: v.id,
                styles: {
                  "16:9": {
                    content: v.content,
                    translate: {
                      x: { pct: 45, unit: "vw" },
                      y: { pct: 80.1, unit: "vh" },
                    },
                    fillColor: c,
                  },
                  "4:3": {
                    content: v.content,
                    translate: {
                      x: { pct: 61.7, unit: "vw" },
                      y: { pct: 76.7, unit: "vh" },
                    },
                    fillColor: c,
                  },
                  "9:16": {
                    content: v.content,
                    translate: {
                      x: { pct: 22.8, unit: "vw" },
                      y: { pct: 72.6, unit: "vh" },
                    },
                    fillColor: c,
                  },
                },
              },
              {
                id: b.id,
                styles: {
                  "16:9": {
                    content: b.content,
                    translate: {
                      x: { pct: 66.6, unit: "vw" },
                      y: { pct: 6.9, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "9:16": {
                    content: b.content,
                    translate: {
                      x: { pct: 37, unit: "vw" },
                      y: { pct: 17.5, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "3:4": {
                    content: b.content,
                    translate: {
                      x: { pct: 18.1, unit: "vw" },
                      y: { pct: 30, unit: "vh" },
                    },
                    fillColor: d,
                  },
                },
              },
            ],
          },
          "slide.epilogue": {
            backgroundShapeTemplates: [
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    translate: {
                      x: { pct: -3.7, unit: "vw" },
                      y: { pct: 63.9, unit: "vh" },
                    },
                    strokeColor: a,
                  },
                  "9:16": {
                    content: p.content,
                    translate: {
                      x: { pct: -9.5, unit: "vw" },
                      y: { pct: 80, unit: "vh" },
                    },
                    strokeColor: a,
                  },
                },
              },
              {
                id: h.id,
                styles: {
                  "16:9": {
                    content: h.content,
                    translate: {
                      x: { pct: 76.2, unit: "vw" },
                      y: { pct: -8.9, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                  "9:16": {
                    content: h.content,
                    translate: {
                      x: { pct: 40, unit: "vw" },
                      y: { pct: -13.9, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                  "3:4": {
                    content: h.content,
                    translate: {
                      x: { pct: 42.5, unit: "vw" },
                      y: { pct: -20.3, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                },
              },
              {
                id: g.id,
                styles: {
                  "16:9": {
                    content: g.content,
                    translate: {
                      x: { pct: 6.3, unit: "vw" },
                      y: { pct: -16.7, unit: "vh" },
                    },
                    strokeColor: s,
                  },
                  "9:16": {
                    content: g.content,
                    translate: {
                      x: { pct: -11.9, unit: "vw" },
                      y: { pct: 0.5, unit: "vh" },
                    },
                    strokeColor: s,
                    rotate: -19,
                  },
                },
              },
              {
                id: f.id,
                styles: {
                  "16:9": {
                    content: f.content,
                    translate: {
                      x: { pct: -2, unit: "vw" },
                      y: { pct: 17.8, unit: "vh" },
                    },
                    fillColor: u,
                  },
                  "4:3": {
                    content: f.content,
                    translate: {
                      x: { pct: -6.2, unit: "vw" },
                      y: { pct: 26.6, unit: "vh" },
                    },
                    fillColor: u,
                  },
                  "9:16": {
                    content: f.content,
                    translate: {
                      x: { pct: -2, unit: "vw" },
                      y: { pct: 60, unit: "vh" },
                    },
                    fillColor: u,
                  },
                  "3:4": {
                    content: f.content,
                    translate: {
                      x: { pct: -6.4, unit: "vw" },
                      y: { pct: 60, unit: "vh" },
                    },
                    fillColor: u,
                  },
                },
              },
              {
                id: m.id,
                styles: {
                  "16:9": {
                    content: m.content,
                    translate: {
                      x: { pct: 78.1, unit: "vw" },
                      y: { pct: 59.6, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "9:16": {
                    content: m.content,
                    translate: {
                      x: { pct: 68.2, unit: "vw" },
                      y: { pct: 72.6, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "3:4": {
                    content: m.content,
                    translate: {
                      x: { pct: 73.9, unit: "vw" },
                      y: { pct: 72.6, unit: "vh" },
                    },
                    fillColor: d,
                  },
                },
              },
              {
                id: v.id,
                styles: {
                  "16:9": {
                    content: v.content,
                    translate: {
                      x: { pct: 45, unit: "vw" },
                      y: { pct: 80.1, unit: "vh" },
                    },
                    fillColor: c,
                  },
                  "4:3": {
                    content: v.content,
                    translate: {
                      x: { pct: 61.7, unit: "vw" },
                      y: { pct: 76.7, unit: "vh" },
                    },
                    fillColor: c,
                  },
                  "9:16": {
                    content: v.content,
                    translate: {
                      x: { pct: 22.8, unit: "vw" },
                      y: { pct: 72.6, unit: "vh" },
                    },
                    fillColor: c,
                  },
                },
              },
              {
                id: b.id,
                styles: {
                  "16:9": {
                    content: b.content,
                    translate: {
                      x: { pct: 66.6, unit: "vw" },
                      y: { pct: 6.9, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "9:16": {
                    content: b.content,
                    translate: {
                      x: { pct: 37, unit: "vw" },
                      y: { pct: 17.5, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "3:4": {
                    content: b.content,
                    translate: {
                      x: { pct: 18.1, unit: "vw" },
                      y: { pct: 30, unit: "vh" },
                    },
                    fillColor: d,
                  },
                },
              },
            ],
          },
          "slide.list.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: p.id,
                styles: {
                  "16:9": {
                    content: p.content,
                    translate: {
                      x: { pct: -5.4, unit: "vw" },
                      y: { pct: 71.4, unit: "vh" },
                    },
                    strokeColor: a,
                  },
                  "9:16": {
                    content: p.content,
                    translate: {
                      x: { pct: -20, unit: "vw" },
                      y: { pct: 80, unit: "vh" },
                    },
                    strokeColor: a,
                  },
                },
              },
              {
                id: h.id,
                styles: {
                  "16:9": {
                    content: h.content,
                    translate: {
                      x: { pct: 77.9, unit: "vw" },
                      y: { pct: -22.4, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                  "9:16": {
                    content: h.content,
                    translate: {
                      x: { pct: 57, unit: "vw" },
                      y: { pct: -23.6, unit: "vh" },
                    },
                    strokeColor: u,
                  },
                },
              },
              {
                id: g.id,
                styles: {
                  "16:9": {
                    content: g.content,
                    translate: {
                      x: { pct: 2.3, unit: "vw" },
                      y: { pct: -27.9, unit: "vh" },
                    },
                    strokeColor: s,
                    rotate: -19,
                  },
                  "4:3": {
                    content: g.content,
                    translate: {
                      x: { pct: 2.3, unit: "vw" },
                      y: { pct: -17.9, unit: "vh" },
                    },
                    strokeColor: s,
                    rotate: -19,
                  },
                  "9:16": {
                    content: g.content,
                    translate: {
                      x: { pct: -15.6, unit: "vw" },
                      y: { pct: -6.6, unit: "vh" },
                    },
                    strokeColor: s,
                    rotate: -19,
                  },
                },
              },
              {
                id: f.id,
                styles: {
                  "16:9": {
                    content: f.content,
                    translate: {
                      x: { pct: -4.4, unit: "vw" },
                      y: { pct: 29.5, unit: "vh" },
                    },
                    fillColor: u,
                    rotate: -24.92,
                  },
                  "9:16": {
                    content: f.content,
                    translate: {
                      x: { pct: -8.8, unit: "vw" },
                      y: { pct: 67, unit: "vh" },
                    },
                    fillColor: u,
                    rotate: -24.92,
                  },
                },
              },
              {
                id: m.id,
                styles: {
                  "16:9": {
                    content: m.content,
                    translate: {
                      x: { pct: 82.7, unit: "vw" },
                      y: { pct: 63, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "9:16": {
                    content: m.content,
                    translate: {
                      x: { pct: 78.4, unit: "vw" },
                      y: { pct: 85.2, unit: "vh" },
                    },
                    fillColor: d,
                  },
                },
              },
              {
                id: v.id,
                styles: {
                  "16:9": {
                    content: v.content,
                    translate: {
                      x: { pct: 50.9, unit: "vw" },
                      y: { pct: 86.4, unit: "vh" },
                    },
                    fillColor: c,
                    scale: 0.86,
                  },
                  "4:3": {
                    content: v.content,
                    translate: {
                      x: { pct: 67.5, unit: "vw" },
                      y: { pct: 86.4, unit: "vh" },
                    },
                    fillColor: c,
                    scale: 0.86,
                  },
                  "9:16": {
                    content: v.content,
                    translate: {
                      x: { pct: 89.2, unit: "vw" },
                      y: { pct: 76.5, unit: "vh" },
                    },
                    fillColor: c,
                    scale: 0.86,
                  },
                },
              },
              {
                id: b.id,
                styles: {
                  "16:9": {
                    content: b.content,
                    translate: {
                      x: { pct: 65.8, unit: "vw" },
                      y: { pct: 3.4, unit: "vh" },
                    },
                    fillColor: d,
                  },
                  "9:16": {
                    content: b.content,
                    translate: {
                      x: { pct: -3.8, unit: "vw" },
                      y: { pct: 27.8, unit: "vh" },
                    },
                    fillColor: d,
                  },
                },
              },
            ],
          },
          "slide.topic.level-mainTopic": {
            backgroundShapeTemplates: L.map((t, e) =>
              t.map((t) => ({
                id: t.id,
                styles: r.mergeAttrStyles(t.styles, { groupIndex: e }),
              })),
            ).reduce((t, e) => t.concat(e)),
          },
          "slide.list.level-mainTopic": {
            backgroundShapeTemplates: B.map((t, e) =>
              t.map((t) => ({
                id: t.id,
                styles: r.mergeAttrStyles(t.styles, { groupIndex: e }),
              })),
            ).reduce((t, e) => t.concat(e)),
          },
          "slide.topic.level-floatingTopic": {
            backgroundShapeTemplates: L.map((t, e) =>
              t.map((t) => ({
                id: t.id,
                styles: r.mergeAttrStyles(t.styles, { groupIndex: e }),
              })),
            ).reduce((t, e) => t.concat(e)),
          },
          "slide.list.level-floatingTopic": {
            backgroundShapeTemplates: B.map((t, e) =>
              t.map((t) => ({
                id: t.id,
                styles: r.mergeAttrStyles(t.styles, { groupIndex: e }),
              })),
            ).reduce((t, e) => t.concat(e)),
          },
        },
        boxStyles: {
          box: { opacity: 1, transform: "none" },
          "box.text": {
            fontFamily: ["NeverMind semi-serif", "sans-serif"],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "bold",
            fontStyle: "normal",
            textColor: "#000",
            textAlignment: "leading",
          },
          "box.shape": { lineWidth: 1, lineCap: "round" },
          "box.headerLine": { strokeColor: "#000", lineCap: "round" },
          "box.labelBorder": { strokeColor: "#000", lineWidth: 2 },
          "box.note": { fontWeight: "bold", opacity: 0.8 },
          "box.htmlNote": { fontWeight: "normal", opacity: 0.8 },
          "box.callout": {
            fontWeight: "bold",
            fontStyle: "italic",
            opacity: 0.6,
          },
          "box.svg-template.hyperlink": { borderWidth: 2, borderRadius: 4 },
          "slide.layout-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "center",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide.image-placement-full box.text": {
            textShadow: "0 0 8px rgba(0, 0, 0, 0.3)",
          },
          "slide.layout-brace-list box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-brace-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-brace-list box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 21,
          },
          "slide.layout-lyric-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-lyric-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-lyric-list box.arrow": { fillColor: "#000" },
          "slide.layout-bullet-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-bullet-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-bullet-list box.bulletDot": { fillColor: "#000" },
          "slide.layout-tree-chart box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
          },
          "slide.layout-tree-chart box.treeBranch": {
            strokeColor: "#000",
            lineWidth: 8,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-summary box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-summary box.subtopic": { fontWeight: "bold" },
          "slide.layout-scrollable-summary box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-scrollable-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-scrollable-summary box.subtopic": {
            fontWeight: "bold",
          },
          "slide.layout-only-child box.title": {
            fontSize: "82px",
            fontWeight: "bold",
          },
          "slide.layout-only-child box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-only-child box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
          "slide.layout-fishbone box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-fishbone box.fishboneHead": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
          },
          "slide.layout-fishbone box.fishbone": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone-head box.fishbone": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHead": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHeadSubtopicLeadingLine": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-timeline box.timelineMain": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-timeline box.timelineVertical": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.timelineTimePoint": { fillColor: "#000" },
          "slide.layout-timeline-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline-head box.timelineMain": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineVertical": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineTimePoint": {
            fillColor: "#000",
          },
          "slide.layout-timeline-head box.timelineSubtopicLeadingLine": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-imageable-parent-slide box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-imageable-children-slide box.title": {
            fontWeight: "bold",
          },
          "slide.layout-imageable-list-slide box.title": {
            opacity: 0.5,
            filter: "blur(50px)",
          },
          "slide.layout-only-child-imageable-parent box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
          "slide.layout-only-imageable-child  box.title": {
            fontWeight: "bold",
          },
          "slide.layout-only-imageable-child box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
        },
        dimension: {
          "16:9": k,
          "4:3": r.inheritDimension(k, {
            fishboneSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            fishboneSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            fishboneSlideFishboneHeadInterval: { pct: 47, unit: "vmin" },
            fishboneSlideFishboneHeadSpacing: { pct: 9, unit: "vmin" },
            fishboneSlideParentTopicTitleMaxWidth: { pct: 30, unit: "vw" },
            fishboneSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            timelineSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            timelineSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideVerticalLineSpacing: { pct: 3.1, unit: "vmin" },
            timelineSlideVerticalLineInterval: { pct: 16, unit: "vmin" },
          }),
          "9:16": F,
          "3:4": F,
        },
      }),
        (e.innocenceZhBoxStyles = {
          "box.text": {
            fontFamily: ["PingFang SC", "Microsoft YaHei", "sans-serif"],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "bold",
            fontStyle: "normal",
            textColor: "#000",
            textAlignment: "leading",
          },
          "box.htmlNote": {
            fontFamily: ["PingFang SC", "Microsoft YaHei", "sans-serif"],
            fontWeight: "normal",
            opacity: 0.8,
          },
        });
    },
    54021: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.lightTheme = void 0);
      const n = i(91389),
        o = i(77474),
        l = i(4069);
      e.lightTheme = {
        slideStyles: {
          slide: {
            opacity: 1,
            backgroundColor: "#f9f9f9",
            backgroundOpacity: 1,
            foregroundColor: "black",
            hitRegionFillColor: "rgba(196, 196, 196, 0.12)",
            hitRegionActiveFillColor: "rgba(196, 196, 196, 0.3)",
            hitRegionBoxShadow: "0px 1px 21px -7px rgba(0, 0, 0, 0.15)",
            hitRegionStrokeColor: "rgba(185, 185, 185, 0.1)",
            hitRegionLineWidth: 1,
            hitRegionCornerRadius: 18,
            hitRegionHighlightTextColor: "#007AFF",
            opacityForPendingSubtopicsUnderPresenterPerspectiveMode: 0.2,
          },
        },
        boxStyles: {
          box: { opacity: 1, transform: "none" },
          "box.text": {
            fontFamily: [
              "SF Pro Display",
              "-apple-system",
              "Helvetica Neue",
              "Helvetica",
              "Arial",
              "PingFang SC",
              "Microsoft YaHei",
              "sans-serif",
            ],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "normal",
            fontStyle: "normal",
            textColor: "#000",
            textAlignment: "leading",
          },
          "box.shape": { lineWidth: 1, lineCap: "round" },
          "box.headerLine": { strokeColor: "#000", lineCap: "round" },
          "box.labelBorder": { strokeColor: "#000", lineWidth: 2 },
          "box.note": { fontWeight: "normal", opacity: 0.8 },
          "box.callout": {
            fontWeight: "normal",
            fontStyle: "italic",
            opacity: 0.6,
          },
          "box.svg-template.hyperlink": { borderWidth: 2, borderRadius: 4 },
          "slide.layout-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "center",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide.image-placement-full box.text": {
            textShadow: "0 0 8px rgba(0, 0, 0, 0.3)",
          },
          "slide.layout-brace-list box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-brace-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-brace-list box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 8,
            lineCap: "round",
          },
          "slide.layout-lyric-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-lyric-list box.subtopic": {
            fontWeight: "bold",
            overflowWrap: "break-word",
          },
          "slide.layout-lyric-list box.arrow": { fillColor: "#000" },
          "slide.layout-bullet-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-bullet-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-bullet-list box.bulletDot": { fillColor: "#000" },
          "slide.layout-tree-chart box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
          },
          "slide.layout-tree-chart box.treeBranch": {
            strokeColor: "#000",
            lineWidth: 8,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-summary box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-scrollable-summary box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-scrollable-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-only-child box.title": {
            fontSize: "82px",
            fontWeight: "bold",
          },
          "slide.layout-only-child box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-only-child box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
          "slide.layout-fishbone box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-fishbone box.fishboneHead": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
          },
          "slide.layout-fishbone box.fishbone": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone-head box.fishbone": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHead": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHeadSubtopicLeadingLine": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-timeline box.timelineMain": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-timeline box.timelineVertical": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.timelineTimePoint": { fillColor: "#000" },
          "slide.layout-timeline-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline-head box.timelineMain": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineVertical": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineTimePoint": {
            fillColor: "#000",
          },
          "slide.layout-timeline-head box.timelineSubtopicLeadingLine": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-imageable-parent-slide box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-imageable-children-slide box.title": {
            fontWeight: "bold",
          },
          "slide.layout-imageable-list-slide box.title": {
            opacity: 0.5,
            filter: "blur(50px)",
          },
          "slide.layout-only-child-imageable-parent box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
          "slide.layout-only-imageable-child  box.title": {
            fontWeight: "bold",
          },
          "slide.layout-only-imageable-child box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
        },
        dimension: {
          "16:9": n.defaultDimension,
          "4:3": l.inheritDimension(n.defaultDimension, {
            fishboneSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            fishboneSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            fishboneSlideFishboneHeadInterval: { pct: 47, unit: "vmin" },
            fishboneSlideFishboneHeadSpacing: { pct: 9, unit: "vmin" },
            fishboneSlideParentTopicTitleMaxWidth: { pct: 30, unit: "vw" },
            fishboneSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            timelineSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            timelineSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideVerticalLineSpacing: { pct: 3.1, unit: "vmin" },
            timelineSlideVerticalLineInterval: { pct: 16, unit: "vmin" },
          }),
          "9:16": o.portraitDimension,
          "3:4": o.portraitDimension,
        },
      };
    },
    73808: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.midnightRoseZhBoxStyles = e.midnightRoseTheme = void 0);
      const n = i(96486),
        o = i(91389),
        l = i(77474),
        r = i(4069),
        a = "#0C1548",
        s = {
          id: "largePolygon",
          content:
            '<svg width="482" height="482" viewBox="0 0 482 482" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M120.827 0.224312C97.9063 44.3986 38.3409 162.722 0 240.062C39.0256 318.121 81.8573 403.474 120.827 481.408C164.318 482.197 274.548 482.197 361.827 481.408C388.604 427.86 444.119 316.74 482 240.816C442.16 160.87 399.925 77.1534 361.827 0.978519C299.196 0.978519 197.182 -0.563949 120.827 0.224312Z" fill="url(#paint0_radial_1351_439)"/>\n    <defs>\n    <radialGradient id="paint0_radial_1351_439" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(241 241.575) rotate(-180) scale(241 241.575)">\n    <stop stop-color="#010101"/>\n    <stop offset="0.4375" stop-color="#010101"/>\n    <stop offset="1" stop-color="#2A43CA"/>\n    </radialGradient>\n    </defs>\n    </svg>',
        },
        c = {
          id: "mediumPolygon",
          content:
            '<svg width="483" height="482" viewBox="0 0 483 482" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0.33564 361.173C44.5099 384.094 162.834 443.659 240.173 482C318.233 442.974 403.585 400.143 481.52 361.173C482.309 317.682 482.309 207.452 481.52 120.173C427.971 93.3956 316.851 37.8807 240.928 -3.05176e-05C160.982 39.8401 77.2647 82.0749 1.08985 120.173C1.08985 182.804 -0.452621 284.818 0.33564 361.173Z" fill="url(#paint0_radial_1364_486)"/>\n    <defs>\n    <radialGradient id="paint0_radial_1364_486" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(241.687 241) rotate(90) scale(241 241.575)">\n    <stop stop-color="#010101"/>\n    <stop offset="0.4375" stop-color="#010101"/>\n    <stop offset="1" stop-color="#2A43CA"/>\n    </radialGradient>\n    </defs>\n    </svg>',
        },
        d = {
          id: "smallPolygon",
          content:
            '<svg width="352" height="307" viewBox="0 0 352 307" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M88.2385 0.999641C71.5 28.9996 28 104 0 153.022C28.5 202.5 59.7796 256.601 88.2385 306C120 306.5 200.5 306.5 264.238 306C283.794 272.058 324.336 201.624 352 153.5C322.905 102.826 292.061 49.7614 264.238 1.4777C218.5 1.4777 144 0.5 88.2385 0.999641Z" fill="#112385"/>\n    </svg>',
        },
        u = {
          id: "largePolygon",
          content:
            '<svg width="482" height="483" viewBox="0 0 482 483" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M120.83 32.1899C39.552 79.0516 0.000243971 160.774 0 240.68C-0.000243969 320.586 38.9779 403.297 120.83 450.49C186.275 488.223 280.354 497.637 361.83 450.49C443.306 403.343 482.108 321.246 482 241.34C481.891 161.434 443.114 79.8853 361.83 32.8496C287.872 -9.94654 196.094 -11.2044 120.83 32.1899Z" fill="url(#paint0_radial_1351_438)"/>\n    <defs>\n    <radialGradient id="paint0_radial_1351_438" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(241 241.881) rotate(-180) scale(241)">\n    <stop stop-color="#010101"/>\n    <stop offset="0.4375" stop-color="#010101"/>\n    <stop offset="1" stop-color="#2A43CA"/>\n    </radialGradient>\n    </defs>\n    </svg>\n    ',
        },
        p = {
          id: "mediumPolygon",
          content:
            '<svg width="483" height="483" viewBox="0 0 483 483" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M31.9956 361.476C78.8572 442.754 160.58 482.305 240.486 482.306C320.391 482.306 403.102 443.328 450.296 361.476C488.029 296.031 497.442 201.952 450.296 120.476C403.149 38.9997 321.051 0.197235 241.146 0.305847C161.24 0.414459 79.6909 39.1912 32.6553 120.476C-10.1409 194.434 -11.3988 286.211 31.9956 361.476Z" fill="url(#paint0_radial_1364_485)"/>\n    <defs>\n    <radialGradient id="paint0_radial_1364_485" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(241.687 241.306) rotate(90) scale(241)">\n    <stop stop-color="#010101"/>\n    <stop offset="0.4375" stop-color="#010101"/>\n    <stop offset="1" stop-color="#2A43CA"/>\n    </radialGradient>\n    </defs>\n    </svg>',
        },
        h = {
          id: "smallPolygon",
          content:
            '<svg width="353" height="308" viewBox="0 0 353 308" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M88.3523 20.5638C28.9958 50.3976 0.111506 102.425 0.111328 153.296C0.11115 204.167 28.5765 256.823 88.3523 286.868C136.146 310.891 204.851 316.883 264.352 286.868C323.853 256.853 352.19 204.587 352.111 153.716C352.032 102.845 323.714 50.9284 264.352 20.9838C210.341 -6.2617 143.317 -7.06251 88.3523 20.5638Z" fill="#112385"/>\n    </svg>',
        },
        g = [
          [
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  translate: {
                    x: { pct: 68.1, unit: "vw" },
                    y: { pct: 8.9, unit: "vh" },
                  },
                  scale: 1.7,
                  rotate: 15,
                },
                "9:16": {
                  content: d.content,
                  translate: {
                    x: { pct: 54.4, unit: "vw" },
                    y: { pct: 37.5, unit: "vh" },
                  },
                  scale: 1.54,
                  rotate: 15,
                },
              },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  translate: {
                    x: { pct: 65.6, unit: "vw" },
                    y: { pct: -2.2, unit: "vh" },
                  },
                  scale: { x: 1.83, y: 2 },
                  rotate: 15,
                },
                "9:16": {
                  content: c.content,
                  translate: {
                    x: { pct: 44.4, unit: "vw" },
                    y: { pct: 31.3, unit: "vh" },
                  },
                  scale: { x: 1.61, y: 1.76 },
                  rotate: 15,
                },
              },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  translate: {
                    x: { pct: 65.6, unit: "vw" },
                    y: { pct: -2.2, unit: "vh" },
                  },
                  scale: { x: 2.83, y: 2.49 },
                  rotate: 15,
                },
                "9:16": {
                  content: s.content,
                  translate: {
                    x: { pct: 44.4, unit: "vw" },
                    y: { pct: 31.3, unit: "vh" },
                  },
                  scale: { x: 2.56, y: 2.25 },
                  rotate: 15,
                },
              },
            },
          ],
          [
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 84.4, unit: "vw" },
                    y: { pct: 77.8, unit: "vh" },
                  },
                  scale: 0.608,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: 66.7, unit: "vh" },
                  },
                  scale: 0.664,
                },
              },
            },
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: 66.7, unit: "vh" },
                  },
                  scale: 0.936,
                },
              },
            },
          ],
        ],
        f = [
          [
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  translate: {
                    x: { pct: 19.4, unit: "vw" },
                    y: { pct: 57.8, unit: "vh" },
                  },
                  scale: 1.7,
                  rotate: 15,
                },
                "9:16": {
                  content: d.content,
                  translate: {
                    x: { pct: 5.6, unit: "vw" },
                    y: { pct: 46.9, unit: "vh" },
                  },
                  scale: 1.46,
                  rotate: 165,
                },
              },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  translate: {
                    x: { pct: 16.3, unit: "vw" },
                    y: { pct: 53.2, unit: "vh" },
                  },
                  scale: { x: 1.83, y: 2 },
                  rotate: 15,
                },
                "9:16": {
                  content: c.content,
                  translate: {
                    x: { pct: 0, unit: "vw" },
                    y: { pct: 40.6, unit: "vh" },
                  },
                  scale: { x: 1.57, y: 1.72 },
                  rotate: 165,
                },
              },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  translate: {
                    x: { pct: 13.8, unit: "vw" },
                    y: { pct: 53.3, unit: "vh" },
                  },
                  scale: { x: 2.83, y: 2.49 },
                  rotate: 15,
                },
                "9:16": {
                  content: s.content,
                  translate: {
                    x: { pct: 0, unit: "vw" },
                    y: { pct: 40.6, unit: "vh" },
                  },
                  scale: { x: 2.43, y: 2.14 },
                  rotate: 165,
                },
              },
            },
          ],
          [
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 83.8, unit: "vw" },
                    y: { pct: 48.9, unit: "vh" },
                  },
                  scale: 0.608,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: 38.9, unit: "vh" },
                  },
                  scale: 0.664,
                },
              },
            },
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: 38.9, unit: "vh" },
                  },
                  scale: 0.936,
                },
              },
            },
          ],
        ],
        m = [
          [
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  translate: {
                    x: { pct: 15.6, unit: "vw" },
                    y: { pct: 5.6, unit: "vh" },
                  },
                  scale: 1.7,
                  rotate: 15,
                },
                "9:16": {
                  content: d.content,
                  translate: {
                    x: { pct: 54.4, unit: "vw" },
                    y: { pct: 37.5, unit: "vh" },
                  },
                  scale: 1.54,
                  rotate: 15,
                },
              },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  translate: {
                    x: { pct: 12.5, unit: "vw" },
                    y: { pct: -5.6, unit: "vh" },
                  },
                  scale: { x: 1.83, y: 2 },
                  rotate: 15,
                },
                "9:16": {
                  content: c.content,
                  translate: {
                    x: { pct: 44.4, unit: "vw" },
                    y: { pct: 31.3, unit: "vh" },
                  },
                  scale: { x: 1.61, y: 1.76 },
                  rotate: 15,
                },
              },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  translate: {
                    x: { pct: 12.5, unit: "vw" },
                    y: { pct: -13.3, unit: "vh" },
                  },
                  scale: { x: 2.83, y: 2.49 },
                  rotate: 15,
                },
                "9:16": {
                  content: s.content,
                  translate: {
                    x: { pct: 44.4, unit: "vw" },
                    y: { pct: 31.3, unit: "vh" },
                  },
                  scale: { x: 2.56, y: 2.25 },
                  rotate: 15,
                },
              },
            },
          ],
          [
            {
              id: h.content,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 83.4, unit: "vw" },
                    y: { pct: -9.4, unit: "vh" },
                  },
                  scale: 0.608,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: -20, unit: "vh" },
                  },
                  scale: 0.664,
                },
              },
            },
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: -20, unit: "vh" },
                  },
                  scale: 0.936,
                },
              },
            },
          ],
        ],
        b = [
          [
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  translate: {
                    x: { pct: 65.6, unit: "vw" },
                    y: { pct: 66.7, unit: "vh" },
                  },
                  scale: 1.7,
                  rotate: 15,
                },
                "9:16": {
                  content: d.content,
                  translate: {
                    x: { pct: 5.6, unit: "vw" },
                    y: { pct: 46.9, unit: "vh" },
                  },
                  scale: 1.46,
                  rotate: 165,
                },
              },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  translate: {
                    x: { pct: 62.5, unit: "vw" },
                    y: { pct: 55.6, unit: "vh" },
                  },
                  scale: { x: 1.83, y: 2 },
                  rotate: 15,
                },
                "9:16": {
                  content: c.content,
                  translate: {
                    x: { pct: 0, unit: "vw" },
                    y: { pct: 40.6, unit: "vh" },
                  },
                  scale: { x: 1.57, y: 1.72 },
                  rotate: 165,
                },
              },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  translate: {
                    x: { pct: 62.5, unit: "vw" },
                    y: { pct: 55.6, unit: "vh" },
                  },
                  scale: { x: 2.83, y: 2.49 },
                  rotate: 15,
                },
                "9:16": {
                  content: s.content,
                  translate: {
                    x: { pct: 0, unit: "vw" },
                    y: { pct: 40.6, unit: "vh" },
                  },
                  scale: { x: 2.43, y: 2.14 },
                  rotate: 165,
                },
              },
            },
          ],
          [
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 83.4, unit: "vw" },
                    y: { pct: -9.4, unit: "vh" },
                  },
                  scale: 0.608,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: -20, unit: "vh" },
                  },
                  scale: 0.664,
                },
              },
            },
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  translate: {
                    x: { pct: 79.4, unit: "vw" },
                    y: { pct: -20, unit: "vh" },
                  },
                  scale: 0.936,
                },
              },
            },
          ],
        ],
        v = n.shuffle([g, f, m, b]),
        x = v.map((t) => t[0]),
        y = v.map((t) => t[1]),
        S = {
          backgroundShapeTemplates: [
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  translate: {
                    x: { pct: 40, unit: "vw" },
                    y: { pct: 31.1, unit: "vh" },
                  },
                  scale: 2.24,
                  rotate: 165,
                },
                "9:16": {
                  content: d.content,
                  translate: {
                    x: { pct: 30, unit: "vw" },
                    y: { pct: 40.6, unit: "vh" },
                  },
                  scale: 1.95,
                  rotate: 165,
                },
              },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  translate: {
                    x: { pct: 34.4, unit: "vw" },
                    y: { pct: 22.2, unit: "vh" },
                  },
                  scale: { x: 2.37, y: 2.6 },
                  rotate: 165,
                },
                "9:16": {
                  content: c.content,
                  translate: {
                    x: { pct: 23.2, unit: "vw" },
                    y: { pct: 34.7, unit: "vh" },
                  },
                  scale: { x: 2.07, y: 2.27 },
                  rotate: 165,
                },
              },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  translate: {
                    x: { pct: 34.4, unit: "vw" },
                    y: { pct: 22.2, unit: "vh" },
                  },
                  scale: { x: 3.76, y: 3.32 },
                  rotate: 165,
                },
                "9:16": {
                  content: s.content,
                  translate: {
                    x: { pct: 23.2, unit: "vw" },
                    y: { pct: 34.7, unit: "vh" },
                  },
                  scale: { x: 3.28, y: 2.9 },
                  rotate: 165,
                },
              },
            },
          ],
          backgroundColorBricks: [
            {
              id: "dark-blue",
              styles: {
                "16:9": {
                  offsetRatio: { x: 0, y: 0 },
                  sizeRatio: { width: 0, height: 1 },
                  color: a,
                },
                "9:16": {
                  offsetRatio: { x: 0, y: 0 },
                  sizeRatio: { width: 1, height: 0 },
                  color: a,
                },
              },
            },
          ],
        },
        w = r.inheritDimension(o.defaultDimension, {
          topicSlideTitleFontSizeLarge: { pct: 20, unit: "vmin" },
          topicSlideTitleFontSizeMedium: { pct: 14, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 9, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 9, unit: "vmin" },
          topicSlideLeftTitleFontSize: { pct: 9, unit: "vmin" },
          braceListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          braceListSlideParentTopicMinFontSize: { pct: 11, unit: "vmin" },
          braceListSlideParentTopicZoneWidthRatio: 0.47,
          braceListSlideParentTopicRightPadding: { pct: 13, unit: "vmin" },
          braceListSlideParentTopicMaxLineCount: 3,
          braceListSlideParentTopicPreferredLineCount: 1,
          braceListSlideSubtopicMaxFontSize: { pct: 8, unit: "vmin" },
          braceListSlideSubtopicMinFontSize: { pct: 8, unit: "vmin" },
          braceListSlideSubtopicListLeftPadding: { pct: 6.89, unit: "vmin" },
          braceListSlideSubtopicListRightPadding: { pct: 0, unit: "vmin" },
          braceListSlideBraceShapeGroupMaxWidth: 0,
          braceListSlideBraceShapeLineWidth: 6,
          bulletListSlideSubtopicMaxFontSize: { pct: 8, unit: "vmin" },
          bulletListSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          bulletListSlideBulletDotSizeRatio: 0.48,
          bulletListSlideBulletDotStrokeLineWidth: 6,
          bulletListSlideBulletDotRightMargin: { pct: 4, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 5, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 10, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 10, unit: "vmin" },
          lyricListSlideContentBottomPadding: 0,
          lyricListSlideParentTopicBottomMargin: { pct: 4, unit: "vmin" },
          lyricListSlideCentralTopicParentTopicBottomMargin: {
            pct: 4,
            unit: "vmin",
          },
          lyricListSlideSubtopicSpacing: { pct: 8, unit: "vmin" },
          lyricListSlideCentralTopicSubtopicSpacing: { pct: 8, unit: "vmin" },
          lyricListSlideArrowWidth: 33,
          lyricListSlideArrowHeight: 33,
          lyricListSlideArrowCornerRadius: 3,
          treeChartSlideTreeBranchRightMargin: { pct: 0, unit: "vmin" },
          treeChartSlideTreeBranchLeftMarginRatio: 0,
          treeChartSlideTreeBranchWidthRatio: 0,
          fishboneSlideParentTopicMaxFontSize: { pct: 7, unit: "vmin" },
          fishboneSlideParentTopicMinFontSize: { pct: 6, unit: "vmin" },
          fishboneSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          fishboneSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          timelineSlideParentTopicMaxFontSize: { pct: 7, unit: "vmin" },
          timelineSlideParentTopicMinFontSize: { pct: 6, unit: "vmin" },
          timelineSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          timelineSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
        }),
        C = r.inheritDimension(l.portraitDimension, {
          topicSlideTitleFontSizeLarge: { pct: 13, unit: "vmin" },
          topicSlideTitleFontSizeMedium: { pct: 10, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 7, unit: "vmin" },
          topicSlideLeftTitleFontSize: { pct: 10, unit: "vmin" },
          braceListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          braceListSlideParentTopicMinFontSize: { pct: 10, unit: "vmin" },
          braceListSlideParentTopicMaxLineCount: 3,
          braceListSlideParentTopicPreferredLineCount: 1,
          bulletListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideBulletDotSizeRatio: 0.48,
          lyricListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 6.4, unit: "vmin" },
          lyricListSlideCurrentSubtopicOffsetRatio: 0.43,
          treeChartSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          treeChartSlideParentTopicMinFontSize: { pct: 10, unit: "vmin" },
          treeChartSlideParentTopicMaxLineCount: 1,
          treeChartSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          treeChartSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          treeChartSlideParentTopicBottomMargin: { pct: 11, unit: "vmin" },
          treeChartSlideTreeBranchRightMargin: { pct: 0, unit: "vmin" },
          treeChartSlideTreeBranchLeftMarginRatio: 0,
          treeChartSlideTreeBranchWidthRatio: 0,
        });
      (e.midnightRoseTheme = {
        slideStyles: {
          slide: {
            opacity: 1,
            backgroundColor: "#2C47D8",
            backgroundOpacity: 1,
            foregroundColor: "white",
            watermarkColor: "white",
            hitRegionFillColor: "rgba(196, 196, 196, 0.12)",
            hitRegionActiveFillColor: "rgba(196, 196, 196, 0.3)",
            hitRegionBoxShadow: "0px 1px 21px -7px rgba(0, 0, 0, 0.25)",
            hitRegionStrokeColor: "rgba(185, 185, 185, 0.1)",
            hitRegionCornerRadius: 18,
            hitRegionLineWidth: 1,
            hitRegionHighlightTextColor: "#45A2FF",
            opacityForPendingSubtopicsUnderPresenterPerspectiveMode: 0.3,
            braceCurveShapeStyle: "none",
            braceSubtopicIndicatorShapeStyle: "underline",
            bulletDotShapeStyle: "midnight-rose",
            lyricParentIndicatorShapeStyle: "underline",
            treeChartSubtopicIndicatorShapeStyle: "underline",
            treeChartTreeBranchShapeStyle: "none",
            backgroundShapeLaunchEffect: "scale",
            backgroundShapeGroupCount: 4,
            backgroundShapeTemplates: x
              .map((t, e) =>
                t.map((t) => ({
                  id: t.id,
                  styles: r.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
              )
              .reduce((t, e) => t.concat(e)),
            backgroundColorBricks: [
              {
                id: "dark-blue",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 0, height: 1 },
                    color: a,
                  },
                  "9:16": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 1, height: 0 },
                    color: a,
                  },
                },
              },
            ],
            normalImageOutlineWidth: 10,
          },
          "slide.topic.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: d.id,
                styles: {
                  "16:9": {
                    content: d.content,
                    translate: {
                      x: { pct: 38.3, unit: "vw" },
                      y: { pct: 33.1, unit: "vh" },
                    },
                  },
                  "4:3": {
                    content: d.content,
                    translate: {
                      x: { pct: 35.3, unit: "vw" },
                      y: { pct: 33.1, unit: "vh" },
                    },
                  },
                  "9:16": {
                    content: d.content,
                    translate: {
                      x: { pct: 29.2, unit: "vw" },
                      y: { pct: 37.4, unit: "vh" },
                    },
                  },
                },
              },
              {
                id: c.id,
                styles: {
                  "16:9": {
                    content: c.content,
                    translate: {
                      x: { pct: 34.4, unit: "vw" },
                      y: { pct: 23.4, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                  },
                  "4:3": {
                    content: c.content,
                    translate: {
                      x: { pct: 29.8, unit: "vw" },
                      y: { pct: 23.4, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                  },
                  "9:16": {
                    content: c.content,
                    translate: {
                      x: { pct: 22.3, unit: "vw" },
                      y: { pct: 31.9, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                  },
                },
              },
              {
                id: s.id,
                styles: {
                  "16:9": {
                    content: s.content,
                    translate: {
                      x: { pct: 34.7, unit: "vw" },
                      y: { pct: 23.2, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                  },
                  "4:3": {
                    content: s.content,
                    translate: {
                      x: { pct: 30, unit: "vw" },
                      y: { pct: 23.2, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                  },
                  "9:16": {
                    content: s.content,
                    translate: {
                      x: { pct: 22.7, unit: "vw" },
                      y: { pct: 31.8, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                  },
                },
              },
            ],
            backgroundColorBricks: [
              {
                id: "dark-blue",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 1, height: 1 },
                    color: a,
                  },
                },
              },
            ],
          },
          "slide.epilogue": {
            backgroundShapeTemplates: [
              {
                id: d.id,
                styles: {
                  "16:9": {
                    content: d.content,
                    translate: {
                      x: { pct: 38.3, unit: "vw" },
                      y: { pct: 33.1, unit: "vh" },
                    },
                  },
                  "4:3": {
                    content: d.content,
                    translate: {
                      x: { pct: 35.3, unit: "vw" },
                      y: { pct: 33.1, unit: "vh" },
                    },
                  },
                  "9:16": {
                    content: d.content,
                    translate: {
                      x: { pct: 29.2, unit: "vw" },
                      y: { pct: 37.4, unit: "vh" },
                    },
                  },
                },
              },
              {
                id: c.id,
                styles: {
                  "16:9": {
                    content: c.content,
                    translate: {
                      x: { pct: 34.4, unit: "vw" },
                      y: { pct: 23.4, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                  },
                  "4:3": {
                    content: c.content,
                    translate: {
                      x: { pct: 29.8, unit: "vw" },
                      y: { pct: 23.4, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                  },
                  "9:16": {
                    content: c.content,
                    translate: {
                      x: { pct: 22.3, unit: "vw" },
                      y: { pct: 31.9, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                  },
                },
              },
              {
                id: s.id,
                styles: {
                  "16:9": {
                    content: s.content,
                    translate: {
                      x: { pct: 34.7, unit: "vw" },
                      y: { pct: 23.2, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                  },
                  "4:3": {
                    content: s.content,
                    translate: {
                      x: { pct: 30, unit: "vw" },
                      y: { pct: 23.2, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                  },
                  "9:16": {
                    content: s.content,
                    translate: {
                      x: { pct: 22.7, unit: "vw" },
                      y: { pct: 31.8, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                  },
                },
              },
            ],
            backgroundColorBricks: [
              {
                id: "dark-blue",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 1, height: 1 },
                    color: a,
                  },
                },
              },
            ],
          },
          "slide.list.layout-brace-list": {
            backgroundShapeTemplates: [
              {
                id: d.id,
                styles: {
                  "16:9": {
                    content: d.content,
                    translate: {
                      x: { pct: 16.4, unit: "vw" },
                      y: { pct: 33.1, unit: "vh" },
                    },
                  },
                  "4:3": {
                    content: d.content,
                    translate: {
                      x: { pct: 13.3, unit: "vw" },
                      y: { pct: 33.1, unit: "vh" },
                    },
                    scale: 0.72,
                  },
                },
              },
              {
                id: c.id,
                styles: {
                  "16:9": {
                    content: c.content,
                    translate: {
                      x: { pct: 12, unit: "vw" },
                      y: { pct: 22.5, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                  },
                  "4:3": {
                    content: c.content,
                    translate: {
                      x: { pct: 7.8, unit: "vw" },
                      y: { pct: 22.5, unit: "vh" },
                    },
                    scale: { x: 0.77, y: 0.84 },
                  },
                },
              },
              {
                id: s.id,
                styles: {
                  "16:9": {
                    content: s.content,
                    translate: {
                      x: { pct: 12.2, unit: "vw" },
                      y: { pct: 23, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                  },
                  "4:3": {
                    content: s.content,
                    translate: {
                      x: { pct: 7.5, unit: "vw" },
                      y: { pct: 23, unit: "vh" },
                    },
                    scale: { x: 1.2, y: 1.07 },
                  },
                },
              },
            ],
            backgroundColorBricks: [
              {
                id: "dark-blue",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 0.55, height: 1 },
                    color: a,
                  },
                },
              },
            ],
          },
          "slide.list.layout-bullet-list": {
            backgroundShapeTemplates: [
              {
                id: d.id,
                styles: {
                  "16:9": {
                    content: d.content,
                    translate: {
                      x: { pct: 77.6, unit: "vw" },
                      y: { pct: 64.2, unit: "vh" },
                    },
                    rotate: 15,
                  },
                  "9:16": {
                    content: d.content,
                    translate: {
                      x: { pct: 62.2, unit: "vw" },
                      y: { pct: 75, unit: "vh" },
                    },
                    rotate: 15,
                    scale: 1.02,
                  },
                },
              },
              {
                id: c.id,
                styles: {
                  "16:9": {
                    content: c.content,
                    translate: {
                      x: { pct: 73.8, unit: "vw" },
                      y: { pct: 52.3, unit: "vh" },
                    },
                    scale: { x: 1.06, y: 1.16 },
                    rotate: 15,
                  },
                  "9:16": {
                    content: c.content,
                    translate: {
                      x: { pct: 55.6, unit: "vw" },
                      y: { pct: 68.8, unit: "vh" },
                    },
                    scale: { x: 1.08, y: 1.18 },
                    rotate: 15,
                  },
                },
              },
              {
                id: s.id,
                styles: {
                  "16:9": {
                    content: s.content,
                    translate: {
                      x: { pct: 71.5, unit: "vw" },
                      y: { pct: 49.9, unit: "vh" },
                    },
                    scale: { x: 1.68, y: 1.48 },
                    rotate: 15,
                  },
                  "9:16": {
                    content: s.content,
                    translate: {
                      x: { pct: 55.6, unit: "vw" },
                      y: { pct: 68.8, unit: "vh" },
                    },
                    scale: { x: 1.71, y: 1.51 },
                    rotate: 15,
                  },
                },
              },
            ],
          },
          "slide.list.layout-lyric-list": {
            backgroundShapeTemplates: [
              {
                id: d.id,
                styles: {
                  "16:9": {
                    content: d.content,
                    translate: {
                      x: { pct: 75.1, unit: "vw" },
                      y: { pct: -1.1, unit: "vh" },
                    },
                    scale: 0.57,
                    rotate: 165,
                  },
                  "4:3": {
                    content: d.content,
                    translate: {
                      x: { pct: 76.8, unit: "vw" },
                      y: { pct: -1.1, unit: "vh" },
                    },
                    scale: 0.57,
                    rotate: 165,
                  },
                  "9:16": {
                    content: d.content,
                    translate: {
                      x: { pct: 78.4, unit: "vw" },
                      y: { pct: -5, unit: "vh" },
                    },
                    scale: 0.7,
                    rotate: 165,
                  },
                  "3:4": {
                    content: d.content,
                    translate: {
                      x: { pct: 77.2, unit: "vw" },
                      y: { pct: -2.5, unit: "vh" },
                    },
                    scale: 0.7,
                    rotate: 165,
                  },
                },
              },
              {
                id: c.id,
                styles: {
                  "16:9": {
                    content: c.content,
                    translate: {
                      x: { pct: 71.3, unit: "vw" },
                      y: { pct: -11.2, unit: "vh" },
                    },
                    scale: { x: 0.61, y: 0.66 },
                    rotate: 165,
                  },
                  "9:16": {
                    content: c.content,
                    translate: {
                      x: { pct: 71.3, unit: "vw" },
                      y: { pct: -11.2, unit: "vh" },
                    },
                    scale: { x: 0.76, y: 0.82 },
                    rotate: 165,
                  },
                },
              },
              {
                id: s.id,
                styles: {
                  "16:9": {
                    content: s.content,
                    translate: {
                      x: { pct: 70.9, unit: "vw" },
                      y: { pct: -12.1, unit: "vh" },
                    },
                    scale: { x: 0.96, y: 0.85 },
                    rotate: 165,
                  },
                  "9:16": {
                    content: s.content,
                    translate: {
                      x: { pct: 70.9, unit: "vw" },
                      y: { pct: -12.1, unit: "vh" },
                    },
                    scale: { x: 1.2, y: 1.06 },
                    rotate: 165,
                  },
                },
              },
            ],
            backgroundColorBricks: [
              {
                id: "dark-blue",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 1, height: 1 },
                    color: a,
                  },
                },
              },
            ],
          },
          "slide.list.layout-tree-chart": {
            backgroundShapeTemplates: [
              {
                id: d.id,
                styles: {
                  "9:16": {
                    content: d.content,
                    translate: {
                      x: { pct: 5.6, unit: "vw" },
                      y: { pct: -3.1, unit: "vh" },
                    },
                    scale: 0.81,
                    rotate: 15,
                  },
                  "3:4": {
                    content: d.content,
                    translate: {
                      x: { pct: 5.6, unit: "vw" },
                      y: { pct: -13.1, unit: "vh" },
                    },
                    scale: 0.81,
                    rotate: 15,
                  },
                },
              },
              {
                id: c.id,
                styles: {
                  "9:16": {
                    content: c.content,
                    translate: {
                      x: { pct: -1.1, unit: "vw" },
                      y: { pct: -8.8, unit: "vh" },
                    },
                    scale: { x: 0.86, y: 0.94 },
                    rotate: 15,
                  },
                  "3:4": {
                    content: c.content,
                    translate: {
                      x: { pct: -1.1, unit: "vw" },
                      y: { pct: -18.8, unit: "vh" },
                    },
                    scale: { x: 0.86, y: 0.94 },
                    rotate: 15,
                  },
                },
              },
              {
                id: s.id,
                styles: {
                  "9:16": {
                    content: s.content,
                    translate: {
                      x: { pct: -1.1, unit: "vw" },
                      y: { pct: -8.8, unit: "vh" },
                    },
                    scale: { x: 1.37, y: 1.21 },
                    rotate: 15,
                  },
                  "3:4": {
                    content: s.content,
                    translate: {
                      x: { pct: -1.1, unit: "vw" },
                      y: { pct: -18.8, unit: "vh" },
                    },
                    scale: { x: 1.37, y: 1.21 },
                    rotate: 15,
                  },
                },
              },
            ],
            backgroundColorBricks: [
              {
                id: "dark-blue",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 1, height: 0.314 },
                    color: a,
                  },
                },
              },
            ],
          },
          "slide.topic.level-mainTopic": S,
          "slide.topic.level-floatingTopic": S,
          "slide.topic.content-principal-note": {
            titlePlacement: "left",
            backgroundShapeTemplates: y
              .map((t, e) =>
                t.map((t) => ({
                  id: t.id,
                  styles: r.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
              )
              .reduce((t, e) => t.concat(e)),
            backgroundColorBricks: [
              {
                id: "dark-blue",
                styles: {
                  "16:9": {
                    offsetRatio: { x: 0, y: 0 },
                    sizeRatio: { width: 0.47, height: 1 },
                    color: a,
                  },
                },
              },
            ],
          },
        },
        boxStyles: {
          box: { opacity: 1, transform: "none" },
          "box.text": {
            fontFamily: ["Audiowide", "sans-serif"],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "bold",
            fontStyle: "normal",
            textColor: "#fff",
            textAlignment: "leading",
          },
          "box.shape": { lineWidth: 1, lineCap: "round" },
          "box.headerLine": { strokeColor: "#fff", lineCap: "round" },
          "box.labelBorder": { strokeColor: "#fff", lineWidth: 2 },
          "box.note": { fontWeight: "bold", opacity: 0.8 },
          "box.htmlNote": { fontWeight: "normal", opacity: 0.8 },
          "slide.layout-topic-slide.content-principal-note box.note": {
            fontFamily: ["SF-Pro", "sans-serif"],
          },
          "box.callout": {
            fontWeight: "bold",
            fontStyle: "italic",
            opacity: 0.6,
          },
          "box.svg-template.hyperlink": { borderWidth: 2, borderRadius: 4 },
          "slide.layout-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "center",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide.image-placement-full box.text": {
            textShadow: "0 0 8px rgba(0, 0, 0, 0.3)",
          },
          "slide.layout-image-topic-slide box.image": { outlineColor: "#FFF" },
          "slide.layout-brace-list box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-brace-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-brace-list box.curlyBrace": {
            strokeColor: "#fff",
            lineWidth: 8,
            lineCap: "round",
          },
          "slide.layout-brace-list box.indicator": {
            strokeColor: "#fff",
            lineWidth: 2,
            lineCap: "round",
          },
          "slide.layout-bullet-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-bullet-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-bullet-list box.bulletDot": { fillColor: "#fff" },
          "slide.layout-lyric-list box.title": {
            fontSize: "60px",
            fontWeight: "bold",
          },
          "slide.layout-lyric-list box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-lyric-list box.arrow": { fillColor: "#fff" },
          "slide.layout-lyric-list box.primaryIndicator": {
            strokeColor: "#fff",
            lineWidth: 2,
            lineCap: "round",
          },
          "slide.layout-tree-chart box.title": {
            fontWeight: "bold",
            textAlignment: "leading",
          },
          "slide.layout-tree-chart box.indicator": {
            strokeColor: "#fff",
            lineWidth: 2,
            lineCap: "round",
          },
          "slide.layout-tree-chart box.treeBranch": {
            strokeColor: "#fff",
            lineWidth: 8,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-summary box.curlyBrace": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-scrollable-summary box.curlyBrace": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-scrollable-summary box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-only-child box.title": {
            fontSize: "82px",
            fontWeight: "bold",
          },
          "slide.layout-only-child box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-only-child box.separatorLine": {
            strokeColor: "#fff",
            lineCap: "round",
          },
          "slide.layout-fishbone box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-fishbone box.fishboneHead": {
            strokeColor: "#FFF",
            lineWidth: 4,
            lineCap: "round",
          },
          "slide.layout-fishbone box.fishbone": {
            strokeColor: "#FFF",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone-head box.fishbone": {
            strokeColor: "#FFF",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHead": {
            strokeColor: "#FFF",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHeadSubtopicLeadingLine": {
            strokeColor: "#FFF",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-timeline box.timelineMain": {
            strokeColor: "#fff",
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-timeline box.timelineVertical": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.timelineTimePoint": { fillColor: "#fff" },
          "slide.layout-timeline-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline-head box.timelineMain": {
            strokeColor: "#fff",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineVertical": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineTimePoint": {
            fillColor: "#fff",
          },
          "slide.layout-timeline-head box.timelineSubtopicLeadingLine": {
            strokeColor: "#fff",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-imageable-parent-slide box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-imageable-children-slide box.title": {
            fontWeight: "bold",
          },
          "slide.layout-imageable-list-slide box.title": {
            opacity: 0.7,
            filter: "blur(50px)",
          },
          "slide.layout-only-child-imageable-parent box.separatorLine": {
            strokeColor: "#fff",
            lineCap: "round",
          },
          "slide.layout-only-imageable-child  box.title": {
            fontWeight: "bold",
          },
          "slide.layout-only-imageable-child box.separatorLine": {
            strokeColor: "#fff",
            lineCap: "round",
          },
        },
        dimension: {
          "16:9": w,
          "4:3": r.inheritDimension(w, {
            topicSlideLeftTitleFontSize: { pct: 7, unit: "vmin" },
            braceListSlideParentTopicMaxFontSize: { pct: 11, unit: "vmin" },
            braceListSlideParentTopicMinFontSize: { pct: 9, unit: "vmin" },
            braceListSlideSubtopicMaxFontSize: { pct: 6.5, unit: "vmin" },
            braceListSlideSubtopicMinFontSize: { pct: 6.5, unit: "vmin" },
            fishboneSlideParentTopicMaxFontSize: { pct: 5.5, unit: "vmin" },
            fishboneSlideParentTopicMinFontSize: { pct: 4.4, unit: "vmin" },
            fishboneSlideSubtopicMaxFontSize: { pct: 4.4, unit: "vmin" },
            fishboneSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            fishboneSlideFishboneHeadInterval: { pct: 47, unit: "vmin" },
            fishboneSlideFishboneHeadSpacing: { pct: 9, unit: "vmin" },
            fishboneSlideParentTopicTitleMaxWidth: { pct: 30, unit: "vw" },
            fishboneSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideParentTopicMaxFontSize: { pct: 5.5, unit: "vmin" },
            timelineSlideParentTopicMinFontSize: { pct: 4.4, unit: "vmin" },
            timelineSlideSubtopicMaxFontSize: { pct: 4.4, unit: "vmin" },
            timelineSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            timelineSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideVerticalLineSpacing: { pct: 3.1, unit: "vmin" },
            timelineSlideVerticalLineInterval: { pct: 16, unit: "vmin" },
          }),
          "9:16": C,
          "3:4": C,
        },
      }),
        (e.midnightRoseZhBoxStyles = {
          "box.text": {
            fontFamily: ["PingFang SC", "Microsoft YaHei", "sans-serif"],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "bold",
            fontStyle: "normal",
            textColor: "#fff",
            textAlignment: "leading",
          },
          "slide.layout-topic-slide.content-principal-note box.note": {
            fontFamily: ["PingFang SC", "Microsoft YaHei", "sans-serif"],
          },
        });
    },
    51730: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.shapeForYouTheme = void 0);
      const n = i(4069),
        o = i(96486),
        l = i(91389),
        r = i(77474),
        a = {
          id: "star",
          content:
            '<svg width="263" height="263" viewBox="0 0 263 263" xmlns="http://www.w3.org/2000/svg">\n    <path d="M76.418 25.8821C77.3498 -0.519697 111.892 -9.77527 125.9 12.6235C134.827 26.8985 154.555 29.4957 166.873 18.0177C186.201 0.00765991 217.17 17.888 211.237 43.6314C207.456 60.038 219.569 75.8241 236.395 76.418C262.797 77.3498 272.053 111.892 249.654 125.9C235.379 134.827 232.782 154.555 244.26 166.873C262.27 186.201 244.389 217.17 218.646 211.237C202.239 207.456 186.453 219.569 185.859 236.395C184.928 262.797 150.385 272.053 136.377 249.654C127.45 235.379 107.722 232.782 95.4045 244.26C76.0766 262.27 45.1069 244.389 51.0401 218.646C54.8214 202.239 42.7084 186.453 25.8821 185.859C-0.519697 184.928 -9.77527 150.385 12.6235 136.377C26.8985 127.45 29.4957 107.722 18.0177 95.4045C0.00765991 76.0766 17.888 45.1069 43.6314 51.0401C60.038 54.8214 75.8241 42.7084 76.418 25.8821Z"/>\n    </svg>',
        },
        s = {
          id: "polygon1",
          content:
            '<svg width="311" height="179" viewBox="0 0 311 179" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 146.861L56.3746 17.8787L173.822 0L293.461 29.7979V82.3698L311 134.942L173.822 179L0 146.861Z"/>\n    </svg>',
        },
        c = {
          id: "polygon2",
          content:
            '<svg width="264" height="165" viewBox="0 0 264 165" xmlns="http://www.w3.org/2000/svg">\n    <path d="M251.416 119.402V21.1538L64.4926 0L0 119.402L87.0387 151.838L187.186 135.385L264 165L251.416 119.402Z"/>\n    </svg>',
        },
        d = {
          id: "polygon3",
          content:
            '<svg width="319" height="166" viewBox="0 0 319 166" xmlns="http://www.w3.org/2000/svg">\n    <path d="M273.006 165.007L318.781 46.0195L189.592 30.104L92.3291 0.710106L0.0180553 59.9876L36.0121 160.428L195.818 157.534L238.484 150.808L273.006 165.007Z"/>\n    </svg>',
        },
        u = {
          id: "polygon4",
          content:
            '<svg width="279" height="197" viewBox="0 0 279 197" xmlns="http://www.w3.org/2000/svg">\n    <path d="M87.5068 0.0102948L0.1452 138.349L261.432 196.565L204.182 133.852L278.563 42.4096L87.5068 0.0102948Z"/>\n    </svg>',
        },
        p = {
          id: "polygon5",
          content:
            '<svg width="324" height="159" viewBox="0 0 324 159" xmlns="http://www.w3.org/2000/svg">\n    <path d="M155.965 0L0 29.8323L34.6235 96.1617V149.162L116.576 159H287.788L324 61.5689L155.965 0Z"/>\n    </svg>',
        },
        h = {
          id: "polygon6",
          content:
            '<svg width="311" height="189" viewBox="0 0 311 189" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0.295692 140.529L6.23679 44.436L48.8848 0.963487L204.556 0.963487L310.144 72.4005L248.781 169.894L158.387 167.458L82.3012 188.387L0.295692 140.529Z"/>\n    </svg>',
        },
        g = {
          id: "polygon7",
          content:
            '<svg width="298" height="181" viewBox="0 0 298 181" xmlns="http://www.w3.org/2000/svg">\n    <path d="M49.9856 156.883L0 31.0422L96.1445 9.31266L238.448 0L255.907 72.8298L298 118.916L209.987 140.645L142.064 181L49.9856 156.883Z"/>\n    </svg>',
        },
        f = {
          id: "polygon8",
          content:
            '<svg width="368" height="178" viewBox="0 0 368 178" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0.465075 121.137L23.6362 58.0973L50.0982 11.6845L227.06 0.427802L367.856 79.1836L169.349 177.063L0.465075 121.137Z"/>\n    </svg>',
        },
        m = o.shuffle([
          [
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  fillColor: "#FCCFB2",
                  scale: 0.8,
                },
              },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 4,
                  fillColor: "#FCCFB2",
                },
                "9:16": {
                  content: s.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.5,
                  fillColor: "#FCCFB2",
                },
              },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 25.1, unit: "vw" },
                    y: { pct: 3.6, unit: "vh" },
                  },
                  scale: 2.15,
                  rotate: -27.75,
                  fillColor: "#FCCFB2",
                },
                "9:16": {
                  content: s.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 35.1, unit: "vw" },
                    y: { pct: -7.6, unit: "vh" },
                  },
                  scale: 1.95,
                  rotate: -13.26,
                  fillColor: "#FCCFB2",
                },
              },
            },
            {
              id: s.id,
              styles: { "16:9": { content: s.content, fillColor: "#FCCFB2" } },
            },
            {
              id: s.id,
              styles: {
                "16:9": {
                  content: s.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#FCCFB2",
                },
              },
            },
          ],
          [
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  fillColor: "#CFC3BE",
                  scale: 0.8,
                },
              },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.9,
                  fillColor: "#CFC3BE",
                },
                "9:16": {
                  content: c.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.5,
                  rotate: -4.42,
                  fillColor: "#CFC3BE",
                },
              },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  relativePosition: { referenceBoxRole: "title" },
                  scale: 1.3,
                  fillColor: "#CFC3BE",
                },
                "9:16": {
                  content: c.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "top" },
                  },
                  translate: {
                    x: { pct: 16, unit: "vw" },
                    y: { pct: -5, unit: "vh" },
                  },
                  scale: 2.16,
                  rotate: -4.42,
                  fillColor: "#CFC3BE",
                },
              },
            },
            {
              id: c.id,
              styles: { "16:9": { content: c.content, fillColor: "#CFC3BE" } },
            },
            {
              id: c.id,
              styles: {
                "16:9": {
                  content: c.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#CFC3BE",
                },
              },
            },
          ],
          [
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  fillColor: "#F3ADC5",
                  scale: 0.8,
                },
              },
            },
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.8,
                  fillColor: "#F3ADC5",
                },
                "9:16": {
                  content: d.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.56,
                  fillColor: "#F3ADC5",
                },
              },
            },
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 30.7, unit: "vw" },
                    y: { pct: 4.5, unit: "vh" },
                  },
                  scale: 2.8,
                  rotate: -20.9,
                  fillColor: "#F3ADC5",
                },
                "9:16": {
                  content: d.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 34.6, unit: "vw" },
                    y: { pct: -7, unit: "vh" },
                  },
                  scale: 2.2,
                  rotate: -8.92,
                  fillColor: "#F3ADC5",
                },
              },
            },
            {
              id: d.id,
              styles: { "16:9": { content: d.content, fillColor: "#F3ADC5" } },
            },
            {
              id: d.id,
              styles: {
                "16:9": {
                  content: d.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#F3ADC5",
                },
              },
            },
          ],
          [
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  fillColor: "#C4CEDD",
                  scale: 0.8,
                },
              },
            },
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.8,
                  fillColor: "#C4CEDD",
                },
                "9:16": {
                  content: u.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.43,
                  fillColor: "#C4CEDD",
                },
              },
            },
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  relativePosition: { referenceBoxRole: "title" },
                  scale: 1.3,
                  fillColor: "#C4CEDD",
                },
                "9:16": {
                  content: u.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 50, unit: "vw" },
                    y: { pct: -5, unit: "vh" },
                  },
                  scale: 2.07,
                  rotate: -18.2,
                  fillColor: "#C4CEDD",
                },
              },
            },
            {
              id: u.id,
              styles: { "16:9": { content: u.content, fillColor: "#C4CEDD" } },
            },
            {
              id: u.id,
              styles: {
                "16:9": {
                  content: u.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#C4CEDD",
                },
              },
            },
          ],
          [
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  fillColor: "#C1BCDE",
                  scale: 0.8,
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.88,
                  fillColor: "#C1BCDE",
                },
                "9:16": {
                  content: p.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.52,
                  fillColor: "#C1BCDE",
                },
              },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 30, unit: "vw" },
                    y: { pct: -9, unit: "vh" },
                  },
                  scale: 3.1,
                  rotate: -10.66,
                  fillColor: "#C1BCDE",
                },
                "9:16": {
                  content: p.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 34, unit: "vw" },
                    y: { pct: -5, unit: "vh" },
                  },
                  scale: 2.25,
                  rotate: -15.18,
                  fillColor: "#C1BCDE",
                },
              },
            },
            {
              id: p.id,
              styles: { "16:9": { content: p.content, fillColor: "#C1BCDE" } },
            },
            {
              id: p.id,
              styles: {
                "16:9": {
                  content: p.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#C1BCDE",
                },
              },
            },
          ],
          [
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  fillColor: "#BED6AB",
                  scale: 0.8,
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.58,
                  fillColor: "#BED6AB",
                },
                "9:16": {
                  content: h.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.15,
                  fillColor: "#BED6AB",
                },
              },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 30.2, unit: "vw" },
                    y: { pct: 2, unit: "vh" },
                  },
                  scale: 2.58,
                  rotate: -7.8,
                  fillColor: "#BED6AB",
                },
                "9:16": {
                  content: h.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 35.5, unit: "vw" },
                    y: { pct: -4, unit: "vh" },
                  },
                  scale: 1.97,
                  rotate: -13,
                  fillColor: "#BED6AB",
                },
              },
            },
            {
              id: h.id,
              styles: { "16:9": { content: h.content, fillColor: "#BED6AB" } },
            },
            {
              id: h.id,
              styles: {
                "16:9": {
                  content: h.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#BED6AB",
                },
              },
            },
          ],
          [
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  fillColor: "#BDDED4",
                  scale: 0.8,
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.84,
                  fillColor: "#BDDED4",
                },
                "9:16": {
                  content: g.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.84,
                  fillColor: "#BDDED4",
                },
              },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 30, unit: "vw" },
                    y: { pct: -0.4, unit: "vh" },
                  },
                  scale: 2.84,
                  rotate: -18.37,
                  fillColor: "#BDDED4",
                },
                "9:16": {
                  content: g.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 31.7, unit: "vw" },
                    y: { pct: -8, unit: "vh" },
                  },
                  scale: 2.18,
                  rotate: -5.79,
                  fillColor: "#BDDED4",
                },
              },
            },
            {
              id: g.id,
              styles: { "16:9": { content: g.content, fillColor: "#BDDED4" } },
            },
            {
              id: g.id,
              styles: {
                "16:9": {
                  content: g.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#BDDED4",
                },
              },
            },
          ],
          [
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  fillColor: "#E7E1AE",
                  scale: 0.8,
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.45,
                  fillColor: "#E7E1AE",
                },
                "9:16": {
                  content: f.content,
                  relativePosition: {
                    referenceBoxRole: "title",
                    referenceAnchor: { x: "center", y: "middle" },
                  },
                  scale: 2.45,
                  fillColor: "#E7E1AE",
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  relativePosition: { referenceBoxRole: "title" },
                  scale: 1.07,
                  fillColor: "#E7E1AE",
                },
                "9:16": {
                  content: f.content,
                  relativePosition: { referenceBoxRole: "title" },
                  translate: {
                    x: { pct: 33, unit: "vw" },
                    y: { pct: -5, unit: "vh" },
                  },
                  scale: 1.92,
                  rotate: -10.1,
                  fillColor: "#E7E1AE",
                },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  scale: 0.8,
                  fillColor: "#E7E1AE",
                },
                "4:3": { content: f.content, scale: 0.6, fillColor: "#E7E1AE" },
              },
            },
            {
              id: f.id,
              styles: {
                "16:9": {
                  content: f.content,
                  translate: {
                    x: { pct: 50, unit: "vmax" },
                    y: { pct: 50, unit: "vmin" },
                  },
                  scale: 20,
                  fillColor: "#E7E1AE",
                },
              },
            },
          ],
        ]),
        b = [
          ...m
            .map((t) => t[2])
            .map((t, e) => ({
              id: t.id,
              styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
            })),
        ],
        v = [
          ...m
            .map((t) => t[3])
            .map((t, e) => ({
              id: t.id,
              styles: n.mergeAttrStyles(t.styles, {
                groupIndex: e,
                relativePosition: { referenceBoxRole: "title" },
              }),
            })),
        ],
        x = "#F4B7B8",
        y = n.inheritDimension(l.defaultDimension, {
          topicSlideTitleFontSizeMedium: { pct: 10, unit: "vmin" },
          topicSlideTitleFontSizeSmall: { pct: 6, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 10, unit: "vmin" },
          braceListSlideParentTopicMaxFontSize: { pct: 8, unit: "vmin" },
          braceListSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          braceListSlideSubtopicListLeftPadding: { pct: 14, unit: "vmin" },
          braceListSlideBraceShapeGroupMaxWidth: { pct: 6, unit: "vmin" },
          braceListSlideBraceShapeLineWidth: 6,
          braceListSlideCentralTopicPreferredSingleLineSubtopicsCount: 4,
          bulletListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 11, unit: "vmin" },
          braceListSlideSubtopicMinWidth: { pct: 55, unit: "vmin" },
          bulletListSlideSubtopicMaxFontSize: { pct: 5.3, unit: "vmin" },
          bulletListSlideSubtopicMinFontSize: { pct: 4.2, unit: "vmin" },
          bulletListSlideBulletDotRightMargin: { pct: 5, unit: "vmin" },
          bulletListSlideCentralTopicParentTopicBottomMargin: {
            pct: 9.6,
            unit: "vmin",
          },
          bulletListSlideCentralTopicSubtopicSpacing: { pct: 12, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 11, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 5, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 5, unit: "vmin" },
          lyricListSlideCentralTopicParentTopicBottomMargin: {
            pct: 9.6,
            unit: "vmin",
          },
          lyricListSlideCentralTopicSubtopicSpacing: { pct: 12, unit: "vmin" },
          lyricListSlideArrowWidth: 33,
          lyricListSlideArrowHeight: 33,
          lyricListSlideArrowCornerRadius: 3,
          fishboneSlideParentTopicMaxFontSize: { pct: 7, unit: "vmin" },
          fishboneSlideParentTopicMinFontSize: { pct: 6, unit: "vmin" },
          fishboneSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          fishboneSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
          timelineSlideParentTopicMaxFontSize: { pct: 7, unit: "vmin" },
          timelineSlideParentTopicMinFontSize: { pct: 6, unit: "vmin" },
          timelineSlideSubtopicMaxFontSize: { pct: 5.5, unit: "vmin" },
          timelineSlideSubtopicMinFontSize: { pct: 4.4, unit: "vmin" },
        }),
        S = n.inheritDimension(r.portraitDimension, {
          topicSlideTitleFontSizeLarge: { pct: 13, unit: "vmin" },
          topicSlideTitleFontSizeMedium: { pct: 10, unit: "vmin" },
          topicSlideTitleFontSizeScrollable: { pct: 10, unit: "vmin" },
          bulletListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          bulletListSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          bulletListSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          bulletListSlideBulletDotRightMargin: { pct: 3, unit: "vmin" },
          bulletListSlideParentTopicBottomMargin: { pct: 16, unit: "vmin" },
          bulletListSlideCentralTopicParentTopicBottomMargin: {
            pct: 16,
            unit: "vmin",
          },
          bulletListSlideSubtopicSpacing: { pct: 15, unit: "vmin" },
          bulletListSlideCentralTopicSubtopicSpacing: { pct: 15, unit: "vmin" },
          lyricListSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideParentTopicMinFontSize: { pct: 13, unit: "vmin" },
          lyricListSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          lyricListSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
          lyricListSlideSubtopicScrollableFontSize: { pct: 7, unit: "vmin" },
          lyricListSlideCurrentSubtopicOffsetRatio: 0.405,
          treeChartSlideParentTopicMaxFontSize: { pct: 13, unit: "vmin" },
          treeChartSlideParentTopicMinFontSize: { pct: 10, unit: "vmin" },
          treeChartSlideSubtopicMaxFontSize: { pct: 7, unit: "vmin" },
          treeChartSlideSubtopicMinFontSize: { pct: 6, unit: "vmin" },
        });
      e.shapeForYouTheme = {
        slideStyles: {
          slide: {
            opacity: 1,
            backgroundColor: "#FAE4E8",
            backgroundOpacity: 1,
            foregroundColor: "black",
            hitRegionFillColor: "rgba(196, 196, 196, 0.12)",
            hitRegionActiveFillColor: "rgba(196, 196, 196, 0.3)",
            hitRegionBoxShadow: "0px 1px 21px -7px rgba(0, 0, 0, 0.15)",
            hitRegionStrokeColor: "rgba(185, 185, 185, 0.1)",
            hitRegionLineWidth: 1,
            hitRegionCornerRadius: 18,
            hitRegionHighlightTextColor: "#0A84FF",
            opacityForPendingSubtopicsUnderPresenterPerspectiveMode: 0.2,
            braceCurveShapeStyle: "shape-for-you",
            braceSubtopicIndicatorShapeStyle: "leading-line",
            treeChartSubtopicIndicatorShapeStyle: "leading-line",
            treeChartTreeBranchShapeStyle: "shape-for-you",
            backgroundShapeGroupCount: 8,
            backgroundShapeTemplates: [
              ...m
                .map((t) => t[4])
                .map((t, e) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
            ],
          },
          "slide.topic.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: a.id,
                styles: {
                  "16:9": {
                    content: a.content,
                    translate: {
                      x: { pct: 22.5, unit: "vw" },
                      y: { pct: 13.3, unit: "vh" },
                    },
                    fillColor: x,
                    scale: 4.7,
                  },
                  "9:16": {
                    content: a.content,
                    translate: {
                      x: { pct: -22.2, unit: "vw" },
                      y: { pct: 13.3, unit: "vh" },
                    },
                    fillColor: x,
                    scale: 5.27,
                    rotate: 10.78,
                  },
                },
              },
            ],
          },
          "slide.epilogue": {
            backgroundShapeTemplates: [
              {
                id: a.id,
                styles: {
                  "16:9": {
                    content: a.content,
                    translate: {
                      x: { pct: 22.5, unit: "vw" },
                      y: { pct: 13.3, unit: "vh" },
                    },
                    fillColor: x,
                    scale: 4.7,
                  },
                  "9:16": {
                    content: a.content,
                    translate: {
                      x: { pct: -22.2, unit: "vw" },
                      y: { pct: 13.3, unit: "vh" },
                    },
                    fillColor: x,
                    scale: 5.27,
                    rotate: 10.78,
                  },
                },
              },
            ],
          },
          "slide.list.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: a.id,
                styles: {
                  "16:9": {
                    content: a.content,
                    relativePosition: {
                      referenceBoxRole: "title",
                      referenceAnchor: { x: "center", y: "middle" },
                    },
                    fillColor: x,
                  },
                  "9:16": {
                    content: a.content,
                    relativePosition: {
                      referenceBoxRole: "title",
                      referenceAnchor: { x: "center", y: "middle" },
                    },
                    translate: {
                      x: { pct: -25, unit: "vw" },
                      y: { pct: -13, unit: "vh" },
                    },
                    fillColor: x,
                    scale: 2.18,
                  },
                },
              },
              ...m
                .map((t) => t[0])
                .map((t, e) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, {
                    relativePosition: {
                      referenceBoxRole: "subtopic",
                      relativeIndex: e,
                    },
                  }),
                })),
            ],
          },
          "slide.list.layout-brace-list.level-centralTopic": {
            backgroundShapeTemplates: [
              {
                id: a.id,
                styles: {
                  "16:9": {
                    content: a.content,
                    relativePosition: {
                      referenceBoxRole: "title",
                      referenceAnchor: { x: "center", y: "middle" },
                    },
                    fillColor: x,
                  },
                  "9:16": {
                    content: a.content,
                    relativePosition: {
                      referenceBoxRole: "title",
                      referenceAnchor: { x: "center", y: "middle" },
                    },
                    translate: {
                      x: { pct: -25, unit: "vw" },
                      y: { pct: -13, unit: "vh" },
                    },
                    fillColor: x,
                    scale: 2.18,
                  },
                },
              },
              ...m
                .map((t) => t[0])
                .map((t, e) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, {
                    relativePosition: {
                      referenceBoxRole: "subtopic",
                      relativeIndex: e,
                    },
                  }),
                })),
            ],
          },
          "slide.topic.level-mainTopic": {
            backgroundShapeTemplates: [
              ...m
                .map((t) => t[1])
                .map((t, e) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
            ],
          },
          "slide.list.level-mainTopic": { backgroundShapeTemplates: b },
          "slide.list.layout-brace-list.level-mainTopic": {
            backgroundShapeTemplates: v,
          },
          "slide.list.layout-timeline.level-mainTopic": {
            backgroundShapeTemplates: v,
          },
          "slide.list.layout-fishbone.level-mainTopic": {
            backgroundShapeTemplates: v,
          },
          "slide.topic.level-floatingTopic": {
            backgroundShapeTemplates: [
              ...m
                .map((t) => t[1])
                .map((t, e) => ({
                  id: t.id,
                  styles: n.mergeAttrStyles(t.styles, { groupIndex: e }),
                })),
            ],
          },
          "slide.list.level-floatingTopic": { backgroundShapeTemplates: b },
          "slide.list.layout-brace-list.level-floatingTopic": {
            backgroundShapeTemplates: v,
          },
          "slide.list.layout-timeline.level-floatingTopic": {
            backgroundShapeTemplates: v,
          },
          "slide.list.layout-fishbone.level-floatingTopic": {
            backgroundShapeTemplates: v,
          },
        },
        boxStyles: {
          box: { opacity: 1, transform: "none" },
          "box.text": {
            fontFamily: ["TenorSans", "Songti SC", "sans-serif"],
            fontSize: "24px",
            lineHeight: "1em",
            fontWeight: "normal",
            fontStyle: "normal",
            textColor: "#000",
            textAlignment: "leading",
          },
          "box.shape": { lineWidth: 1, lineCap: "round" },
          "box.headerLine": { strokeColor: "#000", lineCap: "round" },
          "box.labelBorder": { strokeColor: "#000", lineWidth: 2 },
          "box.note": { fontWeight: "normal", opacity: 0.8 },
          "box.callout": {
            fontWeight: "normal",
            fontStyle: "italic",
            opacity: 0.6,
          },
          "box.svg-template.hyperlink": { borderWidth: 2, borderRadius: 4 },
          "slide.layout-topic-slide box.title": {
            fontWeight: "normal",
            textAlignment: "center",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide box.title": {
            fontWeight: "normal",
            textAlignment: "leading",
            overflowWrap: "break-word",
          },
          "slide.layout-image-topic-slide.image-placement-full box.text": {
            textShadow: "0 0 8px rgba(0, 0, 0, 0.3)",
          },
          "slide.layout-brace-list box.title": {
            fontWeight: "normal",
            textAlignment: "center",
          },
          "slide.layout-brace-list box.subtopic": {
            fontWeight: "normal",
            overflowWrap: "break-word",
          },
          "slide.layout-brace-list box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-brace-list box.indicator": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-lyric-list box.title": {
            fontSize: "60px",
            fontWeight: "normal",
          },
          "slide.layout-lyric-list box.subtopic": {
            fontWeight: "normal",
            overflowWrap: "break-word",
          },
          "slide.layout-lyric-list box.arrow": { fillColor: "#000" },
          "slide.layout-bullet-list box.title": {
            fontSize: "60px",
            fontWeight: "normal",
          },
          "slide.layout-bullet-list box.subtopic": {
            fontWeight: "normal",
            overflowWrap: "break-word",
          },
          "slide.layout-bullet-list box.bulletDot": { fillColor: "#000" },
          "slide.layout-tree-chart box.title": {
            fontWeight: "normal",
            textAlignment: "leading",
          },
          "slide.layout-tree-chart box.treeBranch": {
            strokeColor: "#000",
            lineWidth: 8,
            lineCap: "square",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.indicator": {
            strokeColor: "#000",
            lineWidth: 8,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-tree-chart box.subtopic": {
            fontWeight: "normal",
            overflowWrap: "break-word",
          },
          "slide.layout-summary box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-summary box.title": {
            fontWeight: "normal",
            textAlignment: "center",
          },
          "slide.layout-summary box.subtopic": { fontWeight: "normal" },
          "slide.layout-scrollable-summary  box.curlyBrace": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-scrollable-summary  box.title": {
            fontWeight: "normal",
            textAlignment: "center",
          },
          "slide.layout-scrollable-summary  box.subtopic": {
            fontWeight: "normal",
          },
          "slide.layout-only-child box.title": {
            fontSize: "82px",
            fontWeight: "normal",
          },
          "slide.layout-only-child box.subtopic": {
            fontWeight: "normal",
            overflowWrap: "break-word",
          },
          "slide.layout-only-child box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
          "slide.layout-fishbone box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-fishbone box.fishboneHead": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
          },
          "slide.layout-fishbone box.fishbone": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-fishbone-head box.fishbone": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHead": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-fishbone-head box.fishboneHeadSubtopicLeadingLine": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline box.subtopic": { overflowWrap: "break-word" },
          "slide.layout-timeline box.timelineMain": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
          },
          "slide.layout-timeline box.timelineVertical": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline box.timelineTimePoint": { fillColor: "#000" },
          "slide.layout-timeline-head box.title": {
            fontWeight: "bold",
            textAlignment: "center",
          },
          "slide.layout-timeline-head box.timelineMain": {
            strokeColor: "#000",
            lineWidth: 6,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineVertical": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-timeline-head box.timelineTimePoint": {
            fillColor: "#000",
          },
          "slide.layout-timeline-head box.timelineSubtopicLeadingLine": {
            strokeColor: "#000",
            lineWidth: 4,
            lineCap: "round",
            lineJoin: "round",
          },
          "slide.layout-imageable-parent-slide box.subtopic": {
            overflowWrap: "break-word",
          },
          "slide.layout-imageable-children-slide box.title": {
            fontWeight: "bold",
          },
          "slide.layout-imageable-list-slide box.title": {
            opacity: 0.5,
            filter: "blur(50px)",
          },
          "slide.layout-only-child-imageable-parent box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
          "slide.layout-only-imageable-child  box.title": {
            fontWeight: "bold",
          },
          "slide.layout-only-imageable-child box.separatorLine": {
            strokeColor: "#000",
            lineCap: "round",
          },
        },
        dimension: {
          "16:9": y,
          "4:3": n.inheritDimension(y, {
            fishboneSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            fishboneSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            fishboneSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            fishboneSlideFishboneHeadInterval: { pct: 47, unit: "vmin" },
            fishboneSlideFishboneHeadSpacing: { pct: 9, unit: "vmin" },
            fishboneSlideParentTopicTitleMaxWidth: { pct: 30, unit: "vw" },
            fishboneSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideParentTopicMaxFontSize: { pct: 6, unit: "vmin" },
            timelineSlideParentTopicMinFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMaxFontSize: { pct: 5, unit: "vmin" },
            timelineSlideSubtopicMinFontSize: { pct: 4, unit: "vmin" },
            timelineSlideSubtopicTitleMaxWidth: { pct: 38, unit: "vmin" },
            timelineSlideVerticalLineSpacing: { pct: 3.1, unit: "vmin" },
            timelineSlideVerticalLineInterval: { pct: 16, unit: "vmin" },
          }),
          "9:16": S,
          "3:4": S,
        },
      };
    },
    4069: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.mergeAttrStyles =
          e.matchesClasses =
          e.matchesStates =
          e.addStates =
          e.split =
          e.matchesBox =
          e.pickBoxStyle =
          e.computeBoxStyle =
          e.initializeBoxStyle =
          e.matchesSlide =
          e.computeSlideStyle =
          e.initializeSlideStyle =
          e.calcLength =
          e.inheritDimension =
            void 0);
      const n = i(97857);
      function o(t, e) {
        return "number" == typeof t ? t : n.calc(t.pct / 100, t.unit, e);
      }
      function l(t, e = {}) {
        const i = { classes: new Set(), states: new Set() };
        e.type && i.classes.add(e.type),
          e.topicLevel && i.classes.add(`level-${e.topicLevel}`),
          e.layout && i.classes.add(`layout-${e.layout}`),
          e.imagePlacement &&
            i.classes.add(`image-placement-${e.imagePlacement}`),
          e.contentPrincipal &&
            i.classes.add(`content-principal-${e.contentPrincipal}`),
          e.states && u(e.states, i.states);
        const n = {};
        if (t.slideStyles)
          for (const e in t.slideStyles) r(e, i) && g(n, t.slideStyles[e]);
        return n;
      }
      function r(t, e) {
        const i = d(t);
        return (
          !!i.slide &&
          !!h(i.slide.classes, e.classes) &&
          !!p(i.slide.states, e.states)
        );
      }
      function a(t, e = {}) {
        const i = {
          slideClasses: new Set(),
          slideStates: new Set(),
          classes: new Set(),
        };
        e.slideType && i.slideClasses.add(e.slideType),
          e.topicLevel && i.slideClasses.add(`level-${e.topicLevel}`),
          e.slideLayout && i.slideClasses.add(`layout-${e.slideLayout}`),
          e.slideImagePlacement &&
            i.slideClasses.add(`image-placement-${e.slideImagePlacement}`),
          e.contentPrincipal &&
            i.slideClasses.add(`content-principal-${e.contentPrincipal}`),
          e.slideStates && u(e.slideStates, i.slideStates),
          e.contentType && i.classes.add(e.contentType),
          e.roles && e.roles.forEach((t) => i.classes.add(t));
        const n = {};
        if (t.boxStyles)
          for (const e in t.boxStyles) s(e, i) && g(n, t.boxStyles[e]);
        return n;
      }
      function s(t, e) {
        var i, n;
        const o = d(t);
        return (
          !!o.box &&
          !!h(o.box.classes, e.classes) &&
          !!p(
            null !==
              (n =
                null === (i = o.slide) || void 0 === i ? void 0 : i.states) &&
              void 0 !== n
              ? n
              : [],
            e.slideStates,
          ) &&
          !(o.slide && !h(o.slide.classes, e.slideClasses))
        );
      }
      function c(t, e) {
        return t.split(e).filter(Boolean);
      }
      function d(t) {
        var e, i;
        const n = {},
          o = /([\w-_]+)(\.[\w-_.]+)?(:[\w-_:]+)?/g;
        let l;
        for (; null !== (l = o.exec(t)); ) {
          const t = l[1],
            o = c(null !== (e = l[2]) && void 0 !== e ? e : "", "."),
            r = c(null !== (i = l[3]) && void 0 !== i ? i : "", ":");
          n[t] = { classes: o, states: r };
        }
        return n;
      }
      function u(t, e) {
        for (const i in t) t[i] && e.add(i);
      }
      function p(t, e) {
        if (t.length !== e.size) return !1;
        for (const i of t) if (!e.has(i)) return !1;
        return !0;
      }
      function h(t, e) {
        return t.every((t) => e.has(t));
      }
      function g(t, e) {
        e && Object.assign(t, e);
      }
      (e.inheritDimension = function (t, e) {
        return Object.assign(Object.assign({}, t), e);
      }),
        (e.calcLength = o),
        (e.initializeSlideStyle = function (t, e, i, n = {}) {
          const r = l(i, {
            type: t.type,
            topicLevel: t.topicLevel,
            layout: n.layout,
            imagePlacement: t.imagePlacement,
            contentPrincipal: n.contentPrincipal,
            states: n.states,
          });
          e.hitRegionHPadding &&
            (r.hitRegionHPadding = o(e.hitRegionHPadding, t)),
            e.hitRegionVPadding &&
              (r.hitRegionVPadding = o(e.hitRegionVPadding, t)),
            e.hitRegionLineWidth &&
              (r.hitRegionLineWidth = o(e.hitRegionLineWidth, t)),
            e.hitRegionCornerRadius &&
              (r.hitRegionCornerRadius = o(e.hitRegionCornerRadius, t));
          const a = Object.assign({}, t);
          Object.assign(t, r, a);
        }),
        (e.computeSlideStyle = l),
        (e.matchesSlide = r),
        (e.initializeBoxStyle = function (t, e, i, n = {}) {
          const o = a(i, {
              contentType: t.contentType,
              roles: t.roles,
              slideType: e.type,
              topicLevel: e.topicLevel,
              slideLayout: n.layout,
              contentPrincipal: n.contentPrincipal,
              slideImagePlacement: e.imagePlacement,
              slideStates: n.slideStates,
            }),
            l = Object.assign({}, t);
          Object.assign(t, o, l);
        }),
        (e.computeBoxStyle = a),
        (e.pickBoxStyle = function (t, e) {
          const i = Object.assign({}, e);
          return (
            (function (t, e) {
              if (!e) return;
              for (const i in t) i in e && (t[i] = e[i]);
            })(i, t),
            i
          );
        }),
        (e.matchesBox = s),
        (e.split = c),
        (e.addStates = u),
        (e.matchesStates = p),
        (e.matchesClasses = h),
        (e.mergeAttrStyles = function (t, e) {
          const i = Object.assign({}, t);
          return (
            Object.keys(i).forEach((t) => {
              const n = i[t];
              i[t] = n ? Object.assign({}, n, e) : void 0;
            }),
            i
          );
        });
    },
    14594: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.defaultFontSizeScaleRatioToEliminateShortTrailingLine =
          e.disposeTextMeasurementHelpers =
          e.measureHtml =
          e.measureText =
            void 0);
      const n = i(75327);
      (e.measureText = function (t, e) {
        var i, r, a, s;
        const c = null != o ? o : (o = new l()),
          d = null !== (i = t.text) && void 0 !== i ? i : "";
        return c.measureText(
          d,
          {
            font: n.toCSSFont(t),
            "text-indent": null !== (r = t.textIndent) && void 0 !== r ? r : "",
            "overflow-wrap":
              null !== (a = t.overflowWrap) && void 0 !== a ? a : "",
            "letter-spacing":
              null !== (s = t.letterSpacing) && void 0 !== s ? s : "",
          },
          e,
        );
      }),
        (e.measureHtml = function (t, e) {
          var i, r, a;
          return (null != o ? o : (o = new l())).measureHtml(
            t.hyperText,
            {
              font: n.toCSSFont(t),
              "text-indent":
                null !== (i = t.textIndent) && void 0 !== i ? i : "",
              "overflow-wrap":
                null !== (r = t.overflowWrap) && void 0 !== r ? r : "",
              "letter-spacing":
                null !== (a = t.letterSpacing) && void 0 !== a ? a : "",
            },
            e.maxWidth,
          );
        }),
        (e.disposeTextMeasurementHelpers = function () {
          o && o.remove(), (o = null);
        });
      let o = null;
      class l {
        constructor() {
          (this.el = document.createElement("div")),
            (this.el.style.position = "absolute"),
            (this.el.style.width = "0"),
            (this.el.style.height = "0"),
            (this.el.style.left = "0"),
            (this.el.style.top = "0"),
            (this.el.style.pointerEvents = "none"),
            (this.el.style.visibility = "hidden"),
            (this.el.style.opacity = "0");
          const t = document.createElement("div");
          (t.style.position = "absolute"),
            (t.style.width = "10000px"),
            (t.style.height = "0"),
            (this.div = document.createElement("div")),
            this._resetDivStyle(),
            t.appendChild(this.div),
            this.el.appendChild(t),
            document.body.appendChild(this.el);
        }
        remove() {
          document.body.removeChild(this.el);
        }
        measureHtml(t, e, i) {
          this._resetDivStyle(),
            (this.div.style.maxWidth = n.toCSSLength(i)),
            (this.div.innerHTML = t);
          for (const t in e) this.div.style.setProperty(t, e[t]);
          const o = this.div.getBoundingClientRect();
          let l = 0;
          if (1 === this.div.childNodes.length && this.div.firstElementChild) {
            const t = getComputedStyle(this.div.firstElementChild);
            l = parseFloat(t.marginTop) + parseFloat(t.marginBottom);
          }
          const r =
              Math.ceil(
                Math.max(
                  o.height,
                  this.div.getBoundingClientRect().height,
                  this.div.scrollHeight,
                ),
              ) - l,
            a = getComputedStyle(this.div),
            s = parseFloat(a.getPropertyValue("line-height")),
            c = Math.round(r / s);
          return {
            width: Math.ceil(o.width),
            height: Math.ceil(o.height),
            lineCount: c,
          };
        }
        _resetDivStyle() {
          this.div.removeAttribute("style"),
            (this.div.style.position = "absolute"),
            (this.div.style.left = "0"),
            (this.div.style.top = "0");
        }
        _createSpanEl(t) {
          this.div.innerHTML = "";
          const e = document.createElement("span");
          return (e.id = t), this.div.appendChild(e), e;
        }
        measureText(t, e, i) {
          var o;
          const {
            maxWidth: l,
            traillingIconSize: r,
            traillingIconLeftMargin: a,
            disallowShortTrailingLine: s,
          } = i;
          this._resetDivStyle();
          const c = this.div.firstElementChild,
            d =
              "text-measure-span" === (null == c ? void 0 : c.id)
                ? c
                : this._createSpanEl("text-measure-span");
          this.div.appendChild(d), (d.innerHTML = ""), n.fillText(d, t);
          let u = null;
          r &&
            ((u = document.createElement("img")),
            (u.style.width = n.toCSSLength((null != a ? a : 0) + r.width)),
            (u.style.height = n.toCSSLength(r.height)),
            d.appendChild(u)),
            (this.div.style.maxWidth = n.toCSSLength(l));
          for (const t in e) this.div.style.setProperty(t, e[t]);
          const p = d.getBoundingClientRect(),
            h = Math.ceil(p.right),
            g = Math.ceil(
              Math.max(
                p.height,
                d.scrollHeight,
                this.div.getBoundingClientRect().height,
                this.div.scrollHeight,
              ),
            ),
            f = getComputedStyle(this.div),
            m = parseFloat(f.getPropertyValue("font-size")),
            b = parseFloat(f.getPropertyValue("line-height")),
            v = f.getPropertyValue("letter-spacing"),
            x = Math.round(g / b),
            y = x * b;
          return {
            width: h,
            height: y,
            fontSize: m,
            lineHeight: b,
            lineCount: x,
            letterSpacing: v,
            hasShortTrailingLine:
              !!s &&
              !r &&
              (null !==
                (o = (function (t) {
                  const e = Array.from(t.childNodes)
                    .reverse()
                    .find((t) => t.nodeType === Node.TEXT_NODE);
                  if (e && e.textContent) {
                    const { textContent: t } = e,
                      i = document.createRange();
                    let n,
                      o = 0,
                      l = t.length;
                    for (; l > 0; ) {
                      (l -= 1), i.setStart(e, l), i.setEnd(e, l + 1);
                      const t = i.getBoundingClientRect().bottom;
                      if (n && t < n) {
                        o = l + 1;
                        break;
                      }
                      n = t;
                    }
                    return (
                      i.setStart(e, o),
                      i.setEnd(e, t.length),
                      i.getBoundingClientRect().width
                    );
                  }
                  return;
                })(d)) && void 0 !== o
                ? o
                : h) <=
                0.2 * h,
            traillingIconOffset:
              u && r
                ? {
                    x: u.offsetLeft + (null != a ? a : 0),
                    y: y - (b - r.height) / 2 - r.height,
                  }
                : null,
          };
        }
      }
      e.defaultFontSizeScaleRatioToEliminateShortTrailingLine = 0.8;
    },
    89054: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.IndexRange = void 0);
      class i {
        constructor(t, e) {
          if (
            ((this._start = "string" == typeof t ? parseInt(t, 10) : t),
            (this._end = "string" == typeof e ? parseInt(e, 10) : e),
            this._start > this._end)
          )
            throw new Error(
              "Invalid range: End before start: " +
                this._start +
                " " +
                this._end,
            );
        }
        static fromString(t) {
          const e = t.match(/^(\d+)-(\d+)$/);
          return e ? new i(e[1], e[2]) : null;
        }
        get location() {
          return this._start;
        }
        get lowerBound() {
          return this._start;
        }
        get upperBound() {
          return this._end + 1;
        }
        get start() {
          return this._start;
        }
        get end() {
          return this._end;
        }
        get count() {
          return this._end - this._start + 1;
        }
        get length() {
          return this._end - this._start + 1;
        }
        static sort(t) {
          return t.sort((t, e) => t.start - e.start);
        }
        join(t) {
          return this.overlaps(t) || this.contiguous(t)
            ? new i(Math.min(this._start, t.start), Math.max(this._end, t.end))
            : null;
        }
        contains(t) {
          return (
            (t = "string" == typeof t ? parseInt(t, 10) : t) >= this._start &&
            t <= this._end
          );
        }
        equals(t) {
          return t.start === this._start && t.end === this._end;
        }
        overlaps(t) {
          const e = i.sort([t, this]);
          return e[0].end >= e[1].start;
        }
        contiguous(t) {
          const e = i.sort([t, this]);
          return e[0].end + 1 === e[1].start;
        }
        toString() {
          return this._start + "-" + this._end;
        }
        static compact(t) {
          if (t.length < 2) return t;
          let e = (t = i.sort(t))[0];
          const n = [];
          for (let o = 1; o < t.length; o++) {
            const l = t[o];
            e.overlaps(new i(l.start - 1, l.end))
              ? (e = e.join(l) || e)
              : (n.push(e), (e = l)),
              o === t.length - 1 && n.push(e);
          }
          return n;
        }
        static subtract(t, e) {
          Array.isArray(t) || (t = [t]);
          let n = (t = i.sort(t).reverse()).length;
          const o = [];
          for (; n--; ) {
            const l = t[n];
            e.start <= l.start && e.end >= l.end
              ? t.splice(n, 1)
              : e.start > l.start && e.end < l.end
                ? (t.splice(n, 1),
                  o.push(new i(l.start, e.start - 1)),
                  o.push(new i(e.end + 1, l.end)))
                : e.end < l.end && e.end >= l.start
                  ? (t.splice(n, 1), o.push(new i(e.end + 1, l.end)))
                  : e.end > l.end &&
                    e.start <= l.end &&
                    (t.splice(n, 1), o.push(new i(l.start, e.start - 1)));
          }
          return i.sort(t.concat(o));
        }
      }
      e.IndexRange = i;
    },
    81727: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.IndexSet = void 0);
      const n = i(89054);
      class o {
        constructor(t = []) {
          if (
            ((this._ranges = []),
            (this._count = 0),
            void 0 !== t && (!Array.isArray(t) || 0 !== t.length))
          )
            if ("string" == typeof t) this._fromString(t);
            else {
              (Array.isArray(t) && t.length > 0 ? t[0] : t) instanceof
              n.IndexRange
                ? this.addRanges(t)
                : this.addIndexes(t);
            }
        }
        static fromString(t) {
          return new o(t);
        }
        addRanges(t) {
          Array.isArray(t) || (t = [t]), this._addRanges(t);
        }
        removeRange(t) {
          this._removeRange(t);
        }
        addIndexes(t) {
          let e;
          e = "number" == typeof t || "string" == typeof t ? [t] : t;
          let i = [];
          for (let t = 0; t < e.length; t++) {
            const n = e[t];
            i.push("string" == typeof n ? parseInt(n, 10) : n);
          }
          i = i.sort(function (t, e) {
            return t - e;
          });
          const o = [];
          let l, r;
          for (let t = 0; t < i.length; t++) {
            const e = i[t];
            void 0 === l && (l = r = e),
              e - r < 2
                ? (r = e)
                : (o.push(new n.IndexRange(l, r)), (l = r = e));
          }
          o.push(new n.IndexRange(l, r)), this._addRanges(o);
        }
        removeIndexes(t) {
          let e;
          e = "number" == typeof t || "string" == typeof t ? [t] : t;
          for (let t = 0; t < e.length; t++) {
            const i = e[t],
              o = new n.IndexRange(i, i);
            this._removeRange(o);
          }
        }
        contains(t) {
          t = "string" == typeof t ? parseInt(t, 10) : t;
          for (let e = 0; e < this._ranges.length; e++) {
            if (this._ranges[e].contains(t)) return !0;
          }
          return !1;
        }
        get count() {
          return this._count;
        }
        indexAt(t) {
          if (t >= this._count || t < 0) throw new Error("Index out of range");
          let e = 0,
            i = 0;
          for (let n = 0; n < this._ranges.length; n++) {
            const o = this._ranges[n];
            if (((i += o.length), t >= e && t < i)) {
              const i = t - e;
              return o.start + i;
            }
            e += o.length;
          }
          return -1;
        }
        get firstIndex() {
          return 0 === this._ranges.length ? null : this._ranges[0].start;
        }
        get lastIndex() {
          const t = this._ranges.length;
          return 0 === t ? null : this._ranges[t - 1].end;
        }
        pagedRanges(t) {
          if (0 === this._ranges.length || void 0 === t) return this._ranges;
          const e = [];
          for (let i = 0; i < this._ranges.length; i++) {
            const o = this._ranges[i];
            if (o.length <= t) e.push(o);
            else {
              const i = Math.floor(o.length / t),
                l = o.length % t;
              for (let l = 0; l < i; l++) {
                const i = o.start + t * l;
                e.push(new n.IndexRange(i, i + t - 1));
              }
              l > 0 && e.push(new n.IndexRange(t * i, t * i + l - 1));
            }
          }
          return e;
        }
        toString() {
          if (0 === this._ranges.length) return "";
          const t = n.IndexRange.compact(this._ranges),
            e = [];
          for (let i = 0; i < t.length; i++) e.push(t[i].toString());
          return e.join(",");
        }
        _addRanges(t) {
          (this._ranges = n.IndexRange.compact(this._ranges.concat(t))),
            this._updateCount();
        }
        _removeRange(t) {
          this._ranges.length > 0 &&
            (this._ranges = n.IndexRange.subtract(this._ranges, t)),
            this._updateCount();
        }
        _updateCount() {
          let t = 0;
          for (let e = 0; e < this._ranges.length; e++) {
            t += this._ranges[e].length;
          }
          this._count = t;
        }
        _fromString(t) {
          const e = t.split(","),
            i = [];
          for (let t = 0; t < e.length; t++) {
            const o = n.IndexRange.fromString(e[t]);
            if (!o) throw new Error("Invalid range");
            i.push(o);
          }
          (this._ranges = []), (this._count = 0), this._addRanges(i);
        }
      }
      e.IndexSet = o;
    },
    43998: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 });
    },
    25300: (t, e) => {
      "use strict";
      function i(t, e) {
        let i = null;
        return (
          n(t, (t, n) => {
            if (e(t)) return (i = t), n();
          }),
          i
        );
      }
      function n(t, e) {
        let i = !1;
        for (const o of t) {
          if (
            (e(o, () => {
              i = !0;
            }),
            i)
          )
            return;
          if (
            "group" === o.contentType &&
            (n(o.children, (t, n) => {
              e(t, () => {
                (i = !0), n();
              });
            }),
            i)
          )
            return;
        }
      }
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.mutateBoxes =
          e.forEachBox =
          e.assertBox =
          e.getBoxById =
          e.filterBoxes =
          e.findBox =
          e.toBoxRoles =
          e.watermark =
          e.contentOfSummary =
          e.braceShapeOfSummary =
          e.bottomBraceOfSummary =
          e.topBraceOfSummary =
          e.subtopicEllipsisOfSummary =
          e.headerLineOfTopic =
          e.treeBranchOfTopic =
          e.arrowOfTopic =
          e.decorGroupOfTopic =
          e.subtopicListGroupOfTopic =
          e.separatorLineOfTopic =
          e.timelineSubtopicLeadingLineOfTopic =
          e.timelineTimePointOfTopic =
          e.timelineVerticalLineOfTopic =
          e.timelineMainLineOfTopic =
          e.fishboneHeadSubtopicLeadingLineOfTopic =
          e.fishboneHeadOfTopic =
          e.fishboneOfTopic =
          e.bulletDotOfTopic =
          e.indicatorOfTopic =
          e.primaryIndicatorOfTopic =
          e.bottomCurlyBraceOfTopic =
          e.topCurlyBraceOfTopic =
          e.curlyBraceOfTopic =
          e.hyperlinkOfTopic =
          e.contentGroupOfTopic =
          e.imageOfTopic =
          e.calloutOfTopic =
          e.noteOfTopic =
          e.labelListOfTopic =
          e.labelTextOfTopic =
          e.labelBorderOfTopic =
          e.labelOfTopic =
          e.markerListOfTopic =
          e.markerOfTopic =
          e.shadowTitleTextOfTopic =
          e.titleTextOfTopic =
          e.titleOfTopic =
            void 0),
        (e.titleOfTopic = function (t) {
          return `topic:title:${t}`;
        }),
        (e.titleTextOfTopic = function (t) {
          return `topic:title-text:${t}`;
        }),
        (e.shadowTitleTextOfTopic = function (t) {
          return `topic:shadow-title-text:${t}`;
        }),
        (e.markerOfTopic = function (t, e) {
          return `topic:marker:${t}:${e}`;
        }),
        (e.markerListOfTopic = function (t) {
          return `topic:marker-list:${t}`;
        }),
        (e.labelOfTopic = function (t, e) {
          return `topic:label:${t}:${e}`;
        }),
        (e.labelBorderOfTopic = function (t, e) {
          return `topic:label-border:${t}:${e}`;
        }),
        (e.labelTextOfTopic = function (t, e) {
          return `topic:label-text:${t}:${e}`;
        }),
        (e.labelListOfTopic = function (t) {
          return `topic:label-list:${t}`;
        }),
        (e.noteOfTopic = function (t) {
          return `topic:note:${t}`;
        }),
        (e.calloutOfTopic = function (t) {
          return `topic:callout:${t}`;
        }),
        (e.imageOfTopic = function (t) {
          return `topic:image:${t}`;
        }),
        (e.contentGroupOfTopic = function (t) {
          return `topic:content-group:${t}`;
        }),
        (e.hyperlinkOfTopic = function (t) {
          return `topic:hyperlink:${t}`;
        }),
        (e.curlyBraceOfTopic = function (t) {
          return `topic:curly-brace:${t}`;
        }),
        (e.topCurlyBraceOfTopic = function (t) {
          return `topic:top-curly-brace:${t}`;
        }),
        (e.bottomCurlyBraceOfTopic = function (t) {
          return `topic:bottom-curly-brace:${t}`;
        }),
        (e.primaryIndicatorOfTopic = function (t) {
          return `topic:primary-indicator:${t}`;
        }),
        (e.indicatorOfTopic = function (t) {
          return `topic:indicator:${t}`;
        }),
        (e.bulletDotOfTopic = function (t) {
          return `topic:bullet-dot:${t}`;
        }),
        (e.fishboneOfTopic = function (t) {
          return `topic:fishbone:${t}`;
        }),
        (e.fishboneHeadOfTopic = function (t) {
          return `topic:fishbone-head:${t}`;
        }),
        (e.fishboneHeadSubtopicLeadingLineOfTopic = function (t) {
          return `topic:fishbone-head-subtopic-leading-line:${t}`;
        }),
        (e.timelineMainLineOfTopic = function (t) {
          return `topic:timeline-main-line:${t}`;
        }),
        (e.timelineVerticalLineOfTopic = function (t) {
          return `topic:timeline-vertical-line:${t}`;
        }),
        (e.timelineTimePointOfTopic = function (t) {
          return `topic:timeline-time-point:${t}`;
        }),
        (e.timelineSubtopicLeadingLineOfTopic = function (t) {
          return `topic:timeline-subtopic-leading-line:${t}`;
        }),
        (e.separatorLineOfTopic = function (t) {
          return `topic:separator-line:${t}`;
        }),
        (e.subtopicListGroupOfTopic = function (t) {
          return `topic:subtopic-list-group:${t}`;
        }),
        (e.decorGroupOfTopic = function (t) {
          return `topic:decor-group:${t}`;
        }),
        (e.arrowOfTopic = function (t) {
          return `topic:arrow:${t}`;
        }),
        (e.treeBranchOfTopic = function (t) {
          return `topic:tree-branch:${t}`;
        }),
        (e.headerLineOfTopic = function (t) {
          return `topic:header-underline:${t}`;
        }),
        (e.subtopicEllipsisOfSummary = function (t) {
          return `topic:summary-subtopic-ellipsis:${t}`;
        }),
        (e.topBraceOfSummary = function (t) {
          return `topic:summary-top-brace:${t}`;
        }),
        (e.bottomBraceOfSummary = function (t) {
          return `topic:summary-bottom-brace:${t}`;
        }),
        (e.braceShapeOfSummary = function (t) {
          return `topic:summary-brace-shape:${t}`;
        }),
        (e.contentOfSummary = function (t) {
          return `topic:summary-content:${t}`;
        }),
        (e.watermark = function () {
          return "topic:watermark";
        }),
        (e.toBoxRoles = function (t) {
          return Object.keys(t).filter((e) => t[e]);
        }),
        (e.findBox = i),
        (e.filterBoxes = function (t, e) {
          const i = [];
          return (
            n(t, (t) => {
              e(t) && i.push(t);
            }),
            i
          );
        }),
        (e.getBoxById = function (t, e, n) {
          const o = i(t, (t) => t.id === e);
          return o && n && o.contentType !== n ? null : o;
        }),
        (e.assertBox = function (t) {
          if (!t) throw new Error("Box is null or undefined");
          return t;
        }),
        (e.forEachBox = n),
        (e.mutateBoxes = function t(e, i) {
          return e.map(
            (e) => (
              "group" === e.contentType &&
                (e = Object.assign(Object.assign({}, e), {
                  children: t(e.children, i),
                })),
              i(e)
            ),
          );
        });
    },
    87587: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 });
    },
    6776: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__createBinding) ||
          (Object.create
            ? function (t, e, i, n) {
                void 0 === n && (n = i),
                  Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                      return e[i];
                    },
                  });
              }
            : function (t, e, i, n) {
                void 0 === n && (n = i), (t[n] = e[i]);
              }),
        o =
          (this && this.__exportStar) ||
          function (t, e) {
            for (var i in t)
              "default" === i ||
                Object.prototype.hasOwnProperty.call(e, i) ||
                n(e, t, i);
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        o(i(87587), e),
        o(i(80904), e),
        o(i(25300), e),
        o(i(37688), e),
        o(i(43998), e),
        o(i(47572), e),
        o(i(65361), e),
        o(i(9988), e),
        o(i(2183), e);
    },
    65361: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.getEligibleImagePlacements =
          e.computeSlideContent =
          e.computeTopicLevel =
          e.computeTopicSlideImagePlacement =
          e.computeSlideLayout =
          e.getEligibleSlideLayouts =
            void 0);
      const n = i(42504),
        o = i(73886),
        l = i(30207),
        r = i(76118);
      (e.getEligibleSlideLayouts = function (t, e) {
        return n.getEligibleSlideLayouts(t, e);
      }),
        (e.computeSlideLayout = function (t, e, i, o = {}) {
          return n.computeSlideLayout(t, e, i, o);
        }),
        (e.computeTopicSlideImagePlacement = function (t, e, i, n = {}) {
          return r.computeTopicSlideImagePlacement(t, e, i, n);
        }),
        (e.computeTopicLevel = function (t, e) {
          return o.computeTopicLevel(t, e);
        }),
        (e.computeSlideContent = function (t, e, i) {
          return l.computeSlideContent(t, e, i);
        }),
        (e.getEligibleImagePlacements = function (t) {
          return r.getEligibleImagePlacements(t);
        });
    },
    2183: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.isSlideSkippedScopedBy = e.previewSlidesScopedBy = void 0);
      const o = i(43372),
        l = i(71665);
      function r(t, e, i, n = {}) {
        if ("topic" === i) {
          const i = t.getSlideByAlias({ kind: "startOfTopic", topicId: e });
          if (i) return t.isSlideSkipped(i, n);
        } else if ("list" === i) {
          const i = t.getSlideContent(e);
          if (i && i.subtopics.length > 0) {
            const o = t.getSlideByAlias({
              kind: "listOfTopic",
              index: 0,
              topicId: e,
            });
            return n.ignoresUserValue
              ? !(
                  !o ||
                  "skip" !==
                    l.computeSuccessiveSingleParentListSlideVisiblility(o, t)
                )
              : "skip" === i.topic.listSlides;
          }
        } else {
          const i = t.getSlideByAlias({ kind: "startOfSummary", topicId: e });
          if (i) return t.isSlideSkipped(i, n);
        }
        return !0;
      }
      function a(t, e, i) {
        var a, s, c, d, u, p;
        return n(this, void 0, void 0, function* () {
          const n = (function (t, e, i) {
            const n = r(t, e, "summary"),
              o = r(t, e, "topic"),
              l = r(t, e, "list");
            let a;
            a = i
              ? "summary" !== i || n
                ? "topic" !== i || o
                  ? "list" !== i || l
                    ? "topic" === i
                      ? l
                        ? "summary"
                        : "list"
                      : "list" === i
                        ? n
                          ? "topic"
                          : "summary"
                        : o
                          ? "list"
                          : "topic"
                    : "list"
                  : "topic"
                : "summary"
              : n
                ? o
                  ? "list"
                  : "topic"
                : "summary";
            return a;
          })(t, e, i);
          yield t.present(e, n);
          const h = t.currentSlide;
          if (h) {
            const e = t.disablesAutoTransition;
            t.disablesAutoTransition = !0;
            const i = (function (t, e) {
              var i;
              const n = (e) => {
                var i, n, o, r, a, s;
                if (
                  0 === e.subtopics.length ||
                  "skip" ===
                    (null === (i = t.getSlideContent(e.topicId)) || void 0 === i
                      ? void 0
                      : i.topic.listSlides)
                )
                  return "list" === e.type
                    ? e
                    : null !==
                          (n = t.getSlideByAlias({
                            kind: "startOfTopic",
                            topicId: e.topicId,
                          })) && void 0 !== n
                      ? n
                      : e;
                const c =
                  null !==
                    (a =
                      null ===
                        (r =
                          null === (o = t.getSlideContent(e.topicId)) ||
                          void 0 === o
                            ? void 0
                            : o.topic) || void 0 === r
                        ? void 0
                        : r.listSlideDelivery) && void 0 !== a
                    ? a
                    : t.defaultListSlideDelivery;
                if ("one-by-one" === c)
                  return t.getSlideByAlias({
                    kind: "listOfTopic",
                    topicId: e.topicId,
                    index: Math.min(4, e.subtopics.length - 1),
                  });
                if ("all-at-once" === c)
                  return t.getSlideByAlias({
                    kind: "listOfTopic",
                    topicId: e.topicId,
                    index: 0,
                  });
                {
                  const i = t.getSlideByAlias({
                    kind: "introOfTopic",
                    topicId: e.subtopics[0],
                  });
                  if (
                    i &&
                    (function (t, e) {
                      var i, n;
                      const o =
                        null === (i = t.aliases) || void 0 === i
                          ? void 0
                          : i.find((t) => "introOfTopic" === t.kind);
                      if (!o) return !1;
                      const r = t,
                        a = o;
                      function s(t) {
                        return (
                          "outroOfTopic" === t.kind && t.topicId === a.topicId
                        );
                      }
                      let c = r.nextSlide
                        ? e.getSlideByAlias(r.nextSlide)
                        : null;
                      for (
                        ;
                        null !== c &&
                        !(null === (n = c.aliases) || void 0 === n
                          ? void 0
                          : n.some(s));

                      ) {
                        if ("skip" !== l.computeSlideVisibility(c, e))
                          return !0;
                        c = c.nextSlide ? e.getSlideByAlias(c.nextSlide) : null;
                      }
                      return !1;
                    })(i, t)
                  ) {
                    const e = (t) =>
                      "outroOfTopic" === t.kind && t.topicId === i.topicId;
                    let n = (null == i ? void 0 : i.nextSlide)
                      ? t.getSlideByAlias(null == i ? void 0 : i.nextSlide)
                      : null;
                    for (
                      ;
                      null !== n &&
                      !(null === (s = n.aliases) || void 0 === s
                        ? void 0
                        : s.some(e));

                    ) {
                      if ("skip" !== l.computeSlideVisibility(n, t)) return n;
                      n = n.nextSlide ? t.getSlideByAlias(n.nextSlide) : null;
                    }
                  }
                  return i;
                }
              };
              let o = e ? n(e) : null;
              for (
                ;
                null !== o &&
                !(null === (i = o.aliases) || void 0 === i
                  ? void 0
                  : i.some((t) => {
                      var i;
                      return null === (i = null == e ? void 0 : e.aliases) ||
                        void 0 === i
                        ? void 0
                        : i.includes(t);
                    }));

              ) {
                if (!t.isSlideSkipped(o)) return o;
                o = o.previousSlide ? t.getSlideByAlias(o.previousSlide) : null;
              }
              return e;
            })(t, h);
            let n =
              null ===
                (s =
                  null === (a = t.currentSlide) || void 0 === a
                    ? void 0
                    : a.aliases) || void 0 === s
                ? void 0
                : s.some((t) => {
                    var e;
                    return null === (e = i.aliases) || void 0 === e
                      ? void 0
                      : e.includes(t);
                  });
            if (!n)
              for (; !n; )
                yield t.forward(),
                  (n =
                    null ===
                      (d =
                        null === (c = t.currentSlide) || void 0 === c
                          ? void 0
                          : c.aliases) || void 0 === d
                      ? void 0
                      : d.some((t) => {
                          var e;
                          return null === (e = i.aliases) || void 0 === e
                            ? void 0
                            : e.includes(t);
                        }));
            const r =
              h.topicId ===
                (null === (u = t.currentSlide) || void 0 === u
                  ? void 0
                  : u.topicId) &&
              "list" !==
                (null === (p = t.currentSlide) || void 0 === p
                  ? void 0
                  : p.type);
            if (n && r) {
              let e = t.currentSlide
                ? o.computeMultistepChange(
                    { kind: "forward" },
                    t.currentSlide,
                    t.slideState,
                  )
                : null;
              for (; e && Object.keys(e).length > 0; )
                yield t.forward(),
                  (e = t.currentSlide
                    ? o.computeMultistepChange(
                        { kind: "forward" },
                        t.currentSlide,
                        t.slideState,
                      )
                    : null);
            }
            t.disablesAutoTransition = e;
          }
        });
      }
      (e.previewSlidesScopedBy = function (t, e, i, o) {
        return n(this, void 0, void 0, function* () {
          return t.preview(e, a, i, o);
        });
      }),
        (e.isSlideSkippedScopedBy = r);
    },
    37688: function (t, e) {
      "use strict";
      var i =
        (this && this.__rest) ||
        function (t, e) {
          var i = {};
          for (var n in t)
            Object.prototype.hasOwnProperty.call(t, n) &&
              e.indexOf(n) < 0 &&
              (i[n] = t[n]);
          if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
            var o = 0;
            for (n = Object.getOwnPropertySymbols(t); o < n.length; o++)
              e.indexOf(n[o]) < 0 &&
                Object.prototype.propertyIsEnumerable.call(t, n[o]) &&
                (i[n[o]] = t[n[o]]);
          }
          return i;
        };
      function n(t, e) {
        var n, o, l;
        if (((t = null != t ? t : {}), !e)) return t;
        const { boxes: r } = e,
          a = i(e, ["boxes"]);
        for (const e of null != r ? r : []) {
          t = (
            null === (n = t.boxes) || void 0 === n
              ? void 0
              : n.find((t) => t.id === e.id)
          )
            ? Object.assign(Object.assign({}, t), {
                boxes: (null !== (o = t.boxes) && void 0 !== o ? o : []).map(
                  (t) =>
                    t.id === e.id ? Object.assign(Object.assign({}, t), e) : t,
                ),
              })
            : Object.assign(Object.assign({}, t), {
                boxes: [
                  ...(null !== (l = t.boxes) && void 0 !== l ? l : []),
                  Object.assign({}, e),
                ],
              });
        }
        return (
          Object.keys(a).length > 0 &&
            (t = Object.assign(Object.assign({}, t), a)),
          t
        );
      }
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.isTwoSlideAliasesJoin =
          e.addMultistepBox =
          e.isSlideContentFeatureCoveredBy =
          e.addSlideContentFeatures =
          e.setBoxStateForRevertedPresenterPerspectiveMode =
          e.setBoxStateForPresenterPerspectiveMode =
          e.mergeSlideState =
          e.setBoxEnteringState =
          e.addSlideAdditionalEnteringStates =
          e.setSlideEnteringState =
          e.addSlideEnteringAnimations =
          e.addSlideLeavingAnimations =
          e.addSlideAliases =
          e.slideSizeIdOf =
          e.slideSizes =
          e.slideSize_9_16 =
          e.slideSize_3_4 =
          e.slideSize_16_9 =
          e.slideSize_4_3 =
            void 0),
        (e.slideSize_4_3 = { width: 1200, height: 900 }),
        (e.slideSize_16_9 = { width: 1600, height: 900 }),
        (e.slideSize_3_4 = { width: 900, height: 1200 }),
        (e.slideSize_9_16 = { width: 900, height: 1600 }),
        (e.slideSizes = {
          "4:3": e.slideSize_4_3,
          "16:9": e.slideSize_16_9,
          "3:4": e.slideSize_3_4,
          "9:16": e.slideSize_9_16,
        }),
        (e.slideSizeIdOf = function (t) {
          return Object.keys(e.slideSizes).find(
            (i) =>
              e.slideSizes[i].width === t.width &&
              e.slideSizes[i].height === t.height,
          );
        }),
        (e.addSlideAliases = function (t, ...e) {
          var i;
          t.aliases = [
            ...(null !== (i = t.aliases) && void 0 !== i ? i : []),
            ...e,
          ];
        }),
        (e.addSlideLeavingAnimations = function (t, e) {
          var i;
          t.leavingAnimations = [
            ...(null !== (i = t.leavingAnimations) && void 0 !== i ? i : []),
            ...e,
          ];
        }),
        (e.addSlideEnteringAnimations = function (t, e) {
          var i;
          t.enteringAnimations = [
            ...(null !== (i = t.enteringAnimations) && void 0 !== i ? i : []),
            ...e,
          ];
        }),
        (e.setSlideEnteringState = function (t, e) {
          t.enteringStates = e;
        }),
        (e.addSlideAdditionalEnteringStates = function (t, e) {
          var i;
          t.additionalEnteringStates = [
            ...(null !== (i = t.additionalEnteringStates) && void 0 !== i
              ? i
              : []),
            ...e,
          ];
        }),
        (e.setBoxEnteringState = function (t, e) {
          t.enteringStates = n(t.enteringStates, { boxes: [e] });
        }),
        (e.mergeSlideState = n),
        (e.setBoxStateForPresenterPerspectiveMode = function (t, e) {
          t.presenterPerspectiveStates = n(t.presenterPerspectiveStates, {
            boxes: [e],
          });
        }),
        (e.setBoxStateForRevertedPresenterPerspectiveMode = function (t, e) {
          t.revertedPresenterPerspectiveStates = n(
            t.revertedPresenterPerspectiveStates,
            { boxes: [e] },
          );
        }),
        (e.addSlideContentFeatures = function (t, ...e) {
          var i;
          t.contentFeatures = [
            ...(null !== (i = t.contentFeatures) && void 0 !== i ? i : []),
            ...e,
          ];
        }),
        (e.isSlideContentFeatureCoveredBy = function (t, e) {
          return (
            t.kind === e.kind &&
            t.topicId === e.topicId &&
            ("partial" === t.integrity || "full" === e.integrity)
          );
        }),
        (e.addMultistepBox = function (t, e) {
          var i;
          t.multistepBoxes = [
            ...(null !== (i = t.multistepBoxes) && void 0 !== i ? i : []),
            e,
          ];
        }),
        (e.isTwoSlideAliasesJoin = function (t, e) {
          for (const i of t)
            if (e.find((t) => t.kind === i.kind && t.topicId === i.topicId))
              return !0;
          return !1;
        });
    },
    9988: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.Slideshow = void 0);
      const o = i(37688),
        l = i(25300),
        r = i(14446),
        a = i(84152),
        s = i(71934),
        c = i(71665),
        d = i(94938),
        u = i(43372),
        p = i(30207),
        h = i(80412),
        g = i(33849),
        f = i(10895);
      e.Slideshow = class {
        constructor(t) {
          var e, i, n, l, a;
          (this._disablesWatermark = !1),
            (this._disablesAnimations = !1),
            (this._disablesAutoTransition = !1),
            (this._contentCache = new Map()),
            (this._templateSlides = new Map()),
            (this._slideStore = new r.SlideStore()),
            (this._presenters = []),
            (this._currentSlide = null),
            (this._isPerformingTransition = !1),
            (this._isPerformingEndingScreenTransition = !1),
            (this._currentModalContentType = null),
            (this._slideBeforeEndingScreen = null),
            (this._endingScreenContentCache = null),
            (this._numberOfPendingTransitionRequests = 0),
            (this._isHandlingTransitionRequest = !1),
            (this._slideState = {}),
            (this.eventCallbacks = new Map()),
            (this._videoPlayHistory = []),
            (this.baseDuration = 400),
            (this.restoreSlideDurationMultiplier = 1),
            (this.inSlideAnimationDurationMultiplier = 1),
            (this.presentEndingScreenDurationMultiplier = 2.5),
            (this.dismissEndingScreenDurationMultiplier = 1),
            (this._slideSize =
              null !==
                (e =
                  "string" == typeof t.slideSize
                    ? o.slideSizes[t.slideSize]
                    : t.slideSize) && void 0 !== e
                ? e
                : o.slideSize_16_9),
            (this._contentProvider =
              "contentProvider" in t ? t.contentProvider : t),
            (this._slideAppearanceId =
              null !== (i = t.slideTheme) && void 0 !== i ? i : "default"),
            (this._defaultListSlideDelivery =
              null !== (n = t.listSlideDelivery) && void 0 !== n
                ? n
                : "one-by-one-drill-in"),
            (this._disablesWatermark =
              null !== (l = t.disablesWatermark) && void 0 !== l && l),
            (this._preferredLanguage =
              null !== (a = t.preferredLanguage) && void 0 !== a ? a : "en"),
            (this._enqueueAsyncJob = d.makeAsyncQueue());
        }
        get slideSize() {
          return this._slideSize;
        }
        get slideAppearanceId() {
          return this._slideAppearanceId;
        }
        get disablesWatermark() {
          return this._disablesWatermark;
        }
        get contentProvider() {
          return this._contentProvider;
        }
        get defaultListSlideDelivery() {
          return this._defaultListSlideDelivery;
        }
        get currentSlide() {
          return this._currentSlide;
        }
        get currentTopicId() {
          var t, e;
          return null !==
            (e =
              null === (t = this._currentSlide) || void 0 === t
                ? void 0
                : t.topicId) && void 0 !== e
            ? e
            : null;
        }
        get isPerformingTransition() {
          return (
            this._isPerformingTransition ||
            this._isPerformingEndingScreenTransition
          );
        }
        get slideState() {
          return this._slideState;
        }
        get isShowingEndingScreen() {
          return null !== this._slideBeforeEndingScreen;
        }
        get isShowingModal() {
          return !!this._currentModalContentType;
        }
        get isShowingImageZoomDisplay() {
          return "image" === this._currentModalContentType;
        }
        get isShowingVideoDisplay() {
          return "video" === this._currentModalContentType;
        }
        get isShowingNothing() {
          return null === this._currentSlide && !this.isShowingEndingScreen;
        }
        getTransition(t, e) {
          return s.computeTransition(this, t, this.baseDuration, e, {
            disablesAnimations: this._disablesAnimations,
          });
        }
        getStartingSlide(t) {
          const e = null != t ? t : this._contentProvider.getStartingTopicId();
          return e
            ? this.getSlideByAlias({ kind: "startOfTopic", topicId: e })
            : null;
        }
        getSlideContent(t) {
          const e = t,
            i = this._contentCache.get(e);
          if (void 0 !== i) return i;
          const n = p.computeSlideContent(
            t,
            this._contentProvider,
            this.defaultListSlideDelivery,
          );
          return this._contentCache.set(e, n), n;
        }
        getTemplateSlide(t, e) {
          var i;
          if ("epilogue" === t)
            return a.generateTemplateSlideFor(
              t,
              a.generateSlideContentForEpilogueSlide(e),
              {
                slideSize: this.slideSize,
                appearanceId: this.slideAppearanceId,
                disablesWatermark: this.disablesWatermark,
                preferredLanguage: this._preferredLanguage,
              },
            );
          const n = `${t}:${e}`;
          let o =
            null !== (i = this._templateSlides.get(n)) && void 0 !== i
              ? i
              : null;
          if (!o) {
            const i = this.getSlideContent(e);
            i &&
              ((o = a.generateTemplateSlideFor(t, i, {
                slideSize: this.slideSize,
                appearanceId: this.slideAppearanceId,
                disablesWatermark: this.disablesWatermark,
                preferredLanguage: this._preferredLanguage,
              })),
              o && this._templateSlides.set(n, o));
          }
          return o;
        }
        getSlideByAlias(t) {
          var e;
          let i = this._slideStore.getSlide(t);
          if (!i) {
            const n = a.getTopicIdForGeneratingSlideByAlias(
              t,
              this._contentProvider,
            );
            if (n) {
              const o = this.getSlideContent(n);
              if (o) {
                const l = a.generatePresentationalSlidesFor(
                  o,
                  this._disablesAnimations,
                  (t, e) => this.getTemplateSlide(t, e),
                );
                for (const t of l)
                  for (const i of null !== (e = t.aliases) && void 0 !== e
                    ? e
                    : [])
                    this._slideStore.setSlide(i, t),
                      this._slideStore.addSlideGeneratedForTopic(n, i);
                i = this._slideStore.getSlide(t);
              }
            }
          }
          return i;
        }
        isSlideSkipped(t, e = {}) {
          return "skip" === c.computeSlideVisibility(t, this, e);
        }
        computeSlideAutoTransitionFor(t, e) {
          return g.computeSlideAutoTransitionFor(t, e, this);
        }
        present(t, e) {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({
              kind: "present",
              topicId: t,
              slideType: e,
            });
          });
        }
        forward() {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({ kind: "forward" });
          });
        }
        backward() {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({ kind: "backward" });
          });
        }
        fastBackward() {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({
              kind: "fastBackward",
            });
          });
        }
        fastForward() {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({
              kind: "fastForward",
            });
          });
        }
        changeSlideSize(t) {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({
              kind: "changeSlideSize",
              slideSize: t,
            });
          });
        }
        changeSlideTheme(t) {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({
              kind: "changeAppearance",
              appearanceId: t,
            });
          });
        }
        forceUpdateSlideContent(t) {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({
              kind: "forceUpdateSlideContent",
              topicId: t,
            });
          });
        }
        preview(t, e, i, o) {
          return n(this, void 0, void 0, function* () {
            yield e(this, t, i, o),
              yield new Promise((t) => {
                var e;
                return setTimeout(
                  () => t(),
                  null !== (e = null == o ? void 0 : o.interval) && void 0 !== e
                    ? e
                    : 0,
                );
              }),
              yield this._performTransition({
                sourceSlide: this.currentSlide,
                targetSlide: null,
                baseDuration: this.baseDuration,
                duration: this.baseDuration,
                effect: "dissolve",
              });
          });
        }
        get disablesAnimations() {
          return this._disablesAnimations;
        }
        set disablesAnimations(t) {
          (this._disablesAnimations = t),
            "hubble-bubble" === this._slideAppearanceId &&
              (this._templateSlides.clear(), this._slideStore.clear()),
            this._preloadNextSlideTransition();
        }
        changeWatermarkDisabled(t) {
          return n(this, void 0, void 0, function* () {
            return yield this._enqueueTransitionRequest({
              kind: "changeWatermarkDisabled",
              disabled: t,
            });
          });
        }
        get disablesAutoTransition() {
          return this._disablesAutoTransition;
        }
        set disablesAutoTransition(t) {
          this._disablesAutoTransition = t;
        }
        addPresenter(t) {
          (this._presenters = [...this._presenters, t]), (t.delegate = this);
        }
        removePresenter(t) {
          delete t.delegate,
            (this._presenters = this._presenters.filter((e) => e !== t));
        }
        presenterDidReceivePointerInteraction(t, e) {
          switch (e.kind) {
            case "hit":
              return this._handleHitInteraction(e);
            case "scroll":
              return this._handleScrollInteraction(e);
            case "enter":
            case "leave":
              return this._handleEnterLeaveInteraction(e);
            case "captured":
            case "released":
              return this._handleCapturedReleasedInteraction(e);
          }
        }
        emitEvent(t) {
          ("stateWillChange" !== t && "stateDidChange" !== t) ||
            this.emit({ type: t, slideshow: this });
        }
        computeNextStoppedSlide(t, e, i) {
          const n = null != e ? e : this._currentSlide;
          if (n && !i) {
            const e = u.computeMultistepChange(t, n, this._slideState);
            if (e && Object.keys(e).length > 0) return n;
          }
          const o = s.computeTransition(this, t, this.baseDuration, n, {
            disablesAnimations: this._disablesAnimations,
          });
          return (null == o ? void 0 : o.targetSlide) &&
            g.computeSlideAutoTransitionFor(t, o.targetSlide, this)
            ? this.computeNextStoppedSlide(t, o.targetSlide, i)
            : o
              ? o.targetSlide
              : null;
        }
        _handleHitInteraction(t) {
          if (this._isHandlingTransitionRequest) return;
          const e = this.currentSlide;
          if (t.modal) this._handleModal(t.modal, t.boxId);
          else {
            if (t.boxId && t.isPlayVideo && e) {
              const i = l.findBox(e.boxes, (e) => e.id === t.boxId);
              if (i && "image" === i.contentType && i.videoSource)
                return void this.emit({
                  type: "playWebVideo",
                  request: { videoSource: i.videoSource },
                  slideshow: this,
                });
            }
            if (t.boxId && e) {
              const i = l.findBox(e.boxes, (e) => e.id === t.boxId);
              if (i && i.requestForHit)
                return void ("kind" in i.requestForHit
                  ? this._enqueueTransitionRequest(i.requestForHit)
                  : this.emit({
                      type: "reveal",
                      request: i.requestForHit,
                      slideshow: this,
                    }));
            }
            this._enqueueTransitionRequest({ kind: "forward" });
          }
        }
        _handleModal(t, e) {
          const { toggle: i } = t;
          "show" === i && this._handleShowModal(t, e),
            "close" === i && this._handleCloseModal(t);
        }
        _handleShowModal(t, e) {
          "image" === t.contentType &&
            e &&
            (this._presenters.map((i) =>
              i.presentModalDisplay({ contentType: t.contentType }, e),
            ),
            (this._currentModalContentType = t.contentType),
            this.emit({ type: "modalOpened", slideshow: this }));
        }
        _handleCloseModal(t) {
          return n(this, void 0, void 0, function* () {
            yield Promise.all(
              this._presenters.map((e) => e.dismissModalDisplay(t.contentType)),
            ),
              (this._currentModalContentType = null),
              this.emit({ type: "modalClosed", slideshow: this });
          });
        }
        _handleScrollInteraction(t) {
          if (this._isHandlingTransitionRequest) return;
          if (!this._currentSlide) return;
          const { boxId: e, scrollOffset: i } = t;
          this._changeState([
            (t) =>
              o.mergeSlideState(t, { boxes: [{ id: e, scrollOffset: i }] }),
          ]);
        }
        _handleEnterLeaveInteraction(t) {
          this._isHandlingTransitionRequest ||
            this._changeState([
              (e) =>
                o.mergeSlideState(
                  e,
                  this._computeHitBoxStates(t.boxId, t.kind),
                ),
            ]);
        }
        _handleCapturedReleasedInteraction(t) {
          this._isHandlingTransitionRequest ||
            ("captured" === t.kind &&
              this._changeState([
                (e) =>
                  o.mergeSlideState(
                    e,
                    this._computeHitBoxStates(t.boxId, "captured"),
                  ),
              ]));
        }
        _computeHitBoxStates(t, e) {
          return t && this.currentSlide
            ? h.computeHittableBoxStates(this.currentSlide, t, e)
            : null;
        }
        _changeState(t, e = 0) {
          return n(this, void 0, void 0, function* () {
            const i = this._disablesAnimations ? 0 : this.baseDuration * e;
            this.emit({ type: "stateWillChange", slideshow: this }),
              (this._slideState = t.reduce((t, e) => e(t), this._slideState)),
              yield Promise.all(
                this._presenters.map((t) =>
                  t.performStateChange(this._slideState, {
                    duration: i,
                    easing: "easeInOutCubic",
                  }),
                ),
              ),
              this.emit({ type: "stateDidChange", slideshow: this });
          });
        }
        _enqueueTransitionRequest(t) {
          return this.isShowingImageZoomDisplay ||
            this._numberOfPendingTransitionRequests >= 1
            ? Promise.resolve({ ignored: !0 })
            : ((this._numberOfPendingTransitionRequests += 1),
              new Promise((e, i) => {
                this._enqueueAsyncJob(
                  () => (
                    (this._isHandlingTransitionRequest = !0),
                    (this._numberOfPendingTransitionRequests -= 1),
                    this.emit({
                      type: "transitionStart",
                      request: t,
                      slideshow: this,
                    }),
                    this._handleTransitionRequest(t)
                      .then(() => {
                        e({});
                      })
                      .catch((t) => {
                        i(t);
                      })
                      .then(() => {
                        this.emit({
                          type: "transitionEnd",
                          request: t,
                          slideshow: this,
                        }),
                          (this._isHandlingTransitionRequest = !1),
                          this._preloadNextSlideTransition(),
                          this.isShowingNothing &&
                            this.emit({ type: "finish", slideshow: this });
                      })
                  ),
                );
              }));
        }
        _handleTransitionRequest(t) {
          return n(this, void 0, void 0, function* () {
            if ("changeSlideSize" === t.kind)
              return void (yield this._handleChangeSlideSizeRequest(
                t.slideSize,
              ));
            if ("changeAppearance" === t.kind)
              return void (yield this._handleChangeAppearanceRequest(
                t.appearanceId,
              ));
            if ("changeWatermarkDisabled" === t.kind)
              return void (yield this._handleChangeWatermarkRequest(
                t.disabled,
              ));
            if (
              ("forceUpdateSlideContent" === t.kind &&
                (yield this._handleForceUpdateSlideContentRequest(t.topicId)),
              this.isShowingEndingScreen)
            )
              return void (yield this._handleTransitionRequestFromEndingScreen(
                t,
              ));
            if (yield this._tryPerformInSlideAnimations(t)) return;
            let e = t;
            for (; e; )
              e = yield this._performSlideTransitionByRequest(e, {
                isAutomaticallyRequested: e !== t,
              });
          });
        }
        _performSlideTransitionByRequest(t, e = {}) {
          var i;
          return n(this, void 0, void 0, function* () {
            const n = this._currentSlide,
              o = this.getTransition(t, n);
            return o && o.sourceSlide !== o.targetSlide
              ? (yield Promise.all([
                  this._performTransition(o),
                  o.targetSlide
                    ? Promise.resolve()
                    : this._presentEndingScreen(n, {
                        duration:
                          this.baseDuration *
                          this.presentEndingScreenDurationMultiplier,
                      }),
                ]),
                e.isAutomaticallyRequested ||
                  (yield this._changeState(
                    [() => ({})],
                    this.restoreSlideDurationMultiplier,
                  )),
                "present" === t.kind &&
                t.viaIntro &&
                o.targetSlide &&
                !(null === (i = o.targetSlide.aliases) || void 0 === i
                  ? void 0
                  : i.some(
                      (e) =>
                        "startOfTopic" === e.kind && e.topicId === t.topicId,
                    ))
                  ? { kind: "present", topicId: t.topicId }
                  : !this._disablesAutoTransition &&
                      o.targetSlide &&
                      g.computeSlideAutoTransitionFor(t, o.targetSlide, this)
                    ? "backward" === t.kind || "fastBackward" === t.kind
                      ? { kind: "backward" }
                      : { kind: "forward" }
                    : null)
              : null;
          });
        }
        _handleChangeSlideSizeRequest(t) {
          return n(this, void 0, void 0, function* () {
            t !== this._slideSize &&
              (yield this._changeSlideAttributes(() => {
                this._slideSize = t;
              }));
          });
        }
        _handleChangeAppearanceRequest(t) {
          return n(this, void 0, void 0, function* () {
            t !== this._slideAppearanceId &&
              (yield this._changeSlideAttributes(() => {
                this._slideAppearanceId = t;
              }));
          });
        }
        _handleChangeWatermarkRequest(t) {
          return n(this, void 0, void 0, function* () {
            t !== this._disablesWatermark &&
              (yield this._changeSlideAttributes(() => {
                this._disablesWatermark = t;
              }));
          });
        }
        _handleForceUpdateSlideContentRequest(t) {
          return n(this, void 0, void 0, function* () {
            yield this._changeSlideAttributes(() => {
              t ? this._contentCache.delete(t) : this._contentCache.clear();
            });
          });
        }
        _changeSlideAttributes(t) {
          return n(this, void 0, void 0, function* () {
            if (
              (this._templateSlides.clear(),
              this._slideStore.clear(),
              (this._endingScreenContentCache = null),
              null == t || t(),
              null !== this._slideBeforeEndingScreen)
            ) {
              if (
                this._slideBeforeEndingScreen.aliases &&
                this._slideBeforeEndingScreen.aliases.length > 0
              ) {
                const t = this._slideBeforeEndingScreen.aliases[0];
                this._slideBeforeEndingScreen = this.getSlideByAlias(t);
              }
              yield this._presentEndingScreen(this._slideBeforeEndingScreen, {
                duration:
                  this.baseDuration *
                  this.presentEndingScreenDurationMultiplier,
              });
            } else {
              const t = this._currentSlide;
              if (!t) return;
              if (!t.aliases || 0 === t.aliases.length) return;
              const e = t.aliases[0],
                i = this.getSlideByAlias(e);
              if (!i)
                throw new Error(
                  "Failed to find the target slide after changing slide theme.",
                );
              yield this._performTransition({
                effect: "dissolve",
                duration: this.baseDuration,
                baseDuration: this.baseDuration,
                sourceSlide: t,
                targetSlide: i,
              }),
                yield this._changeState([() => ({})]);
            }
          });
        }
        _preloadNextSlideTransition() {
          return n(this, void 0, void 0, function* () {
            if (null === this._currentSlide) return;
            const t = this.getTransition(
              { kind: "forward" },
              this._currentSlide,
            );
            if (t)
              if (
                !t.targetSlide &&
                this._contentProvider.getEndingScreenContent
              ) {
                const t = f.computeEndingScreenColors(this._slideAppearanceId);
                this._endingScreenContentCache =
                  yield this._contentProvider.getEndingScreenContent(t);
              } else if (t.sourceSlide !== t.targetSlide)
                for (const e of this._presenters)
                  e.preloadTransition && e.preloadTransition(t);
          });
        }
        _handleTransitionRequestFromEndingScreen(t) {
          var e, i, o;
          return n(this, void 0, void 0, function* () {
            if ("forward" === t.kind)
              yield this._dismissEndingScreen({
                animated: !0,
                duration:
                  this.baseDuration *
                  this.dismissEndingScreenDurationMultiplier,
              });
            else if ("backward" === t.kind) {
              const t =
                  (null === (e = this._slideBeforeEndingScreen) || void 0 === e
                    ? void 0
                    : e.aliases) &&
                  (null ===
                    (o =
                      null === (i = this._slideBeforeEndingScreen) ||
                      void 0 === i
                        ? void 0
                        : i.aliases) || void 0 === o
                    ? void 0
                    : o.length) > 0
                    ? this._slideBeforeEndingScreen.aliases[0]
                    : null,
                n = t ? this.getSlideByAlias(t) : null;
              yield this._dismissEndingScreen({ animated: !1, duration: 0 }),
                yield this._performTransition({
                  effect: "none",
                  duration: 0,
                  baseDuration: this.baseDuration,
                  sourceSlide: null,
                  targetSlide: n,
                });
            }
          });
        }
        _tryPerformInSlideAnimations(t) {
          return n(this, void 0, void 0, function* () {
            const e = this._currentSlide;
            if (!e) return !1;
            const i = u.computeMultistepChange(t, e, this._slideState);
            return (
              !(!i || 0 === Object.keys(i).length) &&
              (yield this._changeState(
                [(t) => o.mergeSlideState(t, i)],
                this.inSlideAnimationDurationMultiplier,
              ),
              !0)
            );
          });
        }
        _performTransition(t) {
          return n(this, void 0, void 0, function* () {
            (this._isPerformingTransition = !0),
              yield Promise.all(
                this._presenters.map((e) => e.performTransition(t)),
              ),
              (this._isPerformingTransition = !1),
              this._currentSlide !== t.targetSlide &&
                (this._videoPlayHistory = this._videoPlayHistory.filter((e) => {
                  var i, n;
                  return !o.isTwoSlideAliasesJoin(
                    e.slideAliases,
                    null !==
                      (n =
                        null === (i = t.targetSlide) || void 0 === i
                          ? void 0
                          : i.aliases) && void 0 !== n
                      ? n
                      : [],
                  );
                })),
              (this._currentSlide = t.targetSlide);
          });
        }
        _presentEndingScreen(t, e) {
          return n(this, void 0, void 0, function* () {
            const i = this._presenters.filter(
              (t) => "presentEndingScreen" in t,
            );
            if (i.length <= 0) return;
            const n = f.computeEndingScreenColors(this._slideAppearanceId);
            let o = this._endingScreenContentCache;
            if (!o) {
              if (!this._contentProvider.getEndingScreenContent) return;
              o = yield this._contentProvider.getEndingScreenContent(n);
            }
            if (!o) return;
            (this._slideBeforeEndingScreen = t),
              (this._isPerformingEndingScreenTransition = !0);
            const l = "epilogue" === (null == t ? void 0 : t.type) ? t : void 0,
              r = o;
            yield Promise.all(
              i.map((t) =>
                t.presentEndingScreen(
                  r,
                  this.slideSize,
                  l,
                  n.map.background,
                  e,
                ),
              ),
            ),
              (this._isPerformingEndingScreenTransition = !1);
          });
        }
        _dismissEndingScreen(t) {
          return n(this, void 0, void 0, function* () {
            this._presenters.filter((t) => "presentEndingScreen" in t).length <=
              0 ||
              ((this._isPerformingEndingScreenTransition = !0),
              yield Promise.all(
                this._presenters
                  .filter((t) => "dismissEndingScreen" in t)
                  .map((e) => e.dismissEndingScreen(t)),
              ),
              (this._isPerformingEndingScreenTransition = !1)),
              (this._slideBeforeEndingScreen = null);
          });
        }
        on(t, e) {
          var i;
          const n =
            null !== (i = this.eventCallbacks.get(t)) && void 0 !== i ? i : [];
          this.eventCallbacks.set(t, [...n, e]);
        }
        off(t, e) {
          var i;
          let n =
            null !== (i = this.eventCallbacks.get(t)) && void 0 !== i ? i : [];
          (n = n.filter((t) => t !== e)), this.eventCallbacks.set(t, n);
        }
        emit(t) {
          const e = this.eventCallbacks.get(t.type);
          if (e) for (const i of e) i(t);
        }
        clearSlideCache() {
          this._templateSlides.clear(),
            this._slideStore.clear(),
            this._contentCache.clear(),
            (this._endingScreenContentCache = null);
        }
      };
    },
    80904: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.allTopicSlideImagePlacements = e.computeSuccessorListSlideLayout =
          void 0),
        (e.computeSuccessorListSlideLayout = function (t) {
          return "timeline" === t
            ? "timeline-head"
            : "fishbone" === t
              ? "fishbone-head"
              : null;
        }),
        (e.allTopicSlideImagePlacements = [
          "left",
          "right",
          "aboveTitle",
          "belowTitle",
          "full",
        ]);
    },
    47572: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 });
    },
    69738: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.BackgroundColorBrickView = void 0);
      const n = i(75327),
        o = i(1438);
      class l extends o.BoxView {
        createViewElement() {
          const t = document.createElement("div");
          return (
            (t.style.display = "block"),
            (t.style.position = "absolute"),
            (t.style.userSelect = "none"),
            (t.style.opacity = "1"),
            t.classList.add("pancake-view-background-color-brick"),
            t
          );
        }
        update() {
          var t;
          const e = this.box.bounds;
          (this.el.style.left = n.toCSSLength(e.x)),
            (this.el.style.top = n.toCSSLength(e.y)),
            (this.el.style.width = n.toCSSLength(e.width)),
            (this.el.style.height = n.toCSSLength(e.height)),
            (this.el.style.backgroundColor =
              null !== (t = this.box.color) && void 0 !== t
                ? t
                : "transparent");
        }
      }
      e.BackgroundColorBrickView = l;
    },
    95763: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__importDefault) ||
        function (t) {
          return t && t.__esModule ? t : { default: t };
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.BackgroundShapeView = void 0);
      const o = n(i(76030)),
        l = i(97857),
        r = i(1438),
        a = i(50733);
      class s extends r.BoxView {
        createViewElement() {
          const t = new DOMParser().parseFromString(
            this.box.content,
            "image/svg+xml",
          ).documentElement;
          if (
            ((t.style.position = "absolute"),
            (t.style.display = "block"),
            (t.style.transformOrigin = "50% 50%"),
            (t.style.pointerEvents = "none"),
            t.classList.add("pancake-view-background-shape"),
            this.box.clipPath)
          ) {
            const e = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "clipPath",
              ),
              i = `clip-path-${this.box.id}-${new Date().getTime()}-${Math.floor(1e3 * Math.random())}`;
            e.id = i;
            const n = document.createElementNS(
              "http://www.w3.org/2000/svg",
              "path",
            );
            n.setAttribute("d", this.box.clipPath),
              n.setAttribute("stroke-width", "21"),
              e.appendChild(n),
              t.appendChild(e);
            t.children[0].setAttribute("clip-path", `url(#${i})`);
          }
          return t;
        }
        get pathEl() {
          return this.el.children[0];
        }
        update() {
          var t, e, i, n;
          (this._cachedState = null),
            (this.renderedState.id = this.box.id),
            (this.el.style.stroke =
              null !== (t = this.box.strokeColor) && void 0 !== t
                ? t
                : "transparent"),
            (this.el.style.fill =
              null !== (e = this.box.fillColor) && void 0 !== e
                ? e
                : "transparent");
          const o = l.extractTransform(
              null !== (i = this.box.transform) && void 0 !== i ? i : [],
            ),
            r = "number" == typeof o.scale ? o.scale : o.scale.x,
            s = "number" == typeof o.scale ? o.scale : o.scale.y,
            c = `translateX(${o.translate.x}px) translateY(${o.translate.y}px) rotate(${null !== (n = o.rotate) && void 0 !== n ? n : 0}deg) scaleX(${r}) scaleY(${s})`;
          this.updateStyle(this.state, "opacity", (t) =>
            a.ViewAnimator.perform(this.el, { opacity: null != t ? t : 1 }),
          ),
            "bouncing" === this.box.privilegedAnimation
              ? this.backgroundAnimation && this.backgroundAnimation.completed
                ? (this.el.style.transform = c)
                : this.backgroundAnimation || (this.el.style.transform = c)
              : (this.el.style.transform = c);
        }
        updateStyle(t, e, i) {
          var n;
          const o =
            null !== (n = null == t ? void 0 : t[e]) && void 0 !== n
              ? n
              : this.box[e];
          i(o), (this.renderedState[e] = o);
        }
        connect() {
          var t;
          if (
            (super.connect(),
            "bouncing" === this.box.privilegedAnimation &&
              !this.backgroundAnimation)
          ) {
            const e = l.extractTransform(
                null !== (t = this.box.transform) && void 0 !== t ? t : [],
              ),
              i = "number" == typeof e.scale ? e.scale : e.scale.x,
              n = "number" == typeof e.scale ? e.scale : e.scale.y,
              r = i + 25 / (this.box.bounds.width * i),
              a = n + 25 / (this.box.bounds.height * n);
            this.backgroundAnimation = o.default({
              targets: [this.el],
              translateX: [e.translate.x, e.translate.x],
              translateY: [e.translate.y, e.translate.y],
              rotate: [e.rotate, e.rotate],
              scaleX: [i, r],
              scaleY: [n, a],
              direction: "alternate",
              loop: 2,
              easing: "easeInQuart",
              duration: 2e3,
            });
          }
        }
        disconnect() {
          var t;
          null === (t = this.backgroundAnimation) || void 0 === t || t.pause(),
            super.disconnect();
        }
      }
      e.BackgroundShapeView = s;
    },
    1438: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.htmlClassesForBox = e.forEachBoxViewIn = e.BoxView = void 0);
      const n = i(6776),
        o = i(75327),
        l = i(14850),
        r = i(50733),
        a = i(80759);
      class s extends l.View {
        constructor(t) {
          super(t),
            (this._cachedState = null),
            (this._eventListener = (t) => {
              switch (t.type) {
                case "click":
                  return this._onClick(t);
                case "mouseenter":
                  return this._onMouseEnter(t);
                case "mouseleave":
                  return this._onMouseLeave(t);
                case "mousedown":
                  return this._onMouseDown(t);
                case "mouseup":
                  return this._onMouseUp(t);
              }
            }),
            (this.box = t.box),
            (this.renderedState = { id: t.box.id });
        }
        get state() {
          var t, e, i, o;
          if (this._cachedState) return this._cachedState;
          const l = n.mergeSlideState(
            null === (t = a.findPresentationContext(this, "slideState")) ||
              void 0 === t
              ? void 0
              : t.slideState,
            null ===
              (e = a.findPresentationContext(this, "presentationState")) ||
              void 0 === e
              ? void 0
              : e.presentationState,
          );
          return (
            (this._cachedState =
              null !==
                (o =
                  null === (i = null == l ? void 0 : l.boxes) || void 0 === i
                    ? void 0
                    : i.find((t) => t.id === this.box.id)) && void 0 !== o
                ? o
                : { id: this.box.id }),
            this._cachedState
          );
        }
        update() {
          var t, e, i;
          super.update(),
            (this._cachedState = null),
            (this.renderedState.id = this.box.id);
          const n = this.box.bounds;
          (this.el.style.left = o.toCSSLength(n.x)),
            (this.el.style.top = o.toCSSLength(n.y)),
            (this.el.style.width = o.toCSSLength(n.width)),
            (this.el.style.height = o.toCSSLength(n.height)),
            (this.el.style.transformOrigin =
              null !==
                (e =
                  null !== (t = this.state.transformOrigin) && void 0 !== t
                    ? t
                    : this.box.transformOrigin) && void 0 !== e
                ? e
                : "center center"),
            (this.el.style.transition =
              null !== (i = this.state.transition) && void 0 !== i ? i : ""),
            this.el.setAttribute("class", c(this.box)),
            this.updateStyle(this.state, "opacity", (t) =>
              r.ViewAnimator.perform(this.el, { opacity: null != t ? t : 1 }),
            ),
            this.updateStyle(this.state, "transform", (t) =>
              r.ViewAnimator.perform(this.el, {
                transform: null != t ? t : "none",
              }),
            ),
            (this.el.style.cursor =
              this.box.requestForHit && this._isHitAllowed ? "pointer" : "");
        }
        get _isHitAllowed() {
          var t, e;
          return !(
            !this.connected ||
            "presenterPerspective" !==
              (null ===
                (t = a.findPresentationContext(this, "presentationState")) ||
              void 0 === t
                ? void 0
                : t.presentationState.mode) ||
            !(null ===
              (e = a.findPresentationContext(this, "presentationState")) ||
            void 0 === e
              ? void 0
              : e.presentationState.showCursor)
          );
        }
        updateStyle(t, e, i) {
          var n;
          const o =
            null !== (n = null == t ? void 0 : t[e]) && void 0 !== n
              ? n
              : this.box[e];
          o !== this.renderedState[e] && (i(o), (this.renderedState[e] = o));
        }
        connect() {
          super.connect(),
            this.el.addEventListener("click", this._eventListener),
            this.el.addEventListener("mouseenter", this._eventListener),
            this.el.addEventListener("mouseleave", this._eventListener),
            this.el.addEventListener("mousedown", this._eventListener),
            this.el.addEventListener("mouseup", this._eventListener);
        }
        disconnect() {
          this.el.removeEventListener("click", this._eventListener),
            this.el.removeEventListener("mouseenter", this._eventListener),
            this.el.removeEventListener("mouseleave", this._eventListener),
            this.el.removeEventListener("mousedown", this._eventListener),
            this.el.removeEventListener("mouseup", this._eventListener),
            super.disconnect();
        }
        _onClick(t) {
          if (!this.box.requestForHit) return;
          const e = a.findPresentationContext(this, "boxViewDidGetHit");
          e && (t.stopPropagation(), e.boxViewDidGetHit(this));
        }
        _onMouseEnter(t) {
          var e;
          (this.box.requestForHit || "image" === this.box.contentType) &&
            (null ===
              (e = a.findPresentationContext(
                this,
                "boxViewDidGetPointerEntered",
              )) ||
              void 0 === e ||
              e.boxViewDidGetPointerEntered(this));
        }
        _onMouseLeave(t) {
          var e;
          (this.box.requestForHit || "image" === this.box.contentType) &&
            (null ===
              (e = a.findPresentationContext(
                this,
                "boxViewDidGetPointerLeft",
              )) ||
              void 0 === e ||
              e.boxViewDidGetPointerLeft(this));
        }
        _onMouseDown(t) {
          var e;
          this.box.requestForHit &&
            (null ===
              (e = a.findPresentationContext(
                this,
                "boxViewDidGetPointerCaptured",
              )) ||
              void 0 === e ||
              e.boxViewDidGetPointerCaptured(this));
        }
        _onMouseUp(t) {
          var e;
          this.box.requestForHit &&
            (null ===
              (e = a.findPresentationContext(
                this,
                "boxViewDidGetPointerReleased",
              )) ||
              void 0 === e ||
              e.boxViewDidGetPointerReleased(this));
        }
      }
      function c(t) {
        switch (t.contentType) {
          case "text":
            return "pancake-view-text";
          case "group":
            return "pancake-view-group";
          case "image":
            return "pancake-view-image";
          case "shape":
            return "pancake-view-shape";
          case "svg-template":
            return "pancake-view-svg-template";
          case "background-shape":
            return "pancake-view-background-shape";
          case "background-color-brick":
            return "pancake-view-background-color-brick";
        }
      }
      (e.BoxView = s),
        (e.forEachBoxViewIn = function t(e, i) {
          let n = !1;
          for (const o of e) {
            if (
              (i(o, () => {
                n = !0;
              }),
              n)
            )
              return;
            if (
              "group" === o.box.contentType &&
              "subviews" in o &&
              (t(o.subviews, (t, e) => {
                i(t, () => {
                  (n = !0), e();
                });
              }),
              n)
            )
              return;
          }
        }),
        (e.htmlClassesForBox = c);
    },
    50421: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.EndingScreenView = void 0);
      const o = i(75327),
        l = i(6776),
        r = i(98684),
        a = i(14850),
        s = i(50733);
      class c extends a.View {
        constructor(t) {
          super(t),
            (this.content = null),
            (this.epilogueSlide = null),
            (this.showMinimizedEpilogueSlide = !0),
            (this._size = t.size);
        }
        get size() {
          return this._size;
        }
        set size(t) {
          this._size = t;
        }
        createViewElement() {
          return document.createElement("div");
        }
        update() {
          var t, e, i;
          super.update(),
            (this.el.style.position = "absolute"),
            (this.el.style.left = "0px"),
            (this.el.style.top = "0px"),
            (this.el.style.width = o.toCSSLength(this._size.width)),
            (this.el.style.height = o.toCSSLength(this._size.height)),
            (this.el.style.transformOrigin = "center center"),
            (this.el.style.opacity = "1"),
            (this.el.style.transform = ""),
            (this.el.style.willChange = "transform, opacity");
          const n = this.content;
          if (
            ((n && n.svgString === this._appliedSVGString) ||
              (this._contentEl && this.el.removeChild(this._contentEl),
              delete this._contentEl,
              delete this._appliedSVGString),
            n)
          ) {
            const e =
              null !== (t = this._contentEl) && void 0 !== t
                ? t
                : (this._contentEl = this._createContentElement(n));
            e.parentElement !== this.el &&
              this.el.insertBefore(e, this.el.firstChild),
              this._updateContentElement(e, n),
              (this._appliedSVGString = n.svgString);
          }
          if (this.epilogueSlide) {
            const t =
              null !== (e = this._slideContainerEl) && void 0 !== e
                ? e
                : (this._slideContainerEl =
                    this._createSlideContainerElement());
            t.parentElement !== this.el && this.el.appendChild(t);
            const i = new r.SlideView();
            (i.slide = this.epilogueSlide),
              i.connect(),
              i.update(),
              this._slideContainerEl.lastElementChild
                ? this._slideContainerEl.replaceChild(
                    i.el,
                    this._slideContainerEl.lastElementChild,
                  )
                : this._slideContainerEl.appendChild(i.el),
              (i.el.style.transformOrigin = "0% 0%");
          }
          this.el.style.backgroundColor =
            null !== (i = this.backgroundColor) && void 0 !== i ? i : "none";
        }
        _createSlideContainerElement() {
          const t = document.createElement("div");
          return (t.style.transformOrigin = "0% 0%"), t;
        }
        _createContentElement(t) {
          return new DOMParser().parseFromString(t.svgString, "image/svg+xml")
            .documentElement;
        }
        _updateContentElement(t, e) {
          const i = this._size,
            n = Math.min(i.width / e.width, i.height / e.height),
            l = Math.floor(e.width * n),
            r = Math.floor(e.height * n),
            a = (i.width - l) / 2,
            s = (i.height - r) / 2;
          (t.style.position = "absolute"),
            (t.style.left = o.toCSSLength(a)),
            (t.style.top = o.toCSSLength(s)),
            (t.style.width = o.toCSSLength(l)),
            (t.style.height = o.toCSSLength(r));
        }
        setOpacity(t) {
          s.ViewAnimator.perform(this.el, { opacity: t });
        }
        setScale(t) {
          s.ViewAnimator.perform(this.el, {
            transform: [{ scale: { x: t, y: t } }],
          });
        }
        minimizeEpilogueSlide() {
          var t;
          if (this._slideContainerEl) {
            const { width: e, height: i } = this._size;
            (this._slideContainerEl.style.width = o.toCSSLength(e)),
              (this._slideContainerEl.style.height = o.toCSSLength(i)),
              (this._slideContainerEl.style.borderColor = "#FFFFFF25"),
              (this._slideContainerEl.style.borderStyle = "solid"),
              (this._slideContainerEl.style.borderWidth = "1px"),
              (this._slideContainerEl.style.borderRadius = "14px"),
              (this._slideContainerEl.style.boxShadow =
                "0px 0px 1px 0px #00000026, 0px 0px 1.5px 0px #00000015, 0px 0px 30px 0px #00000012"),
              (this._slideContainerEl.style.overflow = "hidden"),
              (this._slideContainerEl.style.transform = "");
            const { scale: n, translate: l } =
              this.computeMinimizedEpilogueSlideTransform();
            s.ViewAnimator.perform(this._slideContainerEl, {
              width: e * n,
              height: i * n,
              transform: [{ translate: l }],
            }),
              s.ViewAnimator.perform(
                null === (t = this._slideContainerEl) || void 0 === t
                  ? void 0
                  : t.children[0],
                { transform: [{ scale: n }] },
              );
          }
        }
        present(t) {
          return n(this, void 0, void 0, function* () {
            this._slideContainerEl
              ? this.showMinimizedEpilogueSlide &&
                (yield new s.ViewAnimator({
                  duration: t,
                  easing: "easeInOutCubic",
                })
                  .animate(() => {
                    this.minimizeEpilogueSlide();
                  })
                  .play())
              : yield new s.ViewAnimator({
                  duration: t,
                  easing: "easeInOutCubic",
                })
                  .animate(() => {
                    this.setOpacity(0), this.setScale(1.3);
                  })
                  .play();
          });
        }
        dismiss(t) {
          return n(this, void 0, void 0, function* () {
            yield new s.ViewAnimator({ duration: t, easing: "linear" })
              .animate(() => {
                this.setOpacity(0);
              })
              .play();
          });
        }
        computeMinimizedEpilogueSlideTransform() {
          const t = this._size === l.slideSize_4_3 ? 0.233 : 0.2;
          return {
            scale: t,
            translate: {
              x: this._size.width - this._size.width * t - 30,
              y: 30,
            },
          };
        }
      }
      e.EndingScreenView = c;
    },
    28892: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.GroupView = void 0);
      const n = i(1438),
        o = i(89953),
        l = i(50733),
        r = i(80759),
        a = i(75327);
      class s extends n.BoxView {
        constructor() {
          super(...arguments), (this._subviews = []), (this.lastMaskImage = "");
        }
        createViewElement() {
          const t = document.createElement("div");
          return (
            (t.style.display = "block"),
            (t.style.position = "absolute"),
            (t.style.overflow = "visible"),
            t.classList.add("pancake-view-group"),
            t.addEventListener("DOMNodeInsertedIntoDocument", () => {
              this.contentHeight > this.viewportHeight
                ? (this.clippedEl.scrollTop = this.scrollOffset)
                : this.contentWidth > this.viewportWidth &&
                  (this.clippedEl.scrollLeft = this.scrollOffset),
                this.updateMask();
            }),
            t
          );
        }
        get clippedEl() {
          return (
            this._clippedEl ||
              ((this._clippedEl = document.createElement("div")),
              this._clippedEl.classList.add("pancake-view-group-clip"),
              (this._clippedEl.style.position = "relative"),
              (this._clippedEl.style.width = "100%"),
              (this._clippedEl.style.height = "0"),
              (this._clippedEl.style.overflow = "scroll"),
              this.el.appendChild(this._clippedEl),
              this._clippedEl.addEventListener("wheel", (t) =>
                t.stopPropagation(),
              ),
              this._clippedEl.addEventListener("scroll", (t) => {
                t.stopPropagation(), this.onScrollUpdate();
              })),
            this._clippedEl
          );
        }
        get contentEl() {
          return (
            this._contentEl ||
              ((this._contentEl = document.createElement("div")),
              (this._contentEl.style.position = "relative"),
              (this._contentEl.style.width = "100%"),
              (this._contentEl.style.height = "0"),
              (this._contentEl.style.overflow = "visible"),
              this.clippedEl.appendChild(this._contentEl)),
            this._contentEl
          );
        }
        connect() {
          super.connect();
          for (const t of this._subviews) t.connect();
        }
        disconnect() {
          for (const t of this._subviews) t.disconnect();
          super.disconnect();
        }
        get subviews() {
          return [...this._subviews];
        }
        update() {
          var t, e, i, n, s;
          const c = this.renderedState.id;
          super.update();
          const d = [...this._subviews],
            u = this.box.children;
          for (let t = 0; t < u.length; t++) {
            const e = u[t];
            let i = d[t];
            if (i)
              if (i.box.id === e.id) (i.box = e), i.update();
              else {
                const n = d.slice(t + 1).find((t) => t.box.id === e.id);
                if (n)
                  this.contentEl.insertBefore(n.el, i.el),
                    (n.box = e),
                    n.update(),
                    d.splice(t, 0, n);
                else {
                  const n = o.createBoxView(this, e);
                  this.contentEl.insertBefore(n.el, i.el),
                    n.update(),
                    d.splice(t, 0, n),
                    this.connected && n.connect();
                }
              }
            else
              (i = o.createBoxView(this, e)),
                this.contentEl.appendChild(i.el),
                i.update(),
                d.push(i);
          }
          for (; d.length > u.length; ) {
            const t = d.pop();
            this.connected && t.disconnect(), this.contentEl.removeChild(t.el);
          }
          if (
            ((this._subviews = d),
            (this.clippedEl.style.height = this.el.style.height),
            "scroll" === this.box.overflow)
          )
            if (
              this.box.contentWidth > this.box.bounds.width ||
              this.box.contentHeight > this.box.bounds.height
            ) {
              const e =
                this.connected &&
                "presenterPerspective" ===
                  (null ===
                    (t = r.findPresentationContext(
                      this,
                      "presentationState",
                    )) || void 0 === t
                    ? void 0
                    : t.presentationState.mode);
              this.clippedEl.style.overflow = e ? "scroll" : "hidden";
            } else this.clippedEl.style.overflow = "visible";
          else
            this.clippedEl.style.overflow =
              null !== (e = this.box.overflow) && void 0 !== e ? e : "hidden";
          (this.contentEl.style.width = a.toCSSLength(this.contentWidth)),
            (this.contentEl.style.height = a.toCSSLength(this.contentHeight)),
            (this.el.style.pointerEvents =
              !1 === this.box.mouseInteraction ? "none" : "");
          const p =
            null !==
              (n =
                null !== (i = this.state.scrollOffset) && void 0 !== i
                  ? i
                  : this.box.scrollOffset) && void 0 !== n
              ? n
              : 0;
          (this.box.id === c &&
            p ===
              (null !== (s = this.renderedState.scrollOffset) && void 0 !== s
                ? s
                : 0)) ||
            l.ViewAnimator.perform(this, { scrollOffset: p });
        }
        onScrollUpdate() {
          var t, e;
          const i =
              null !== (t = this.renderedState.scrollOffset) && void 0 !== t
                ? t
                : 0,
            n = Math.round(
              this.contentHeight > this.viewportHeight
                ? this.clippedEl.scrollTop
                : this.clippedEl.scrollLeft,
            );
          (this.renderedState.scrollOffset = n),
            this.updateMask(),
            this.connected &&
              Math.abs(n - i) > 1 &&
              (null ===
                (e = r.findPresentationContext(
                  this,
                  "groupViewDidGetScrolled",
                )) ||
                void 0 === e ||
                e.groupViewDidGetScrolled(this));
        }
        set scrollOffset(t) {
          var e;
          (null !==
            (e = (t = Math.round(t)) === this.renderedState.scrollOffset) &&
            void 0 !== e &&
            e) ||
            ((this.renderedState.scrollOffset = t),
            this.contentHeight > this.viewportHeight
              ? (this.clippedEl.scrollTop = t)
              : this.contentWidth > this.viewportWidth &&
                (this.clippedEl.scrollLeft = t),
            this.updateMask());
        }
        get scrollOffset() {
          var t;
          return null !== (t = this.renderedState.scrollOffset) && void 0 !== t
            ? t
            : 0;
        }
        get contentWidth() {
          return this.box.contentWidth;
        }
        get contentHeight() {
          return this.box.contentHeight;
        }
        get viewportHeight() {
          return this.box.bounds.height;
        }
        get viewportWidth() {
          return this.box.bounds.width;
        }
        updateMask() {
          const t = this._computeMaskImage(!0);
          t != this.lastMaskImage &&
            ((this.lastMaskImage = t),
            this.contentEl.style.setProperty("mask-image", t),
            this.contentEl.style.setProperty("-webkit-mask-image", t));
        }
        computeMaskImage() {
          return this._computeMaskImage(!1);
        }
        _computeMaskImage(t) {
          var e, i, n, o, l, r, a;
          let s = "";
          if (this.contentHeight > this.viewportHeight) {
            const r = this.contentHeight,
              a = this.viewportHeight,
              c =
                null !==
                  (i =
                    null === (e = this.box) || void 0 === e
                      ? void 0
                      : e.scrollFaderSize) && void 0 !== i
                  ? i
                  : 0,
              d = this.scrollOffset,
              u = r - a - d,
              p = Math.max(c - d, 0) / c,
              h = Math.max(c - u, 0) / c,
              g = p < 1 ? 0.6 * p : 1,
              f = h < 1 ? 0.6 * h : 1,
              m = t ? d : 0,
              b =
                null !==
                  (o =
                    null === (n = this.box) || void 0 === n
                      ? void 0
                      : n.bottomScrollFaderOffset) && void 0 !== o
                  ? o
                  : 0,
              v = m,
              x = m + c,
              y = m + a - c,
              S = m + a - b;
            if (
              "twoStops" ===
              (null === (l = this.box) || void 0 === l
                ? void 0
                : l.scrollFaderType)
            ) {
              s = `linear-gradient(to bottom, rgba(0,0,0,${g}) ${v + 0.0729 * c}px, rgba(0,0,0,${g + 0.8 * (1 - g)}) ${v + 0.8095 * c}px, black ${x}px, black ${y}px, rgba(0,0,0,${f + 0.8 * (1 - f)}) ${S - 0.8095 * (c - b)}px, rgba(0,0,0,${f}) ${S - 0.0729 * (c - b)}px)`;
            } else
              s = `linear-gradient(to bottom, rgba(0,0,0,${g}) ${v}px, black ${x}px, black ${y}px, rgba(0,0,0,${f}) ${S}px)`;
          } else if (this.contentWidth > this.viewportWidth) {
            const e = this.contentWidth,
              i = this.viewportWidth,
              n =
                null !==
                  (a =
                    null === (r = this.box) || void 0 === r
                      ? void 0
                      : r.scrollFaderSize) && void 0 !== a
                  ? a
                  : 0,
              o = this.scrollOffset,
              l = e - i - o,
              c = Math.max(n - o, 0) / n,
              d = Math.max(n - l, 0) / n,
              u = t ? o : 0;
            s = `linear-gradient(to right, rgba(0,0,0,${c < 1 ? 0.6 * c : 1}) ${u}px, black ${u + n}px, black ${u + i - n}px, rgba(0,0,0,${d < 1 ? 0.6 * d : 1}) ${u + i}px)`;
          }
          return s;
        }
      }
      e.GroupView = s;
    },
    21695: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.ImageView = void 0);
      const n = i(75327),
        o = i(1438),
        l = i(80759);
      class r extends o.BoxView {
        constructor() {
          super(...arguments),
            (this._onZoomButtonClicked = (t) => {
              var e;
              t.stopPropagation(),
                null ===
                  (e = l.findPresentationContext(this, "boxViewDidGetHit")) ||
                  void 0 === e ||
                  e.boxViewDidGetHit(this, "zoomImage");
            }),
            (this._onPlayButtonClicked = (t) => {
              var e;
              t.stopPropagation(),
                null ===
                  (e = l.findPresentationContext(this, "boxViewDidGetHit")) ||
                  void 0 === e ||
                  e.boxViewDidGetHit(this, "playVideo");
            });
        }
        createViewElement() {
          const t = document.createElement("div");
          return (
            (t.style.display = "block"),
            (t.style.position = "absolute"),
            (t.style.userSelect = "none"),
            t
          );
        }
        get imageEl() {
          var t;
          return null !== (t = this._imageEl) && void 0 !== t
            ? t
            : (this._imageEl = this.createImageViewElement());
        }
        get zoomButtonEl() {
          var t;
          return null !== (t = this._zoomButtonEl) && void 0 !== t
            ? t
            : (this._zoomButtonEl = this.createZoomButton());
        }
        get playButtonEl() {
          var t;
          return null !== (t = this._playButtonEl) && void 0 !== t
            ? t
            : (this._playButtonEl = this.createPlayButton());
        }
        createImageViewElement() {
          const t = document.createElement("img");
          return this.el.appendChild(t), t;
        }
        connect() {
          var t, e;
          super.connect(),
            null === (t = this.zoomButtonEl) ||
              void 0 === t ||
              t.addEventListener("click", this._onZoomButtonClicked),
            null === (e = this.playButtonEl) ||
              void 0 === e ||
              e.addEventListener("click", this._onPlayButtonClicked);
        }
        disconnect() {
          var t, e;
          null === (t = this.zoomButtonEl) ||
            void 0 === t ||
            t.removeEventListener("click", this._onZoomButtonClicked),
            null === (e = this.playButtonEl) ||
              void 0 === e ||
              e.removeEventListener("click", this._onPlayButtonClicked),
            super.disconnect();
        }
        update() {
          var t, e, i, o, l;
          super.update();
          const r = n.toCSSLength(this.box.bounds.width),
            a = n.toCSSLength(this.box.bounds.height);
          (this.imageEl.style.width = r),
            (this.imageEl.style.height = a),
            this.box.videoSource && this.updatePlayButton(),
            this.box.zoomable &&
              !this.box.videoSource &&
              this.updateZoomButton();
          const s =
            null !==
              (e =
                null !== (t = this.state.outlineWidth) && void 0 !== t
                  ? t
                  : this.box.outlineWidth) && void 0 !== e
              ? e
              : 0;
          (this.imageEl.style.outlineStyle = s ? "solid" : "none"),
            (this.imageEl.style.outlineWidth = `${s}px`),
            (this.imageEl.style.outlineColor =
              null !==
                (o =
                  null !== (i = this.state.outlineColor) && void 0 !== i
                    ? i
                    : this.box.outlineColor) && void 0 !== o
                ? o
                : "transparent"),
            (this.imageEl.style.outlineOffset =
              void 0 === this.state.outlineOffset
                ? ""
                : `${this.state.outlineOffset}px`),
            (this.imageEl.style.filter =
              null !== (l = this.box.filter) && void 0 !== l ? l : ""),
            (this.imageEl.src = this.box.imageSource);
        }
        updateZoomButton() {
          this.zoomButtonEl.style.cssText = `\n      position: absolute;\n      display: block;\n      visibility: ${this.state.isZoomButtonVisible && !this.box.roles.includes("pending") ? "visible" : "hidden"};\n      bottom: 20px;\n      right: 20px;\n      border-radius: 50%;\n      box-shadow: 0px 4px 30px 0px rgba(0,0,0,0.15), 0px 0px 1px 0px rgba(0,0,0,0.2);\n      cursor: ${this._isHitAllowed ? "pointer" : ""};\n      -webkit-backdrop-filter: blur(4px);\n      backdrop-filter: blur(4px);\n    `;
        }
        updatePlayButton() {
          this.playButtonEl.style.cssText = `\n      position: absolute;\n      display: block;\n      bottom: 20px;\n      right: 20px;\n      border-radius: 50%;\n      box-shadow: 0px 4px 30px 0px rgba(0,0,0,0.15), 0px 0px 1px 0px rgba(0,0,0,0.2);\n      cursor: ${this._isHitAllowed ? "pointer" : ""};\n      -webkit-backdrop-filter: blur(4px);\n      backdrop-filter: blur(4px);\n    `;
        }
        createZoomButton() {
          const t = document.createElement("img");
          return (
            (t.src = t.src =
              "data:image/svg+xml;base64," +
              btoa(
                '\n    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <g filter="url(#filter0_b_6039_1112)">\n    <circle cx="20" cy="20" r="20" fill="#DFDFDF" fill-opacity="0.8"/>\n    </g>\n    <path opacity="0.8" fill-rule="evenodd" clip-rule="evenodd" d="M22.3343 11C21.5979 11 21.001 11.597 21.001 12.3334C21.001 13.0697 21.5979 13.6667 22.3343 13.6667L24.448 13.6667L20.7241 17.3906C20.2034 17.9114 20.2034 18.7556 20.7241 19.2763C21.2448 19.797 22.089 19.797 22.6097 19.2763L26.3344 15.5516V17.6668C26.3344 18.4032 26.9314 19.0001 27.6678 19.0001C28.4042 19.0001 29.0011 18.4032 29.0011 17.6668V12.3334C29.0011 11.597 28.4041 11 27.6678 11H22.3343ZM19.2763 20.724C18.7556 20.2033 17.9114 20.2033 17.3906 20.724L13.6667 24.448V22.3338C13.6667 21.5974 13.0697 21.0005 12.3334 21.0005C11.597 21.0005 11 21.5974 11 22.3338V27.667C11 28.4032 11.5968 29.0006 12.3334 29.0006H17.6668C18.4032 29.0006 19.0001 28.4036 19.0001 27.6672C19.0001 26.9309 18.4032 26.3339 17.6668 26.3339H15.5521L19.2763 22.6097C19.797 22.089 19.797 21.2447 19.2763 20.724Z" fill="#27292A"/>\n    <defs>\n    <filter id="filter0_b_6039_1112" x="-4" y="-4" width="48" height="48" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n    <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n    <feGaussianBlur in="BackgroundImageFix" stdDeviation="2"/>\n    <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_6039_1112"/>\n    <feBlend mode="normal" in="SourceGraphic" in2="effect1_backgroundBlur_6039_1112" result="shape"/>\n    </filter>\n    </defs>\n    </svg>\n    ',
              )),
            (t.style.display = "none"),
            this.el.appendChild(t),
            t
          );
        }
        createPlayButton() {
          const t = document.createElement("img");
          return (
            (t.src = t.src =
              "data:image/svg+xml;base64," +
              btoa(
                '\n    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M20 40C30.9412 40 40 30.9215 40 20C40 9.0588 30.9215 0 19.9804 0C9.0588 0 0 9.0588 0 20C0 30.9215 9.0784 40 20 40Z" fill="#DFDFDF" fill-opacity="0.8"/>\n    <path d="M16.2755 27.9009C15.3343 28.4696 14.2559 28.0186 14.2559 27.0382V12.9794C14.2559 12.0186 15.4127 11.6068 16.2755 12.1166L27.7853 18.9401C28.6087 19.4303 28.6284 20.6069 27.7853 21.1167L16.2755 27.9009Z" fill="#27292A"/>\n    </svg>\n    ',
              )),
            (t.style.display = "none"),
            this.el.appendChild(t),
            t
          );
        }
      }
      e.ImageView = r;
    },
    10430: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__createBinding) ||
          (Object.create
            ? function (t, e, i, n) {
                void 0 === n && (n = i),
                  Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                      return e[i];
                    },
                  });
              }
            : function (t, e, i, n) {
                void 0 === n && (n = i), (t[n] = e[i]);
              }),
        o =
          (this && this.__exportStar) ||
          function (t, e) {
            for (var i in t)
              "default" === i ||
                Object.prototype.hasOwnProperty.call(e, i) ||
                n(e, t, i);
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        o(i(14850), e),
        o(i(50733), e),
        o(i(1438), e),
        o(i(62480), e),
        o(i(54365), e),
        o(i(28892), e),
        o(i(98684), e),
        o(i(77376), e),
        o(i(89953), e);
    },
    66918: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.ModalView = void 0);
      const o = i(6776),
        l = i(14850),
        r = i(50733),
        a = i(2001);
      class s extends l.View {
        constructor(t) {
          var e;
          super(t),
            (this._isCloseButtonHovered = !1),
            (this.eventCallbacks = new Map()),
            (this._onContainerClicked = (t) => {
              t.stopPropagation(), this.emit("containerClicked");
            }),
            (this._onCloseButtonClicked = (t) => {
              t.stopPropagation(), this.emit("closeButtonClicked");
            }),
            (this._onCloseButtonEntered = () => {
              (this._isCloseButtonHovered = !0), this._updateCloseButton();
            }),
            (this._onCloseButtonLeaved = () => {
              (this._isCloseButtonHovered = !1), this._updateCloseButton();
            }),
            (this.contentEl = t.contentEl),
            (this._contentTransformBeforePresent =
              t.contentTransformBeforePresent),
            (this._contentTransformAfterPresent =
              t.contentTransformAfterPresent),
            (this._containerSize = t.containerSize),
            (this._slideBackgroundColor =
              null !== (e = t.slideBackgroundColor) && void 0 !== e
                ? e
                : "#000000"),
            (this._slideSizeId = o.slideSizeIdOf(this._containerSize)),
            this.el.appendChild(this.contentEl),
            t.showCloseButton &&
              ((this.closeButtonEl = document.createElement("img")),
              this.el.appendChild(this.closeButtonEl));
        }
        createViewElement() {
          return document.createElement("div");
        }
        get _isSlideBackgroundColorDark() {
          return a.luminance(this._slideBackgroundColor) < 127.5;
        }
        get _containerBackgroundColor() {
          return this._isSlideBackgroundColorDark ? "#000000" : "#FFFFFF";
        }
        update() {
          super.update(),
            (this.el.style.cssText =
              "\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      top: 0;\n      left: 0;\n      -webkit-backdrop-filter: blur(30px);\n      backdrop-filter: blur(30px);\n    "),
            (this.contentEl.draggable = !1),
            this._updateCloseButton();
        }
        on(t, e) {
          var i;
          const n =
            null !== (i = this.eventCallbacks.get(t)) && void 0 !== i ? i : [];
          this.eventCallbacks.set(t, [...n, e]);
        }
        off(t, e) {
          var i;
          let n =
            null !== (i = this.eventCallbacks.get(t)) && void 0 !== i ? i : [];
          (n = n.filter((t) => t !== e)), this.eventCallbacks.set(t, n);
        }
        emit(t) {
          const e = this.eventCallbacks.get(t);
          if (e) for (const t of e) t();
        }
        connect() {
          var t, e, i;
          super.connect(),
            this.el.addEventListener("click", this._onContainerClicked),
            null === (t = this.closeButtonEl) ||
              void 0 === t ||
              t.addEventListener("click", this._onCloseButtonClicked),
            null === (e = this.closeButtonEl) ||
              void 0 === e ||
              e.addEventListener("mouseenter", this._onCloseButtonEntered),
            null === (i = this.closeButtonEl) ||
              void 0 === i ||
              i.addEventListener("mouseleave", this._onCloseButtonLeaved);
        }
        disconnect() {
          var t, e, i;
          this.el.removeEventListener("click", this._onContainerClicked),
            null === (t = this.closeButtonEl) ||
              void 0 === t ||
              t.removeEventListener("click", this._onCloseButtonClicked),
            null === (e = this.closeButtonEl) ||
              void 0 === e ||
              e.removeEventListener("mouseleave", this._onCloseButtonLeaved),
            null === (i = this.closeButtonEl) ||
              void 0 === i ||
              i.removeEventListener("mouseenter", this._onCloseButtonEntered),
            super.disconnect();
        }
        setContainerBackgroundColor(t) {
          r.ViewAnimator.perform(this.el, { backgroundColor: t });
        }
        setContentElTransform(t) {
          const { scale: e, translate: i } = t;
          r.ViewAnimator.perform(this.contentEl, {
            transform: [
              { scale: { x: e, y: e }, translate: { x: i.x, y: i.y } },
            ],
          });
        }
        present(t) {
          return n(this, void 0, void 0, function* () {
            if (
              (this.setContainerBackgroundColor(
                a.hexToRGB(this._containerBackgroundColor, 0.01),
              ),
              this._contentTransformBeforePresent)
            ) {
              const {
                scale: t,
                translateX: e,
                translateY: i,
              } = this._contentTransformBeforePresent;
              this.setContentElTransform({
                scale: t,
                translate: { x: e, y: i },
              });
            }
            yield new r.ViewAnimator({ duration: t, easing: "easeInCubic" })
              .animate(() => {
                if (
                  (this.setContainerBackgroundColor(
                    a.hexToRGB(this._containerBackgroundColor, 0.2),
                  ),
                  this._contentTransformAfterPresent)
                ) {
                  const {
                    scale: t,
                    translateX: e,
                    translateY: i,
                  } = this._contentTransformAfterPresent;
                  this.setContentElTransform({
                    scale: t,
                    translate: { x: e, y: i },
                  });
                }
              })
              .play();
          });
        }
        dismiss(t) {
          var e;
          return n(this, void 0, void 0, function* () {
            (null === (e = this.closeButtonEl) || void 0 === e
              ? void 0
              : e.parentElement) === this.el &&
              this.el.removeChild(this.closeButtonEl),
              t <= 0 ||
                (yield new r.ViewAnimator({
                  duration: t,
                  easing: "easeOutCubic",
                })
                  .animate(() => {
                    if (
                      (this.setContainerBackgroundColor(
                        a.hexToRGB(this._containerBackgroundColor, 0.01),
                      ),
                      this._contentTransformBeforePresent)
                    ) {
                      const {
                        scale: t,
                        translateX: e,
                        translateY: i,
                      } = this._contentTransformBeforePresent;
                      this.setContentElTransform({
                        scale: t,
                        translate: { x: e, y: i },
                      });
                    }
                  })
                  .play());
          });
        }
        _updateCloseButton() {
          if (!this.closeButtonEl) return;
          const t = `${this._isSlideBackgroundColorDark ? "dark" : "light"}${this._isCloseButtonHovered ? "Hovered" : ""}`,
            [e, i] =
              this._slideSizeId && ["3:4", "9:16"].includes(this._slideSizeId)
                ? [50, 50]
                : [30, 30];
          this.closeButtonEl.style.cssText = `\n      position: absolute;\n      width: ${e}px;\n      height: ${i}px;\n      top: 20px;\n      right: 25px;\n      cursor: pointer;\n    `;
          const n = this._getCloseBtnSVGbase64string(t);
          this.closeButtonEl.src = n;
        }
        _getCloseBtnSVGbase64string(t) {
          return (
            "data:image/svg+xml;base64," +
            btoa(
              ((t) => {
                switch (t) {
                  case "light":
                    return '<svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <g opacity="0.6">\n        <rect x="1" y="1" width="33" height="33" rx="16.5" stroke="#27292A" stroke-width="2"/>\n        <path fill-rule="evenodd" clip-rule="evenodd" d="M23.33 10.2865C23.712 9.90449 24.3314 9.90449 24.7135 10.2865C25.0955 10.6686 25.0955 11.288 24.7135 11.67L18.8835 17.5L24.7135 23.33C25.0955 23.712 25.0955 24.3314 24.7135 24.7135C24.3314 25.0955 23.712 25.0955 23.33 24.7135L17.5 18.8835L11.67 24.7135C11.288 25.0955 10.6686 25.0955 10.2865 24.7135C9.90449 24.3314 9.90449 23.712 10.2865 23.33L16.1165 17.5L10.2865 11.67C9.90449 11.288 9.90449 10.6686 10.2865 10.2865C10.6686 9.9045 11.288 9.9045 11.67 10.2865L17.5 16.1165L23.33 10.2865Z" fill="#27292A"/>\n        </g>\n        </svg>\n        ';
                  case "lightHovered":
                    return '<svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect width="35" height="35" rx="17.5" fill="#27292A"/>\n        <path fill-rule="evenodd" clip-rule="evenodd" d="M23.33 10.2865C23.712 9.90449 24.3314 9.90449 24.7135 10.2865C25.0955 10.6686 25.0955 11.288 24.7135 11.67L18.8835 17.5L24.7135 23.33C25.0955 23.712 25.0955 24.3314 24.7135 24.7135C24.3314 25.0955 23.712 25.0955 23.33 24.7135L17.5 18.8835L11.67 24.7135C11.288 25.0955 10.6686 25.0955 10.2865 24.7135C9.90449 24.3314 9.90449 23.712 10.2865 23.33L16.1165 17.5L10.2865 11.67C9.90449 11.288 9.90449 10.6686 10.2865 10.2865C10.6686 9.9045 11.288 9.9045 11.67 10.2865L17.5 16.1165L23.33 10.2865Z" fill="white"/>\n        </svg>\n        ';
                  case "dark":
                    return '<svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <g opacity="0.6">\n        <rect x="1" y="1" width="33" height="33" rx="16.5" stroke="white" stroke-width="2"/>\n        <path fill-rule="evenodd" clip-rule="evenodd" d="M23.33 10.2865C23.712 9.90449 24.3314 9.90449 24.7135 10.2865C25.0955 10.6686 25.0955 11.288 24.7135 11.67L18.8835 17.5L24.7135 23.33C25.0955 23.712 25.0955 24.3314 24.7135 24.7135C24.3314 25.0955 23.712 25.0955 23.33 24.7135L17.5 18.8835L11.67 24.7135C11.288 25.0955 10.6686 25.0955 10.2865 24.7135C9.90449 24.3314 9.90449 23.712 10.2865 23.33L16.1165 17.5L10.2865 11.67C9.90449 11.288 9.90449 10.6686 10.2865 10.2865C10.6686 9.9045 11.288 9.9045 11.67 10.2865L17.5 16.1165L23.33 10.2865Z" fill="white"/>\n        </g>\n        </svg>\n        ';
                  case "darkHovered":
                    return '<svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect width="35" height="35" rx="17.5" fill="white"/>\n        <path fill-rule="evenodd" clip-rule="evenodd" d="M23.33 10.2865C23.712 9.90449 24.3314 9.90449 24.7135 10.2865C25.0955 10.6686 25.0955 11.288 24.7135 11.67L18.8835 17.5L24.7135 23.33C25.0955 23.712 25.0955 24.3314 24.7135 24.7135C24.3314 25.0955 23.712 25.0955 23.33 24.7135L17.5 18.8835L11.67 24.7135C11.288 25.0955 10.6686 25.0955 10.2865 24.7135C9.90449 24.3314 9.90449 23.712 10.2865 23.33L16.1165 17.5L10.2865 11.67C9.90449 11.288 9.90449 10.6686 10.2865 10.2865C10.6686 9.9045 11.288 9.9045 11.67 10.2865L17.5 16.1165L23.33 10.2865Z" fill="#27292A"/>\n        </svg>\n        ';
                }
              })(t),
            )
          );
        }
      }
      e.ModalView = s;
    },
    80759: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.findPresentationContext = void 0),
        (e.findPresentationContext = function t(e, i) {
          return i in e ? e : e.superview ? t(e.superview, i) : null;
        });
    },
    77376: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__awaiter) ||
        function (t, e, i, n) {
          return new (i || (i = Promise))(function (o, l) {
            function r(t) {
              try {
                s(n.next(t));
              } catch (t) {
                l(t);
              }
            }
            function a(t) {
              try {
                s(n.throw(t));
              } catch (t) {
                l(t);
              }
            }
            function s(t) {
              var e;
              t.done
                ? o(t.value)
                : ((e = t.value),
                  e instanceof i
                    ? e
                    : new i(function (t) {
                        t(e);
                      })).then(r, a);
            }
            s((n = n.apply(t, e || [])).next());
          });
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.PresentationView = void 0);
      const o = i(6776),
        l = i(1539),
        r = i(48263),
        a = i(75327),
        s = i(98684),
        c = i(14850),
        d = i(50421),
        u = i(50733),
        p = i(96486),
        h = i(51116),
        g = i(94938),
        f = i(80412),
        m = i(66918);
      class b extends c.View {
        constructor(t = {}) {
          var e;
          super(t),
            (this.allowsActivatingPresenterPerspectiveMode = !1),
            (this._allowMinimizedEpilogueSlide = !0),
            (this._slidePresentationState = {}),
            (this._hitRegionBoxId = null),
            (this._isHandlingScrollEvent = !1),
            (this._millisecondsForTimeoutWaitingScroll = 600),
            (this._isPerformingTransition = !1),
            (this._endingScreenView = null),
            (this._eventListener = (t) => {
              switch (t.type) {
                case "click":
                  return this._onClick(t);
                case "mousemove":
                  return this._onMouseMove(t);
                case "mouseenter":
                  return this._onMouseEnter();
                case "mouseleave":
                  return this._onMouseLeave();
              }
            }),
            (this._pointerMovementStartPoint = null),
            (this._thresholdDistanceForPointerMovementActivatingPresenterPerspectiveMode = 100),
            (this._timeoutToDeactivatePresenterPerspectiveMode = null),
            (this._millisecondsForTimeoutToDeactivatePresenterPerspectiveMode = 5e3),
            (this._modalView = null),
            (this._enqueueAsyncJob = g.makeAsyncQueue()),
            (this._slideView = this._createSlideView(
              null !== (e = t.initialSlide) && void 0 !== e ? e : null,
            ));
        }
        get slideView() {
          return this._slideView;
        }
        get mode() {
          var t;
          return null !== (t = this._slidePresentationState.mode) &&
            void 0 !== t
            ? t
            : "presentation";
        }
        set mode(t) {
          this._enqueueAsyncJob(() =>
            this._changePresentationState([
              this._setMode(t),
              this._updatePresenterPerspectiveState(),
            ]),
          );
        }
        get allowMinimizedEpilogueSlide() {
          return this._allowMinimizedEpilogueSlide;
        }
        set allowMinimizedEpilogueSlide(t) {
          this._allowMinimizedEpilogueSlide = t;
        }
        _setMode(t) {
          return (e) => o.mergeSlideState(e, { mode: t });
        }
        _updatePresenterPerspectiveState() {
          const t = this._slideView.slide;
          return (e) =>
            o.mergeSlideState(
              e,
              "presenterPerspective" === e.mode
                ? null == t
                  ? void 0
                  : t.presenterPerspectiveStates
                : null == t
                  ? void 0
                  : t.revertedPresenterPerspectiveStates,
            );
        }
        get presentationState() {
          return this._slidePresentationState;
        }
        _changePresentationState(t, e = 0) {
          var i, o, l;
          return n(this, void 0, void 0, function* () {
            const n = (
              null === (i = this.delegate) || void 0 === i
                ? void 0
                : i.disablesAnimations
            )
              ? 0
              : (null !==
                  (l =
                    null === (o = this.delegate) || void 0 === o
                      ? void 0
                      : o.baseDuration) && void 0 !== l
                  ? l
                  : 0) * e;
            this.emit("stateWillChange"),
              (this._slidePresentationState = t.reduce(
                (t, e) => e(t),
                this._slidePresentationState,
              )),
              n > 0
                ? yield new u.ViewAnimator({
                    duration: n,
                    easing: "easeInOutCubic",
                  })
                    .animate(() => {
                      this.update();
                    })
                    .play()
                : this.update(),
              this.emit("stateDidChange");
          });
        }
        createViewElement() {
          const t = document.createElement("div");
          return (
            (t.style.userSelect = "none"),
            (t.style.backgroundColor = "#000"),
            this._addStylesViaCSS(t),
            t
          );
        }
        _addStylesViaCSS(t) {
          const e = `pancake-presentation-view-${new Date().getTime()}-${Math.floor(1e3 * Math.random())}`;
          t.classList.add(e);
          const i = this._makeStyleSheet(e),
            n = document.createElement("style");
          n.setAttribute("type", "text/css"),
            (n.textContent = i),
            t.appendChild(n);
        }
        _makeStyleSheet(t) {
          return `.${t} ::-webkit-scrollbar { display: none; }`;
        }
        get contentEl() {
          var t;
          return null !== (t = this._contentEl) && void 0 !== t
            ? t
            : (this._contentEl = this.createContentElement());
        }
        createContentElement() {
          const t = document.createElement("div");
          return (
            (t.style.position = "absolute"),
            (t.style.transformOrigin = "0 0"),
            (t.style.backgroundColor = "#000"),
            (t.style.overflow = "hidden"),
            this.el.appendChild(t),
            t
          );
        }
        update() {
          super.update(),
            this.slideView.slide &&
              this.layout(
                this.slideView.slide.width,
                this.slideView.slide.height,
              ),
            (this._slidePresentationState.showCursor =
              this.allowsActivatingPresenterPerspectiveMode),
            (this._slidePresentationState.hitRegions =
              this._computeHitRegionsState()),
            this.slideView.update(),
            this.connected &&
              (this.el.style.cursor =
                "presenterPerspective" === this.mode &&
                this._slidePresentationState.showCursor
                  ? ""
                  : "none");
        }
        layout(t, e) {
          const i = this.el.clientWidth,
            n = this.el.clientHeight,
            o = Math.round(1e4 * Math.min(i / t, n / e)) / 1e4,
            l = { x: (i - t * o) / 2, y: (n - e * o) / 2 };
          (this.contentEl.style.left = a.toCSSLength(l.x)),
            (this.contentEl.style.top = a.toCSSLength(l.y)),
            (this.contentEl.style.width = a.toCSSLength(t)),
            (this.contentEl.style.height = a.toCSSLength(e)),
            (this.contentEl.style.transform = `scale(${o}, ${o})`);
        }
        performTransition(t) {
          var e, i;
          return n(this, void 0, void 0, function* () {
            (this._isPerformingTransition = !0),
              this.closeModal(0),
              this._discardCountdownToDeactivatePresenterPerspectiveMode(),
              yield this._changePresentationState([() => ({})]),
              (this._hitRegionBoxId = null);
            const n = new r.AnimationExecutor(
                null !== (e = t.sourceSlideAnimations) && void 0 !== e ? e : [],
              ),
              o = new r.AnimationExecutor(
                null !== (i = t.targetSlideAnimations) && void 0 !== i ? i : [],
              ),
              a = this.slideView;
            yield n.performAnimationsOnStage(
              t.baseDuration,
              "preTransition",
              a,
            );
            const s = this._createTargetSlideViewForTransition(t, a),
              c = this.computeTransitionEffect(t, a, s);
            yield Promise.all([
              l.performTransitionEffect(t.duration, c, a, s),
              n.performAnimationsOnStage(t.duration, "transition", a),
              o.performAnimationsOnStage(t.duration, "transition", s),
            ]),
              a != s && this._destroySlideView(a),
              yield o.performAnimationsOnStage(
                t.baseDuration,
                "postTransition",
                s,
              ),
              (this._slideView = s),
              (this._slideView.slide = t.targetSlide),
              this._slideView.update(),
              "presenterPerspective" === this.mode &&
                this._startCountdownToDeactivatePresenterPerspectiveMode(),
              (this._isPerformingTransition = !1);
          });
        }
        _createTargetSlideViewForTransition(t, e, i = {}) {
          if (this._shouldReuseSlideViewForTransition(t)) return e;
          {
            const e = t.targetSlideEnteringState;
            return this._createSlideView(
              t.targetSlide,
              Object.assign({ initialState: e }, i),
            );
          }
        }
        _shouldReuseSlideViewForTransition(t) {
          if ("animateInSlide" === t.effect) return !0;
          if ("none" === t.effect) {
            const { sourceSlide: e, targetSlide: i } = t;
            return (
              (null == e ? void 0 : e.type) === (null == i ? void 0 : i.type) &&
              (null == e ? void 0 : e.topicId) ===
                (null == i ? void 0 : i.topicId)
            );
          }
          return !1;
        }
        preloadTransition(t) {
          var e;
          return n(this, void 0, void 0, function* () {
            const i = this._createSlideView(this.slideView.slide, {
                initialState: this.slideView.slideState,
                belowAll: !0,
              }),
              n = new r.AnimationExecutor(
                null !== (e = t.sourceSlideAnimations) && void 0 !== e ? e : [],
              );
            yield n.performAnimationsOnStage(0, "preTransition", i);
            const o = this._createTargetSlideViewForTransition(t, i, {
              belowAll: !0,
            });
            this.computeTransitionEffect(t, i, o, { force: !0 }),
              this._destroySlideView(i),
              i != o && this._destroySlideView(o);
          });
        }
        computeTransitionEffect(t, e, i, n = {}) {
          let o = this._computedTransitionEffect;
          return (
            (!n.force && o && p.isEqual(o.transition, t)) ||
              ((o = {
                effect: l.computeTransitionEffect(t, e, i),
                transition: t,
              }),
              (this._computedTransitionEffect = o)),
            o.effect
          );
        }
        _createSlideView(t, { initialState: e, belowAll: i } = {}) {
          const n = new s.SlideView({ superview: this });
          return (
            (n.positionMode = "manual"),
            t && this.layout(t.width, t.height),
            i
              ? this.contentEl.insertBefore(
                  n.el,
                  this.contentEl.firstElementChild,
                )
              : this.contentEl.appendChild(n.el),
            (n.slide = t),
            e && (n.slideState = e),
            n.update(),
            this.connected && n.connect(),
            n
          );
        }
        _destroySlideView(t) {
          this.connected && t.disconnect(),
            t.el.parentElement == this.contentEl &&
              this.contentEl.removeChild(t.el);
        }
        presentEndingScreen(t, e, i, o, l = {}) {
          var r;
          return n(this, void 0, void 0, function* () {
            this._endingScreenView
              ? ((this._endingScreenView.size = e),
                this.layout(e.width, e.height))
              : ((this._endingScreenView = new d.EndingScreenView({
                  superview: this,
                  size: e,
                })),
                this.contentEl.appendChild(this._endingScreenView.el)),
              (this._endingScreenView.content = t),
              (this._endingScreenView.epilogueSlide = null != i ? i : null),
              (this._endingScreenView.showMinimizedEpilogueSlide =
                !this.allowsActivatingPresenterPerspectiveMode ||
                this._allowMinimizedEpilogueSlide),
              (this._endingScreenView.backgroundColor = o),
              this._endingScreenView.update(),
              this._endingScreenView.connect(),
              yield this._endingScreenView.present(
                null !== (r = l.duration) && void 0 !== r ? r : 1e3,
              );
          });
        }
        dismissEndingScreen(t = {}) {
          var e;
          return n(this, void 0, void 0, function* () {
            const i = this._endingScreenView;
            i &&
              (!1 !== t.animated &&
                (yield i.dismiss(
                  null !== (e = t.duration) && void 0 !== e ? e : 1e3,
                )),
              i.disconnect(),
              this.contentEl.removeChild(i.el),
              (this._endingScreenView = null));
          });
        }
        performStateChange(t, e) {
          return n(this, void 0, void 0, function* () {
            this._discardCountdownToDeactivatePresenterPerspectiveMode(),
              (this.slideView.slideState = t),
              e && e.duration && e.duration > 0
                ? yield new u.ViewAnimator({
                    duration: e.duration,
                    easing: e.easing,
                  })
                    .animate(() => {
                      this.update();
                    })
                    .play()
                : this.update(),
              "presenterPerspective" === this.mode &&
                this._startCountdownToDeactivatePresenterPerspectiveMode();
          });
        }
        groupViewDidGetScrolled(t) {
          var e;
          this._handleScrollEvent(),
            null === (e = this.delegate) ||
              void 0 === e ||
              e.presenterDidReceivePointerInteraction(this, {
                kind: "scroll",
                boxId: t.box.id,
                scrollOffset: t.scrollOffset,
              }),
            this._changePresentationState([
              this._setMode("presenterPerspective"),
              this._updatePresenterPerspectiveState(),
            ]);
        }
        boxViewDidGetHit(t, e) {
          var i, n, o;
          const l = t.box.id;
          "zoomImage" === e
            ? null === (i = this.delegate) ||
              void 0 === i ||
              i.presenterDidReceivePointerInteraction(this, {
                kind: "hit",
                boxId: l,
                modal: { toggle: "show", contentType: "image" },
              })
            : "playVideo" === e
              ? null === (n = this.delegate) ||
                void 0 === n ||
                n.presenterDidReceivePointerInteraction(this, {
                  kind: "hit",
                  boxId: l,
                  isPlayVideo: !0,
                })
              : null === (o = this.delegate) ||
                void 0 === o ||
                o.presenterDidReceivePointerInteraction(this, {
                  kind: "hit",
                  boxId: l,
                });
        }
        boxViewDidGetPointerEntered(t) {
          "presenterPerspective" === this.mode &&
            ("hovered" === this._hitRegionTrackingMode &&
              this._handleBoxViewPointerEvent({
                kind: "enter",
                boxId: t.box.id,
              }),
            (this._hitRegionBoxId = t.box.id));
        }
        boxViewDidGetPointerLeft(t) {
          "presenterPerspective" === this.mode &&
            ("hovered" === this._hitRegionTrackingMode &&
              this._handleBoxViewPointerEvent({
                kind: "leave",
                boxId: t.box.id,
              }),
            (this._hitRegionBoxId = null));
        }
        boxViewDidGetPointerCaptured(t) {
          "presenterPerspective" === this.mode &&
            ("all" === this._hitRegionTrackingMode
              ? this.slideView.enterHitRegionActiveEffect(t)
              : "hovered" === this._hitRegionTrackingMode &&
                this._handleBoxViewPointerEvent({
                  kind: "captured",
                  boxId: t.box.id,
                }));
        }
        boxViewDidGetPointerReleased(t) {
          var e;
          if ("all" === this._hitRegionTrackingMode)
            this.slideView.cancelHitRegionActiveEffect(t);
          else {
            const i = t.box.id;
            null === (e = this.delegate) ||
              void 0 === e ||
              e.presenterDidReceivePointerInteraction(this, {
                kind: "released",
                boxId: i,
              });
          }
        }
        _handleBoxViewPointerEvent(t) {
          var e, i, n, o;
          this._handleImageViewPointerEvent(t.boxId, t.kind),
            (
              null ===
                (n =
                  null ===
                    (i =
                      null === (e = this._slideView.slide) || void 0 === e
                        ? void 0
                        : e.presenterPerspectiveStates) || void 0 === i
                    ? void 0
                    : i.boxes) || void 0 === n
                ? void 0
                : n.find((e) => e.id === t.boxId)
            )
              ? this._changePresentationState([
                  this._updateHitTargetState(t.boxId, t.kind),
                ])
              : null === (o = this.delegate) ||
                void 0 === o ||
                o.presenterDidReceivePointerInteraction(this, t);
        }
        connect() {
          super.connect(),
            this.el.addEventListener("click", this._eventListener),
            this.el.addEventListener("mousemove", this._eventListener),
            this.el.addEventListener("mouseenter", this._eventListener),
            this.el.addEventListener("mouseleave", this._eventListener),
            this.update();
        }
        disconnect() {
          this.el.removeEventListener("mouseleave", this._eventListener),
            this.el.removeEventListener("mouseenter", this._eventListener),
            this.el.removeEventListener("mousemove", this._eventListener),
            this.el.removeEventListener("click", this._eventListener),
            super.disconnect(),
            this.update();
        }
        _handleScrollEvent() {
          clearTimeout(Number(this._scrollingHandlerTimer)),
            this._isHandlingScrollEvent ||
              ((this._isHandlingScrollEvent = !0), this.update()),
            (this._scrollingHandlerTimer = setTimeout(() => {
              (this._isHandlingScrollEvent = !1), this.update();
            }, this._millisecondsForTimeoutWaitingScroll));
        }
        _onClick(t) {
          const e = this.delegate;
          e &&
            (t.stopPropagation(),
            e.presenterDidReceivePointerInteraction(this, { kind: "hit" }),
            this._startCountdownToDeactivatePresenterPerspectiveMode());
        }
        _onMouseMove(t) {
          if (this.allowsActivatingPresenterPerspectiveMode)
            if ("presenterPerspective" === this.mode)
              this._pointerMovementStartPoint = null;
            else {
              const e = this._computePointerLocation(t);
              this._pointerMovementStartPoint
                ? this._isPointBeyondThresholdDistance(
                    e,
                    this._pointerMovementStartPoint,
                    this
                      ._thresholdDistanceForPointerMovementActivatingPresenterPerspectiveMode,
                  ) &&
                  (this._isPerformingTransition ||
                    ((this._hitRegionTrackingMode = "hovered"),
                    this._changePresentationState([
                      this._setMode("presenterPerspective"),
                      this._updatePresenterPerspectiveState(),
                    ])))
                : (this._pointerMovementStartPoint = e);
            }
          else this._pointerMovementStartPoint = null;
          this._startCountdownToDeactivatePresenterPerspectiveMode();
        }
        onTwoFingerTap() {
          this.allowsActivatingPresenterPerspectiveMode &&
            (this._isPerformingTransition ||
              ((this._hitRegionTrackingMode = "all"),
              this._changePresentationState([
                this._setMode("presenterPerspective"),
                this._updatePresenterPerspectiveState(),
                this._updatePresenterPerspectiveStateForImages(),
              ])),
            this._startCountdownToDeactivatePresenterPerspectiveMode());
        }
        _computePointerLocation(t) {
          return { x: t.clientX, y: t.clientY };
        }
        _startCountdownToDeactivatePresenterPerspectiveMode() {
          this._discardCountdownToDeactivatePresenterPerspectiveMode(),
            this.allowsActivatingPresenterPerspectiveMode &&
              (this._hitRegionBoxId ||
                (this._timeoutToDeactivatePresenterPerspectiveMode = setTimeout(
                  () => {
                    (this._pointerMovementStartPoint = null),
                      this._changePresentationState([
                        this._setMode("presentation"),
                        this._updatePresenterPerspectiveState(),
                        this._updatePresenterPerspectiveStateForImages(),
                      ]);
                  },
                  this
                    ._millisecondsForTimeoutToDeactivatePresenterPerspectiveMode,
                )));
        }
        _discardCountdownToDeactivatePresenterPerspectiveMode() {
          const t = this._timeoutToDeactivatePresenterPerspectiveMode;
          t &&
            (clearTimeout(t),
            (this._timeoutToDeactivatePresenterPerspectiveMode = null));
        }
        _isPointBeyondThresholdDistance(t, e, i) {
          return Math.abs(t.x - e.x) > i || Math.abs(t.y - e.y) > i;
        }
        _onMouseEnter() {
          this._startCountdownToDeactivatePresenterPerspectiveMode();
        }
        _onMouseLeave() {
          this._startCountdownToDeactivatePresenterPerspectiveMode();
        }
        _computeHitRegionsState() {
          var t, e, i, n, l, r;
          const a = [],
            s = this.slideView.slide,
            c = o.mergeSlideState(
              this.slideView.slideState,
              this._slidePresentationState,
            ),
            d =
              null !==
                (i =
                  null !== (t = null == c ? void 0 : c.hitRegionHPadding) &&
                  void 0 !== t
                    ? t
                    : null === (e = this.slideView.slide) || void 0 === e
                      ? void 0
                      : e.hitRegionHPadding) && void 0 !== i
                ? i
                : 0,
            u =
              null !==
                (r =
                  null !== (n = null == c ? void 0 : c.hitRegionVPadding) &&
                  void 0 !== n
                    ? n
                    : null === (l = this.slideView.slide) || void 0 === l
                      ? void 0
                      : l.hitRegionVPadding) && void 0 !== r
                ? r
                : 0;
          if (
            s &&
            c &&
            "presenterPerspective" === this.mode &&
            "all" === this._hitRegionTrackingMode &&
            !this._isHandlingScrollEvent
          ) {
            const t = o
              .filterBoxes(s.boxes, (t) => !!t.requestForHit)
              .map((t) => {
                var e;
                return h.computeHitRegionBounds(
                  t.id,
                  s.boxes,
                  null !== (e = c.boxes) && void 0 !== e ? e : [],
                  { x: 0, y: 0, width: s.width, height: s.height },
                  d,
                  u,
                );
              })
              .filter((t) => !!t);
            a.push(...t);
          }
          return a;
        }
        _updateHitTargetState(t, e) {
          return (i) => o.mergeSlideState(i, this._computeHitBoxStates(t, e));
        }
        _computeHitBoxStates(t, e) {
          return t && this._slideView.slide
            ? f.computeHittableBoxStates(this._slideView.slide, t, e)
            : null;
        }
        emit(t) {
          var e;
          null === (e = this.delegate) || void 0 === e || e.emitEvent(t);
        }
        get modalView() {
          return this._modalView;
        }
        openModal(t, e) {
          return this._modalView
            ? null
            : ((this._modalView = new m.ModalView(t)),
              this.contentEl.appendChild(this._modalView.el),
              this._modalView.update(),
              this._modalView.connect(),
              this._modalView.present(e),
              this._modalView);
        }
        closeModal(t) {
          return n(this, void 0, void 0, function* () {
            const e = this._modalView;
            e &&
              (yield e.dismiss(t),
              e.disconnect(),
              e.el.parentElement === this.contentEl &&
                this.contentEl.removeChild(e.el),
              (this._modalView = null));
          });
        }
        presentModalDisplay(t, e) {
          return n(this, void 0, void 0, function* () {
            "image" === t.contentType && this.presentImageZoomDisplay(300, e);
          });
        }
        dismissModalDisplay(t) {
          return n(this, void 0, void 0, function* () {
            "image" === t && this.closeModal(300);
          });
        }
        _updatePresenterPerspectiveStateForImages() {
          var t, e, i, n, l;
          let r =
            null !==
              (i =
                null ===
                  (e =
                    null === (t = this._slideView.slide) || void 0 === t
                      ? void 0
                      : t.boxes) || void 0 === e
                  ? void 0
                  : e.filter((t) => "image" === t.contentType)) && void 0 !== i
              ? i
              : [];
          if (
            (null === (n = this._slideView.slide) || void 0 === n
              ? void 0
              : n.boxes) &&
            (null === (l = this._slideView.slide) || void 0 === l
              ? void 0
              : l.subtopics)
          ) {
            const { boxes: t, subtopics: e } = this._slideView.slide,
              i = e
                .map((e) => o.getBoxById(t, o.imageOfTopic(e)))
                .filter((t) => null !== t);
            r = [...r, ...i];
          }
          const a = r.filter((t) => t.zoomable);
          return (t) =>
            o.mergeSlideState(t, {
              boxes:
                null == a
                  ? void 0
                  : a.map((e) => ({
                      id: e.id,
                      isZoomButtonVisible:
                        "presenterPerspective" === t.mode || void 0,
                    })),
            });
        }
        _handleImageViewPointerEvent(t, e) {
          var i;
          const n =
            (null === (i = this._slideView.slide) || void 0 === i
              ? void 0
              : i.boxes) && o.getBoxById(this._slideView.slide.boxes, t);
          if (
            "image" === (null == n ? void 0 : n.contentType) &&
            (null == n ? void 0 : n.zoomable)
          )
            switch (e) {
              case "enter":
                return this._changePresentationState([
                  (e) =>
                    o.mergeSlideState(e, {
                      boxes: [{ id: t, isZoomButtonVisible: !0 }],
                    }),
                ]);
              case "leave":
                return this._changePresentationState([
                  (e) =>
                    o.mergeSlideState(e, {
                      boxes: [{ id: t, isZoomButtonVisible: !1 }],
                    }),
                ]);
            }
        }
        presentImageZoomDisplay(t, e) {
          var i;
          const n = this.slideView.getBoxViewById(e);
          if (!n) return;
          const o = {
              width: this.contentEl.clientWidth,
              height: this.contentEl.clientHeight,
            },
            l = n.imageEl.cloneNode(),
            r = Object.assign({}, n.box.absBounds);
          let s;
          (l.style.cssText = `\n      position: absolute;\n      width: ${a.toCSSLength(r.width)};\n      height: ${a.toCSSLength(r.height)};\n      left: ${a.toCSSLength(r.x)};\n      top: ${a.toCSSLength(r.y)};\n    `),
            l.removeAttribute("id"),
            l.removeAttribute("class");
          const c = { x: 0, y: 0 };
          r.width / r.height >= o.width / o.height
            ? ((s = { width: o.width, height: o.height - 144 }), (c.y = 72))
            : ((s = { width: o.width - 144, height: o.height }), (c.x = 72));
          const d = {
              scale: Math.min(s.width / r.width, s.height / r.height) + 0.001,
              translateX: s.width / 2 - r.width / 2 - r.x + c.x,
              translateY: s.height / 2 - r.height / 2 - r.y + c.y,
            },
            u = this.openModal(
              {
                superview: this,
                contentEl: l,
                slideBackgroundColor:
                  null === (i = this.slideView.slide) || void 0 === i
                    ? void 0
                    : i.backgroundColor,
                containerSize: o,
                showCloseButton: this.allowsActivatingPresenterPerspectiveMode,
                contentTransformBeforePresent: {
                  scale: 1,
                  translateX: 0,
                  translateY: 0,
                },
                contentTransformAfterPresent: d,
              },
              t,
            );
          if (!u) return;
          const p = () => {
            var t;
            null === (t = this.delegate) ||
              void 0 === t ||
              t.presenterDidReceivePointerInteraction(this, {
                kind: "hit",
                modal: { toggle: "close", contentType: "image" },
              });
          };
          u.on("containerClicked", p), u.on("closeButtonClicked", p);
        }
      }
      e.PresentationView = b;
    },
    54365: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__importDefault) ||
        function (t) {
          return t && t.__esModule ? t : { default: t };
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.ShapeView = void 0);
      const o = i(75327),
        l = i(1438),
        r = i(50733),
        a = n(i(78517));
      class s extends l.BoxView {
        createViewElement() {
          const t = document.createElementNS(
            "http://www.w3.org/2000/svg",
            "svg",
          );
          return (
            (t.style.position = "absolute"), (t.style.pointerEvents = "none"), t
          );
        }
        _createShapeEl() {
          var t, e;
          if (this.box.rough) {
            const e = a.default
              .svg(this.el)
              .path(
                null !== (t = this.box.shapePath) && void 0 !== t ? t : "",
                {
                  roughness: this._computeRoughness(),
                  fill: this.box.fillColor,
                  stroke: this.box.fillColor,
                  fillStyle: "cross-hatch",
                  disableMultiStroke: !1,
                  seed: this._computeRoughSeed(),
                },
              );
            return e.children[0].classList.add("pancake-view-shape-path"), e;
          }
          {
            const t = document.createElementNS(
              "http://www.w3.org/2000/svg",
              "path",
            );
            return (
              t.classList.add("pancake-view-shape-path"),
              t.setAttribute(
                "d",
                null !== (e = this.box.shapePath) && void 0 !== e ? e : "",
              ),
              t
            );
          }
        }
        _computeRoughSeed() {
          return this.box.roles.includes("separatorLine")
            ? 2
            : this.box.roles.includes("curlyBrace")
              ? 6
              : 0;
        }
        _computeRoughness() {
          return this.box.roles.includes("separatorLine")
            ? 3
            : this.box.roles.includes("curlyBrace")
              ? 1.5
              : 1;
        }
        get shape() {
          if (!this._shape) {
            if (((this._shape = this._createShapeEl()), this.box.markerStart)) {
              const t = document.createElementNS(
                  "http://www.w3.org/2000/svg",
                  "defs",
                ),
                e = document.createElementNS(
                  "http://www.w3.org/2000/svg",
                  "marker",
                ),
                i = `marker-start-${new Date().getTime()}-${Math.floor(1e3 * Math.random())}`;
              (e.id = i),
                e.setAttribute("markerUnits", "userSpaceOnUse"),
                e.setAttribute(
                  "markerWidth",
                  `${this.box.markerStart.size.width}`,
                ),
                e.setAttribute(
                  "markerHeight",
                  `${this.box.markerStart.size.height}`,
                ),
                e.setAttribute(
                  "refX",
                  `${this.box.markerStart.ref ? this.box.markerStart.ref.x : 0}`,
                ),
                e.setAttribute(
                  "refY",
                  `${this.box.markerStart.ref ? this.box.markerStart.ref.y : 0}`,
                );
              const n = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path",
              );
              n.setAttribute("d", this.box.markerStart.path),
                e.appendChild(n),
                t.appendChild(e),
                this.el.appendChild(t),
                (this.shape.style.markerStart = `url(#${i})`),
                (this._markerStartEl = e);
            }
            if (this.box.clipPath) {
              const t = document.createElementNS(
                  "http://www.w3.org/2000/svg",
                  "clipPath",
                ),
                e = `clip-path-${this.box.id}-${new Date().getTime()}-${Math.floor(1e3 * Math.random())}`;
              t.id = e;
              const i = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path",
              );
              i.setAttribute("d", this.box.clipPath),
                i.setAttribute("stroke-width", "21"),
                t.appendChild(i),
                this.el.appendChild(t),
                this.shape.setAttribute("clip-path", `url(#${e})`);
            }
            this.el.appendChild(this._shape);
          }
          return this._shape;
        }
        update() {
          var t, e, i, n, l, a, s, c, d, u, p, h, g, f;
          super.update(),
            this.el.style.removeProperty("width"),
            this.el.style.removeProperty("height"),
            this.el.setAttribute("width", o.toCSSLength(this.box.bounds.width)),
            this.el.setAttribute(
              "height",
              o.toCSSLength(this.box.bounds.height),
            ),
            this.el.setAttribute(
              "preserveAspectRatio",
              null !== (t = this.box.preserveAspectRatio) && void 0 !== t
                ? t
                : "xMidYMid meet",
            ),
            this.box.viewport
              ? this.el.setAttribute(
                  "viewBox",
                  `${this.box.viewport.x} ${this.box.viewport.y} ${this.box.viewport.width} ${this.box.viewport.height}`,
                )
              : this.el.setAttribute(
                  "viewBox",
                  `0 0 ${this.box.bounds.width} ${this.box.bounds.height}`,
                );
          const m = this.state,
            b =
              null === (e = this.shape.parentElement) || void 0 === e
                ? void 0
                : e.getElementsByClassName("pancake-view-shape-path")[0];
          (b.style.fill =
            null !==
              (n =
                null !== (i = m.fillColor) && void 0 !== i
                  ? i
                  : this.box.fillColor) && void 0 !== n
              ? n
              : "transparent"),
            (b.style.stroke =
              null !==
                (a =
                  null !== (l = m.strokeColor) && void 0 !== l
                    ? l
                    : this.box.strokeColor) && void 0 !== a
                ? a
                : "transparent"),
            (b.style.strokeWidth = o.toCSSLength(
              null !==
                (c =
                  null !== (s = m.lineWidth) && void 0 !== s
                    ? s
                    : this.box.lineWidth) && void 0 !== c
                ? c
                : 0,
            )),
            (b.style.strokeLinecap =
              null !==
                (u =
                  null !== (d = m.lineCap) && void 0 !== d
                    ? d
                    : this.box.lineCap) && void 0 !== u
                ? u
                : ""),
            (b.style.strokeLinejoin =
              null !==
                (h =
                  null !== (p = m.lineJoin) && void 0 !== p
                    ? p
                    : this.box.lineJoin) && void 0 !== h
                ? h
                : ""),
            this._markerStartEl &&
              (this._markerStartEl.style.fill =
                null !==
                  (f =
                    null !== (g = m.strokeColor) && void 0 !== g
                      ? g
                      : this.box.strokeColor) && void 0 !== f
                  ? f
                  : "transparent"),
            this.updateStyle(m, "strokeOffset", (t) =>
              r.ViewAnimator.perform(b, { strokeOffset: null != t ? t : 0 }),
            );
        }
      }
      e.ShapeView = s;
    },
    98684: function (t, e, i) {
      "use strict";
      var n =
          (this && this.__awaiter) ||
          function (t, e, i, n) {
            return new (i || (i = Promise))(function (o, l) {
              function r(t) {
                try {
                  s(n.next(t));
                } catch (t) {
                  l(t);
                }
              }
              function a(t) {
                try {
                  s(n.throw(t));
                } catch (t) {
                  l(t);
                }
              }
              function s(t) {
                var e;
                t.done
                  ? o(t.value)
                  : ((e = t.value),
                    e instanceof i
                      ? e
                      : new i(function (t) {
                          t(e);
                        })).then(r, a);
              }
              s((n = n.apply(t, e || [])).next());
            });
          },
        o =
          (this && this.__importDefault) ||
          function (t) {
            return t && t.__esModule ? t : { default: t };
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.SlideView = void 0);
      const l = i(14850),
        r = i(1438),
        a = i(89953),
        s = i(50733),
        c = i(28892),
        d = i(75327),
        u = i(80759),
        p = o(i(76030)),
        h = i(97857);
      class g extends l.View {
        constructor() {
          super(...arguments),
            (this.slide = null),
            (this.slideState = {}),
            (this._boxViews = []),
            (this._backgroundBoxViews = []),
            (this._renderedState = {});
        }
        createViewElement() {
          const t = document.createElement("div");
          return (
            (t.style.display = "block"),
            (t.style.position = "relative"),
            (t.style.overflow = "hidden"),
            t
          );
        }
        get positionMode() {
          return "absolute" === this.el.style.position ? "manual" : "auto";
        }
        set positionMode(t) {
          this.el.style.position = "manual" === t ? "absolute" : "relative";
        }
        get backgroundEl() {
          var t;
          return null !== (t = this._backgroundEl) && void 0 !== t
            ? t
            : (this._backgroundEl = this.createBackgroundElement());
        }
        createBackgroundElement() {
          const t = this.createLayerElement();
          return this.el.insertBefore(t, this.el.firstChild), t;
        }
        get contentEl() {
          var t;
          return null !== (t = this._contentEl) && void 0 !== t
            ? t
            : (this._contentEl = this.createContentElement());
        }
        createContentElement() {
          const t = this.createLayerElement();
          return this.el.appendChild(t), t;
        }
        createLayerElement() {
          const t = document.createElement("div");
          return (
            (t.style.display = "block"),
            (t.style.position = "absolute"),
            (t.style.top = "0px"),
            (t.style.left = "0px"),
            (t.style.backgroundColor = "none"),
            t
          );
        }
        get boxViews() {
          return [...this._boxViews];
        }
        get contentClipPath() {
          var t, e;
          return null !==
            (e =
              null === (t = this.slide) || void 0 === t
                ? void 0
                : t.contentClipPath) && void 0 !== e
            ? e
            : "none";
        }
        get backgroundBoxViews() {
          return [...this._backgroundBoxViews];
        }
        update() {
          var t, e, i, n;
          super.update();
          const o =
              null !==
                (e =
                  null === (t = this.slide) || void 0 === t
                    ? void 0
                    : t.width) && void 0 !== e
                ? e
                : 1,
            l =
              null !==
                (n =
                  null === (i = this.slide) || void 0 === i
                    ? void 0
                    : i.height) && void 0 !== n
                ? n
                : 1,
            r = d.toCSSLength(o),
            a = d.toCSSLength(l);
          (this.el.style.width = r),
            (this.el.style.height = a),
            (this.backgroundEl.style.width = r),
            (this.backgroundEl.style.height = a),
            (this.contentEl.style.width = r),
            (this.contentEl.style.height = a),
            (this.contentEl.style.clipPath = this.contentClipPath);
          const c = this.slideState;
          this._updateStyle(c, "opacity", (t) =>
            s.ViewAnimator.perform(this.el, { opacity: null != t ? t : 1 }),
          ),
            this._updateStyle(c, "backgroundOpacity", (t) =>
              s.ViewAnimator.perform(this.backgroundEl, {
                opacity: null != t ? t : 1,
              }),
            ),
            this._updateStyle(c, "backgroundColor", (t) =>
              s.ViewAnimator.perform(this.backgroundEl, {
                backgroundColor: null != t ? t : "none",
              }),
            ),
            this._updateBoxViews(),
            this._updateBackgroundBoxViews(),
            this._updateHitRegionEls(c);
        }
        _updateBoxViews() {
          var t, e;
          const i = [...this._boxViews],
            n =
              null !==
                (e =
                  null === (t = this.slide) || void 0 === t
                    ? void 0
                    : t.boxes) && void 0 !== e
                ? e
                : [];
          this._boxViews = this._updateBoxViewsIn(this.contentEl, i, n);
        }
        _updateBackgroundBoxViews() {
          var t, e;
          const i = [...this._backgroundBoxViews],
            n =
              null !==
                (e =
                  null === (t = this.slide) || void 0 === t
                    ? void 0
                    : t.backgroundBoxes) && void 0 !== e
                ? e
                : [];
          this._backgroundBoxViews = this._updateBoxViewsIn(
            this.backgroundEl,
            i,
            n,
          );
        }
        _updateBoxViewsIn(t, e, i) {
          for (let n = 0; n < i.length; n++) {
            const o = i[n];
            let l = e[n];
            if (l)
              if (l.box.id === o.id) (l.box = o), l.update();
              else {
                const i = e.slice(n + 1).find((t) => t.box.id === o.id);
                if (i)
                  t.insertBefore(i.el, l.el),
                    (i.box = o),
                    i.update(),
                    e.splice(n, 0, i);
                else {
                  const i = a.createBoxView(this, o);
                  t.insertBefore(i.el, l.el),
                    i.update(),
                    e.splice(n, 0, i),
                    this.connected && i.connect();
                }
              }
            else
              (l = a.createBoxView(this, o)),
                t.appendChild(l.el),
                l.update(),
                e.push(l);
          }
          for (; e.length > i.length; ) {
            const i = e.pop();
            this.connected && i.disconnect(), t.removeChild(i.el);
          }
          return e;
        }
        _updateStyle(t, e, i) {
          var n, o;
          const l =
            null !== (n = null == t ? void 0 : t[e]) && void 0 !== n
              ? n
              : null === (o = this.slide) || void 0 === o
                ? void 0
                : o[e];
          l !== this._renderedState[e] && (i(l), (this._renderedState[e] = l));
        }
        getBoxViewById(t) {
          return this.findBoxView((e) => e.box.id === t);
        }
        findBoxView(t) {
          let e = null;
          return (
            this.forEachBoxView((i, n) => {
              if (t(i)) return (e = i), n();
            }),
            e
          );
        }
        forEachBoxView(t) {
          return r.forEachBoxViewIn(this._boxViews, t);
        }
        connect() {
          super.connect();
          for (const t of this._boxViews) t.connect();
        }
        disconnect() {
          for (const t of this._boxViews) t.disconnect();
          super.disconnect();
        }
        clone() {
          const t = new g();
          (t.slide = this.slide), t.update();
          const e = {};
          return (
            this.forEachBoxView(function (t) {
              t instanceof c.GroupView && (e[t.box.id] = t.scrollOffset);
            }),
            t.forEachBoxView(function (t) {
              if (t instanceof c.GroupView) {
                const i = e[t.box.id];
                void 0 !== i && (t.scrollOffset = i);
              }
            }),
            t
          );
        }
        get hitRegionEls() {
          var t;
          return null !== (t = this._hitRegionEls) && void 0 !== t ? t : [];
        }
        _createHitRegionEl() {
          const t = document.createElement("div");
          return (
            (t.style.position = "absolute"),
            (t.style.borderStyle = "solid"),
            (t.style.transition = "opacity 0.15s ease-in-out"),
            (t.style.userSelect = "none"),
            (t.style.pointerEvents = "none"),
            (t.style.opacity = "0"),
            t.style.setProperty("backdrop-filter", "blur(20px)"),
            this.el.insertBefore(t, this.contentEl),
            t
          );
        }
        _updateHitRegionEl(t, e, i) {
          var n, o, l, r, a, s, c, u, p, h, g, f, m;
          const b = t;
          (b.style.opacity = `${e.opacity}`),
            (b.style.background =
              null !==
                (l =
                  null !== (n = null == i ? void 0 : i.hitRegionFillColor) &&
                  void 0 !== n
                    ? n
                    : null === (o = this.slide) || void 0 === o
                      ? void 0
                      : o.hitRegionFillColor) && void 0 !== l
                ? l
                : "rgba(0,0,0,0.5)"),
            (b.style.borderRadius = d.toCSSLength(
              null !== (r = null == i ? void 0 : i.hitRegionCornerRadius) &&
                void 0 !== r
                ? r
                : null === (a = this.slide) || void 0 === a
                  ? void 0
                  : a.hitRegionCornerRadius,
            )),
            (b.style.borderWidth = d.toCSSLength(
              null !== (s = null == i ? void 0 : i.hitRegionLineWidth) &&
                void 0 !== s
                ? s
                : null === (c = this.slide) || void 0 === c
                  ? void 0
                  : c.hitRegionLineWidth,
            )),
            (b.style.borderColor =
              null !==
                (h =
                  null !== (u = null == i ? void 0 : i.hitRegionStrokeColor) &&
                  void 0 !== u
                    ? u
                    : null === (p = this.slide) || void 0 === p
                      ? void 0
                      : p.hitRegionStrokeColor) && void 0 !== h
                ? h
                : "rgba(0,0,0,0.6)"),
            (b.style.boxShadow =
              null !==
                (m =
                  null !== (g = null == i ? void 0 : i.hitRegionBoxShadow) &&
                  void 0 !== g
                    ? g
                    : null === (f = this.slide) || void 0 === f
                      ? void 0
                      : f.hitRegionBoxShadow) && void 0 !== m
                ? m
                : ""),
            (b.style.transform = `translate(${d.toCSSLength(e.x)}, ${d.toCSSLength(e.y)})`),
            (b.style.width = d.toCSSLength(e.width)),
            (b.style.height = d.toCSSLength(e.height));
        }
        enterHitRegionActiveEffect(t, e = 200) {
          var i, o;
          return n(this, void 0, void 0, function* () {
            const n = this.hitRegionEls.find((e) =>
              h.intersectDOMRect(
                e.getBoundingClientRect(),
                t.el.getBoundingClientRect(),
              ),
            );
            n &&
              (yield Promise.all([
                p.default({
                  targets: n,
                  background:
                    null !==
                      (o =
                        null === (i = this.slide) || void 0 === i
                          ? void 0
                          : i.hitRegionActiveFillColor) && void 0 !== o
                      ? o
                      : "rgba(196, 196, 196, 0.3)",
                  easing: "easeOutQuad",
                  duration: e,
                }).finished,
                p.default({
                  targets: [n, t.el],
                  scale: 0.97,
                  easing: "easeOutQuad",
                  duration: e,
                }).finished,
              ]));
          });
        }
        cancelHitRegionActiveEffect(t, e = 100) {
          var i, o;
          return n(this, void 0, void 0, function* () {
            const n = this.hitRegionEls.find((e) =>
              h.intersectDOMRect(
                e.getBoundingClientRect(),
                t.el.getBoundingClientRect(),
              ),
            );
            n &&
              (yield Promise.all([
                p.default({
                  targets: n,
                  background:
                    null !==
                      (o =
                        null === (i = this.slide) || void 0 === i
                          ? void 0
                          : i.hitRegionFillColor) && void 0 !== o
                      ? o
                      : "rgba(196, 196, 196, 0.3)",
                  easing: "easeOutQuad",
                  duration: e,
                }).finished,
                p.default({
                  targets: [n, t.el],
                  scale: 1,
                  easing: "easeOutQuad",
                  duration: e,
                }).finished,
              ]));
          });
        }
        _updateHitRegionEls(t) {
          var e;
          const i =
              null ===
                (e = u.findPresentationContext(this, "presentationState")) ||
              void 0 === e
                ? void 0
                : e.presentationState,
            n = null == i ? void 0 : i.hitRegions;
          n
            ? 1 === n.length && 1 === this.hitRegionEls.length
              ? this._updateHitRegionEl(this.hitRegionEls[0], n[0], t)
              : (this.hitRegionEls.forEach((t) => this.el.removeChild(t)),
                (this._hitRegionEls = []),
                n.forEach((e) => {
                  var i;
                  const n = this._createHitRegionEl();
                  this._updateHitRegionEl(n, e, t),
                    null === (i = this._hitRegionEls) ||
                      void 0 === i ||
                      i.push(n);
                }))
            : (this.hitRegionEls.forEach((t) => this.el.removeChild(t)),
              (this._hitRegionEls = []));
        }
      }
      e.SlideView = g;
    },
    59597: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.SVGTemplateView = void 0);
      const n = i(1438),
        o = i(75327);
      class l extends n.BoxView {
        createViewElement() {
          const t = document.createElement("div");
          return (
            (t.style.display = "block"),
            (t.style.position = "absolute"),
            (t.style.userSelect = "none"),
            t
          );
        }
        get svgEl() {
          var t;
          return null !== (t = this._svgEl) && void 0 !== t
            ? t
            : (this._svgEl = this._createSVGElement());
        }
        _createSVGElement() {
          const t = this._createSvgDom(this.box.svg);
          return this.el.appendChild(t), t;
        }
        update() {
          var t, e, i, n, l, r, a;
          super.update();
          const s = o.toCSSLength(this.box.bounds.width),
            c = o.toCSSLength(this.box.bounds.height);
          this.svgEl.setAttribute("width", s),
            this.svgEl.setAttribute("height", c),
            this.svgEl.setAttribute("preserveAspectRatio", "xMidYMid meet"),
            this.svgEl.setAttribute(
              "fill",
              null !==
                (e =
                  null !== (t = this.state.fillColor) && void 0 !== t
                    ? t
                    : this.box.fillColor) && void 0 !== e
                ? e
                : "",
            ),
            (this.el.style.transition =
              null !== (i = this.state.transition) && void 0 !== i ? i : ""),
            (this.el.style.borderStyle = "solid"),
            (this.el.style.borderWidth = `${null !== (n = this.box.borderWidth) && void 0 !== n ? n : 0}px`),
            (this.el.style.borderColor =
              null !==
                (r =
                  null !== (l = this.state.borderColor) && void 0 !== l
                    ? l
                    : this.box.borderColor) && void 0 !== r
                ? r
                : "transparent"),
            (this.el.style.borderRadius = `${null !== (a = this.box.borderRadius) && void 0 !== a ? a : 0}px`);
        }
        _createSvgDom(t) {
          return new DOMParser().parseFromString(t, "image/svg+xml")
            .documentElement;
        }
      }
      e.SVGTemplateView = l;
    },
    62480: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.TextView = void 0);
      const n = i(75327),
        o = i(1438);
      class l extends o.BoxView {
        createViewElement() {
          const t = document.createElement("div");
          return (
            (t.style.display = "block"),
            (t.style.position = "absolute"),
            (t.style.userSelect = "none"),
            (t.style.overflow = "visible"),
            t.classList.add("pancake-view-text-view"),
            t
          );
        }
        get textEl() {
          var t;
          return null !== (t = this._textEl) && void 0 !== t
            ? t
            : (this._textEl = this._createTextElement());
        }
        _createTextElement() {
          const t = document.createElement("div");
          return (
            (t.style.userSelect = "none"),
            (t.style.overflow = "visible"),
            (t.style.overflowWrap = "break-word"),
            (t.style.display = "block"),
            (t.style.position = "absolute"),
            (t.style.left = "0px"),
            (t.style.top = "0px"),
            this.el.appendChild(t),
            t
          );
        }
        update() {
          var t, e, i, o, l, r, a, s, c, d;
          super.update();
          const u = n.toCSSLength(this.box.bounds.width),
            p = n.toCSSLength(this.box.bounds.height);
          (this.textEl.style.width = u),
            (this.textEl.style.height = p),
            (this.textEl.style.font = n.toCSSFont(this.box)),
            (this.textEl.style.transition =
              null !== (t = this.state.transition) && void 0 !== t ? t : ""),
            (this.textEl.style.color =
              null !==
                (i =
                  null !== (e = this.state.textColor) && void 0 !== e
                    ? e
                    : this.box.textColor) && void 0 !== i
                ? i
                : ""),
            (this.textEl.style.textAlign =
              null !== (o = n.toCSSTextAlign(this.box.textAlignment)) &&
              void 0 !== o
                ? o
                : ""),
            (this.textEl.style.overflowWrap =
              null !== (l = this.box.overflowWrap) && void 0 !== l ? l : ""),
            (this.textEl.style.textIndent =
              null !== (r = this.box.textIndent) && void 0 !== r ? r : ""),
            (this.textEl.style.textShadow =
              null !== (a = this.box.textShadow) && void 0 !== a ? a : ""),
            (this.textEl.style.letterSpacing =
              null !== (s = this.box.letterSpacing) && void 0 !== s ? s : "");
          const h = this.textEl;
          if (h)
            if (this.box.html) {
              h.innerHTML = this.box.html;
              const t = h.getElementsByTagName("a");
              for (let e = 0; e < t.length; e++)
                (t[e].style.pointerEvents = "none"),
                  (t[e].style.color =
                    null !==
                      (d =
                        null !== (c = this.state.textColor) && void 0 !== c
                          ? c
                          : this.box.textColor) && void 0 !== d
                      ? d
                      : "");
            } else n.emptyElement(h), n.fillText(h, this.box.text);
        }
      }
      e.TextView = l;
    },
    50733: function (t, e, i) {
      "use strict";
      var n =
        (this && this.__importDefault) ||
        function (t) {
          return t && t.__esModule ? t : { default: t };
        };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.ViewAnimator = void 0);
      const o = n(i(76030));
      class l {
        constructor(t) {
          var e;
          (this._pendingChanges = new Map()),
            (this.duration = t.duration),
            (this.easing =
              null !== (e = t.easing) && void 0 !== e ? e : "linear");
        }
        registerPendingChange(t, e) {
          var i;
          const n =
            null !== (i = this._pendingChanges.get(t)) && void 0 !== i ? i : {};
          this._pendingChanges.set(t, Object.assign(Object.assign({}, n), e));
        }
        animate(t) {
          const e = l.current;
          return (l.current = this), t(), (l.current = e), this;
        }
        play() {
          const t = this._pendingChanges;
          this._pendingChanges = new Map();
          const e = { duration: this.duration, easing: this.easing };
          return Promise.all(
            Array.from(
              t,
              ([t, i]) =>
                o.default(
                  Object.assign(Object.assign(Object.assign({}, r(i, t)), e), {
                    targets: t,
                  }),
                ).finished,
            ),
          ).then(() => {});
        }
        static perform(t, e) {
          l.current
            ? l.current.registerPendingChange(t, e)
            : o.default.set(t, r(e, t));
        }
      }
      function r(t, e) {
        const i = Object.assign({}, t);
        return (
          void 0 !== t.strokeOffset
            ? ((i.strokeDashoffset =
                o.default.setDashoffset(e) * t.strokeOffset),
              delete i.strokeOffset)
            : t.transform &&
              ("none" !== t.transform &&
                t.transform.forEach((t) => {
                  "translate" in t &&
                    ((i.translateX = t.translate.x),
                    (i.translateY = t.translate.y)),
                    "scale" in t &&
                      ((i.scaleX =
                        "number" == typeof t.scale ? t.scale : t.scale.x),
                      (i.scaleY =
                        "number" == typeof t.scale ? t.scale : t.scale.y)),
                    "rotate" in t && (i.rotate = t.rotate),
                    "skew" in t &&
                      ((i.skewX = t.skew.ax), (i.skewY = t.skew.ay));
                }),
              delete i.transform),
          i
        );
      }
      (e.ViewAnimator = l), (l.current = null);
    },
    89953: (t, e, i) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.createBoxView = void 0);
      const n = i(62480),
        o = i(28892),
        l = i(54365),
        r = i(21695),
        a = i(59597),
        s = i(95763),
        c = i(69738);
      e.createBoxView = function (t, e) {
        switch (e.contentType) {
          case "text":
            return new n.TextView({ superview: t, box: e });
          case "shape":
            return new l.ShapeView({ superview: t, box: e });
          case "group":
            return new o.GroupView({ superview: t, box: e });
          case "image":
            return new r.ImageView({ superview: t, box: e });
          case "svg-template":
            return new a.SVGTemplateView({ superview: t, box: e });
          case "background-shape":
            return new s.BackgroundShapeView({ superview: t, box: e });
          case "background-color-brick":
            return new c.BackgroundColorBrickView({ superview: t, box: e });
        }
      };
    },
    14850: (t, e) => {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 }), (e.View = void 0);
      e.View = class {
        constructor(t = {}) {
          var e;
          (this._superview = null),
            (this._connected = !1),
            (this._superview =
              null !== (e = t.superview) && void 0 !== e ? e : null);
        }
        get superview() {
          return this._superview;
        }
        get el() {
          var t;
          return null !== (t = this._el) && void 0 !== t
            ? t
            : (this._el = this.createViewElement());
        }
        update() {}
        connect() {
          this._connected = !0;
        }
        disconnect() {
          this._connected = !1;
        }
        get connected() {
          return this._connected;
        }
      };
    },
    76030: (t, e, i) => {
      "use strict";
      i.r(e), i.d(e, { default: () => at });
      var n = {
          update: null,
          begin: null,
          loopBegin: null,
          changeBegin: null,
          change: null,
          changeComplete: null,
          loopComplete: null,
          complete: null,
          loop: 1,
          direction: "normal",
          autoplay: !0,
          timelineOffset: 0,
        },
        o = {
          duration: 1e3,
          delay: 0,
          endDelay: 0,
          easing: "easeOutElastic(1, .5)",
          round: 0,
        },
        l = [
          "translateX",
          "translateY",
          "translateZ",
          "rotate",
          "rotateX",
          "rotateY",
          "rotateZ",
          "scale",
          "scaleX",
          "scaleY",
          "scaleZ",
          "skew",
          "skewX",
          "skewY",
          "perspective",
          "matrix",
          "matrix3d",
        ],
        r = { CSS: {}, springs: {} };
      function a(t, e, i) {
        return Math.min(Math.max(t, e), i);
      }
      function s(t, e) {
        return t.indexOf(e) > -1;
      }
      function c(t, e) {
        return t.apply(null, e);
      }
      var d = {
        arr: function (t) {
          return Array.isArray(t);
        },
        obj: function (t) {
          return s(Object.prototype.toString.call(t), "Object");
        },
        pth: function (t) {
          return d.obj(t) && t.hasOwnProperty("totalLength");
        },
        svg: function (t) {
          return t instanceof SVGElement;
        },
        inp: function (t) {
          return t instanceof HTMLInputElement;
        },
        dom: function (t) {
          return t.nodeType || d.svg(t);
        },
        str: function (t) {
          return "string" == typeof t;
        },
        fnc: function (t) {
          return "function" == typeof t;
        },
        und: function (t) {
          return void 0 === t;
        },
        nil: function (t) {
          return d.und(t) || null === t;
        },
        hex: function (t) {
          return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t);
        },
        rgb: function (t) {
          return /^rgb/.test(t);
        },
        hsl: function (t) {
          return /^hsl/.test(t);
        },
        col: function (t) {
          return d.hex(t) || d.rgb(t) || d.hsl(t);
        },
        key: function (t) {
          return (
            !n.hasOwnProperty(t) &&
            !o.hasOwnProperty(t) &&
            "targets" !== t &&
            "keyframes" !== t
          );
        },
      };
      function u(t) {
        var e = /\(([^)]+)\)/.exec(t);
        return e
          ? e[1].split(",").map(function (t) {
              return parseFloat(t);
            })
          : [];
      }
      function p(t, e) {
        var i = u(t),
          n = a(d.und(i[0]) ? 1 : i[0], 0.1, 100),
          o = a(d.und(i[1]) ? 100 : i[1], 0.1, 100),
          l = a(d.und(i[2]) ? 10 : i[2], 0.1, 100),
          s = a(d.und(i[3]) ? 0 : i[3], 0.1, 100),
          c = Math.sqrt(o / n),
          p = l / (2 * Math.sqrt(o * n)),
          h = p < 1 ? c * Math.sqrt(1 - p * p) : 0,
          g = 1,
          f = p < 1 ? (p * c - s) / h : -s + c;
        function m(t) {
          var i = e ? (e * t) / 1e3 : t;
          return (
            (i =
              p < 1
                ? Math.exp(-i * p * c) *
                  (g * Math.cos(h * i) + f * Math.sin(h * i))
                : (g + f * i) * Math.exp(-i * c)),
            0 === t || 1 === t ? t : 1 - i
          );
        }
        return e
          ? m
          : function () {
              var e = r.springs[t];
              if (e) return e;
              for (var i = 1 / 6, n = 0, o = 0; ; )
                if (1 === m((n += i))) {
                  if (++o >= 16) break;
                } else o = 0;
              var l = n * i * 1e3;
              return (r.springs[t] = l), l;
            };
      }
      function h(t) {
        return (
          void 0 === t && (t = 10),
          function (e) {
            return Math.ceil(a(e, 1e-6, 1) * t) * (1 / t);
          }
        );
      }
      var g,
        f,
        m = (function () {
          var t = 0.1;
          function e(t, e) {
            return 1 - 3 * e + 3 * t;
          }
          function i(t, e) {
            return 3 * e - 6 * t;
          }
          function n(t) {
            return 3 * t;
          }
          function o(t, o, l) {
            return ((e(o, l) * t + i(o, l)) * t + n(o)) * t;
          }
          function l(t, o, l) {
            return 3 * e(o, l) * t * t + 2 * i(o, l) * t + n(o);
          }
          return function (e, i, n, r) {
            if (0 <= e && e <= 1 && 0 <= n && n <= 1) {
              var a = new Float32Array(11);
              if (e !== i || n !== r)
                for (var s = 0; s < 11; ++s) a[s] = o(s * t, e, n);
              return function (t) {
                return (e === i && n === r) || 0 === t || 1 === t
                  ? t
                  : o(c(t), i, r);
              };
            }
            function c(i) {
              for (var r = 0, s = 1; 10 !== s && a[s] <= i; ++s) r += t;
              --s;
              var c = r + ((i - a[s]) / (a[s + 1] - a[s])) * t,
                d = l(c, e, n);
              return d >= 0.001
                ? (function (t, e, i, n) {
                    for (var r = 0; r < 4; ++r) {
                      var a = l(e, i, n);
                      if (0 === a) return e;
                      e -= (o(e, i, n) - t) / a;
                    }
                    return e;
                  })(i, c, e, n)
                : 0 === d
                  ? c
                  : (function (t, e, i, n, l) {
                      var r,
                        a,
                        s = 0;
                      do {
                        (r = o((a = e + (i - e) / 2), n, l) - t) > 0
                          ? (i = a)
                          : (e = a);
                      } while (Math.abs(r) > 1e-7 && ++s < 10);
                      return a;
                    })(i, r, r + t, e, n);
            }
          };
        })(),
        b =
          ((g = {
            linear: function () {
              return function (t) {
                return t;
              };
            },
          }),
          (f = {
            Sine: function () {
              return function (t) {
                return 1 - Math.cos((t * Math.PI) / 2);
              };
            },
            Circ: function () {
              return function (t) {
                return 1 - Math.sqrt(1 - t * t);
              };
            },
            Back: function () {
              return function (t) {
                return t * t * (3 * t - 2);
              };
            },
            Bounce: function () {
              return function (t) {
                for (var e, i = 4; t < ((e = Math.pow(2, --i)) - 1) / 11; );
                return (
                  1 / Math.pow(4, 3 - i) -
                  7.5625 * Math.pow((3 * e - 2) / 22 - t, 2)
                );
              };
            },
            Elastic: function (t, e) {
              void 0 === t && (t = 1), void 0 === e && (e = 0.5);
              var i = a(t, 1, 10),
                n = a(e, 0.1, 2);
              return function (t) {
                return 0 === t || 1 === t
                  ? t
                  : -i *
                      Math.pow(2, 10 * (t - 1)) *
                      Math.sin(
                        ((t - 1 - (n / (2 * Math.PI)) * Math.asin(1 / i)) *
                          (2 * Math.PI)) /
                          n,
                      );
              };
            },
          }),
          ["Quad", "Cubic", "Quart", "Quint", "Expo"].forEach(function (t, e) {
            f[t] = function () {
              return function (t) {
                return Math.pow(t, e + 2);
              };
            };
          }),
          Object.keys(f).forEach(function (t) {
            var e = f[t];
            (g["easeIn" + t] = e),
              (g["easeOut" + t] = function (t, i) {
                return function (n) {
                  return 1 - e(t, i)(1 - n);
                };
              }),
              (g["easeInOut" + t] = function (t, i) {
                return function (n) {
                  return n < 0.5
                    ? e(t, i)(2 * n) / 2
                    : 1 - e(t, i)(-2 * n + 2) / 2;
                };
              }),
              (g["easeOutIn" + t] = function (t, i) {
                return function (n) {
                  return n < 0.5
                    ? (1 - e(t, i)(1 - 2 * n)) / 2
                    : (e(t, i)(2 * n - 1) + 1) / 2;
                };
              });
          }),
          g);
      function v(t, e) {
        if (d.fnc(t)) return t;
        var i = t.split("(")[0],
          n = b[i],
          o = u(t);
        switch (i) {
          case "spring":
            return p(t, e);
          case "cubicBezier":
            return c(m, o);
          case "steps":
            return c(h, o);
          default:
            return c(n, o);
        }
      }
      function x(t) {
        try {
          return document.querySelectorAll(t);
        } catch (t) {
          return;
        }
      }
      function y(t, e) {
        for (
          var i = t.length,
            n = arguments.length >= 2 ? arguments[1] : void 0,
            o = [],
            l = 0;
          l < i;
          l++
        )
          if (l in t) {
            var r = t[l];
            e.call(n, r, l, t) && o.push(r);
          }
        return o;
      }
      function S(t) {
        return t.reduce(function (t, e) {
          return t.concat(d.arr(e) ? S(e) : e);
        }, []);
      }
      function w(t) {
        return d.arr(t)
          ? t
          : (d.str(t) && (t = x(t) || t),
            t instanceof NodeList || t instanceof HTMLCollection
              ? [].slice.call(t)
              : [t]);
      }
      function C(t, e) {
        return t.some(function (t) {
          return t === e;
        });
      }
      function T(t) {
        var e = {};
        for (var i in t) e[i] = t[i];
        return e;
      }
      function L(t, e) {
        var i = T(t);
        for (var n in t) i[n] = e.hasOwnProperty(n) ? e[n] : t[n];
        return i;
      }
      function B(t, e) {
        var i = T(t);
        for (var n in e) i[n] = d.und(t[n]) ? e[n] : t[n];
        return i;
      }
      function M(t) {
        return d.rgb(t)
          ? (i = /rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec((e = t)))
            ? "rgba(" + i[1] + ",1)"
            : e
          : d.hex(t)
            ? (function (t) {
                var e = t.replace(
                    /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
                    function (t, e, i, n) {
                      return e + e + i + i + n + n;
                    },
                  ),
                  i = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                return (
                  "rgba(" +
                  parseInt(i[1], 16) +
                  "," +
                  parseInt(i[2], 16) +
                  "," +
                  parseInt(i[3], 16) +
                  ",1)"
                );
              })(t)
            : d.hsl(t)
              ? (function (t) {
                  var e,
                    i,
                    n,
                    o =
                      /hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(t) ||
                      /hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(
                        t,
                      ),
                    l = parseInt(o[1], 10) / 360,
                    r = parseInt(o[2], 10) / 100,
                    a = parseInt(o[3], 10) / 100,
                    s = o[4] || 1;
                  function c(t, e, i) {
                    return (
                      i < 0 && (i += 1),
                      i > 1 && (i -= 1),
                      i < 1 / 6
                        ? t + 6 * (e - t) * i
                        : i < 0.5
                          ? e
                          : i < 2 / 3
                            ? t + (e - t) * (2 / 3 - i) * 6
                            : t
                    );
                  }
                  if (0 == r) e = i = n = a;
                  else {
                    var d = a < 0.5 ? a * (1 + r) : a + r - a * r,
                      u = 2 * a - d;
                    (e = c(u, d, l + 1 / 3)),
                      (i = c(u, d, l)),
                      (n = c(u, d, l - 1 / 3));
                  }
                  return (
                    "rgba(" +
                    255 * e +
                    "," +
                    255 * i +
                    "," +
                    255 * n +
                    "," +
                    s +
                    ")"
                  );
                })(t)
              : void 0;
        var e, i;
      }
      function k(t) {
        var e =
          /[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(
            t,
          );
        if (e) return e[1];
      }
      function F(t, e) {
        return d.fnc(t) ? t(e.target, e.id, e.total) : t;
      }
      function P(t, e) {
        return t.getAttribute(e);
      }
      function I(t, e, i) {
        if (C([i, "deg", "rad", "turn"], k(e))) return e;
        var n = r.CSS[e + i];
        if (!d.und(n)) return n;
        var o = document.createElement(t.tagName),
          l =
            t.parentNode && t.parentNode !== document
              ? t.parentNode
              : document.body;
        l.appendChild(o),
          (o.style.position = "absolute"),
          (o.style.width = 100 + i);
        var a = 100 / o.offsetWidth;
        l.removeChild(o);
        var s = a * parseFloat(e);
        return (r.CSS[e + i] = s), s;
      }
      function O(t, e, i) {
        if (e in t.style) {
          var n = e.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(),
            o = t.style[e] || getComputedStyle(t).getPropertyValue(n) || "0";
          return i ? I(t, o, i) : o;
        }
      }
      function _(t, e) {
        return d.dom(t) && !d.inp(t) && (!d.nil(P(t, e)) || (d.svg(t) && t[e]))
          ? "attribute"
          : d.dom(t) && C(l, e)
            ? "transform"
            : d.dom(t) && "transform" !== e && O(t, e)
              ? "css"
              : null != t[e]
                ? "object"
                : void 0;
      }
      function z(t) {
        if (d.dom(t)) {
          for (
            var e,
              i = t.style.transform || "",
              n = /(\w+)\(([^)]*)\)/g,
              o = new Map();
            (e = n.exec(i));

          )
            o.set(e[1], e[2]);
          return o;
        }
      }
      function E(t, e, i, n) {
        var o = s(e, "scale")
            ? 1
            : 0 +
              (function (t) {
                return s(t, "translate") || "perspective" === t
                  ? "px"
                  : s(t, "rotate") || s(t, "skew")
                    ? "deg"
                    : void 0;
              })(e),
          l = z(t).get(e) || o;
        return (
          i && (i.transforms.list.set(e, l), (i.transforms.last = e)),
          n ? I(t, l, n) : l
        );
      }
      function A(t, e, i, n) {
        switch (_(t, e)) {
          case "transform":
            return E(t, e, n, i);
          case "css":
            return O(t, e, i);
          case "attribute":
            return P(t, e);
          default:
            return t[e] || 0;
        }
      }
      function W(t, e) {
        var i = /^(\*=|\+=|-=)/.exec(t);
        if (!i) return t;
        var n = k(t) || 0,
          o = parseFloat(e),
          l = parseFloat(t.replace(i[0], ""));
        switch (i[0][0]) {
          case "+":
            return o + l + n;
          case "-":
            return o - l + n;
          case "*":
            return o * l + n;
        }
      }
      function R(t, e) {
        if (d.col(t)) return M(t);
        if (/\s/g.test(t)) return t;
        var i = k(t),
          n = i ? t.substr(0, t.length - i.length) : t;
        return e ? n + e : n;
      }
      function V(t, e) {
        return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));
      }
      function H(t) {
        for (var e, i = t.points, n = 0, o = 0; o < i.numberOfItems; o++) {
          var l = i.getItem(o);
          o > 0 && (n += V(e, l)), (e = l);
        }
        return n;
      }
      function D(t) {
        if (t.getTotalLength) return t.getTotalLength();
        switch (t.tagName.toLowerCase()) {
          case "circle":
            return (function (t) {
              return 2 * Math.PI * P(t, "r");
            })(t);
          case "rect":
            return (function (t) {
              return 2 * P(t, "width") + 2 * P(t, "height");
            })(t);
          case "line":
            return (function (t) {
              return V(
                { x: P(t, "x1"), y: P(t, "y1") },
                { x: P(t, "x2"), y: P(t, "y2") },
              );
            })(t);
          case "polyline":
            return H(t);
          case "polygon":
            return (function (t) {
              var e = t.points;
              return H(t) + V(e.getItem(e.numberOfItems - 1), e.getItem(0));
            })(t);
        }
      }
      function $(t, e) {
        var i = e || {},
          n =
            i.el ||
            (function (t) {
              for (var e = t.parentNode; d.svg(e) && d.svg(e.parentNode); )
                e = e.parentNode;
              return e;
            })(t),
          o = n.getBoundingClientRect(),
          l = P(n, "viewBox"),
          r = o.width,
          a = o.height,
          s = i.viewBox || (l ? l.split(" ") : [0, 0, r, a]);
        return {
          el: n,
          viewBox: s,
          x: s[0] / 1,
          y: s[1] / 1,
          w: r,
          h: a,
          vW: s[2],
          vH: s[3],
        };
      }
      function j(t, e, i) {
        function n(i) {
          void 0 === i && (i = 0);
          var n = e + i >= 1 ? e + i : 0;
          return t.el.getPointAtLength(n);
        }
        var o = $(t.el, t.svg),
          l = n(),
          r = n(-1),
          a = n(1),
          s = i ? 1 : o.w / o.vW,
          c = i ? 1 : o.h / o.vH;
        switch (t.property) {
          case "x":
            return (l.x - o.x) * s;
          case "y":
            return (l.y - o.y) * c;
          case "angle":
            return (180 * Math.atan2(a.y - r.y, a.x - r.x)) / Math.PI;
        }
      }
      function G(t, e) {
        var i = /[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,
          n = R(d.pth(t) ? t.totalLength : t, e) + "";
        return {
          original: n,
          numbers: n.match(i) ? n.match(i).map(Number) : [0],
          strings: d.str(t) || e ? n.split(i) : [],
        };
      }
      function Z(t) {
        return y(t ? S(d.arr(t) ? t.map(w) : w(t)) : [], function (t, e, i) {
          return i.indexOf(t) === e;
        });
      }
      function q(t) {
        var e = Z(t);
        return e.map(function (t, i) {
          return {
            target: t,
            id: i,
            total: e.length,
            transforms: { list: z(t) },
          };
        });
      }
      function N(t, e) {
        var i = T(e);
        if (
          (/^spring/.test(i.easing) && (i.duration = p(i.easing)), d.arr(t))
        ) {
          var n = t.length;
          2 === n && !d.obj(t[0])
            ? (t = { value: t })
            : d.fnc(e.duration) || (i.duration = e.duration / n);
        }
        var o = d.arr(t) ? t : [t];
        return o
          .map(function (t, i) {
            var n = d.obj(t) && !d.pth(t) ? t : { value: t };
            return (
              d.und(n.delay) && (n.delay = i ? 0 : e.delay),
              d.und(n.endDelay) &&
                (n.endDelay = i === o.length - 1 ? e.endDelay : 0),
              n
            );
          })
          .map(function (t) {
            return B(t, i);
          });
      }
      function X(t, e) {
        var i = [],
          n = e.keyframes;
        for (var o in (n &&
          (e = B(
            (function (t) {
              for (
                var e = y(
                    S(
                      t.map(function (t) {
                        return Object.keys(t);
                      }),
                    ),
                    function (t) {
                      return d.key(t);
                    },
                  ).reduce(function (t, e) {
                    return t.indexOf(e) < 0 && t.push(e), t;
                  }, []),
                  i = {},
                  n = function (n) {
                    var o = e[n];
                    i[o] = t.map(function (t) {
                      var e = {};
                      for (var i in t)
                        d.key(i) ? i == o && (e.value = t[i]) : (e[i] = t[i]);
                      return e;
                    });
                  },
                  o = 0;
                o < e.length;
                o++
              )
                n(o);
              return i;
            })(n),
            e,
          )),
        e))
          d.key(o) && i.push({ name: o, tweens: N(e[o], t) });
        return i;
      }
      function Q(t, e) {
        var i;
        return t.tweens.map(function (n) {
          var o = (function (t, e) {
              var i = {};
              for (var n in t) {
                var o = F(t[n], e);
                d.arr(o) &&
                  1 ===
                    (o = o.map(function (t) {
                      return F(t, e);
                    })).length &&
                  (o = o[0]),
                  (i[n] = o);
              }
              return (
                (i.duration = parseFloat(i.duration)),
                (i.delay = parseFloat(i.delay)),
                i
              );
            })(n, e),
            l = o.value,
            r = d.arr(l) ? l[1] : l,
            a = k(r),
            s = A(e.target, t.name, a, e),
            c = i ? i.to.original : s,
            u = d.arr(l) ? l[0] : c,
            p = k(u) || k(s),
            h = a || p;
          return (
            d.und(r) && (r = c),
            (o.from = G(u, h)),
            (o.to = G(W(r, u), h)),
            (o.start = i ? i.end : 0),
            (o.end = o.start + o.delay + o.duration + o.endDelay),
            (o.easing = v(o.easing, o.duration)),
            (o.isPath = d.pth(l)),
            (o.isPathTargetInsideSVG = o.isPath && d.svg(e.target)),
            (o.isColor = d.col(o.from.original)),
            o.isColor && (o.round = 1),
            (i = o),
            o
          );
        });
      }
      var J = {
        css: function (t, e, i) {
          return (t.style[e] = i);
        },
        attribute: function (t, e, i) {
          return t.setAttribute(e, i);
        },
        object: function (t, e, i) {
          return (t[e] = i);
        },
        transform: function (t, e, i, n, o) {
          if ((n.list.set(e, i), e === n.last || o)) {
            var l = "";
            n.list.forEach(function (t, e) {
              l += e + "(" + t + ") ";
            }),
              (t.style.transform = l);
          }
        },
      };
      function U(t, e) {
        q(t).forEach(function (t) {
          for (var i in e) {
            var n = F(e[i], t),
              o = t.target,
              l = k(n),
              r = A(o, i, l, t),
              a = W(R(n, l || k(r)), r),
              s = _(o, i);
            J[s](o, i, a, t.transforms, !0);
          }
        });
      }
      function Y(t, e) {
        return y(
          S(
            t.map(function (t) {
              return e.map(function (e) {
                return (function (t, e) {
                  var i = _(t.target, e.name);
                  if (i) {
                    var n = Q(e, t),
                      o = n[n.length - 1];
                    return {
                      type: i,
                      property: e.name,
                      animatable: t,
                      tweens: n,
                      duration: o.end,
                      delay: n[0].delay,
                      endDelay: o.endDelay,
                    };
                  }
                })(t, e);
              });
            }),
          ),
          function (t) {
            return !d.und(t);
          },
        );
      }
      function K(t, e) {
        var i = t.length,
          n = function (t) {
            return t.timelineOffset ? t.timelineOffset : 0;
          },
          o = {};
        return (
          (o.duration = i
            ? Math.max.apply(
                Math,
                t.map(function (t) {
                  return n(t) + t.duration;
                }),
              )
            : e.duration),
          (o.delay = i
            ? Math.min.apply(
                Math,
                t.map(function (t) {
                  return n(t) + t.delay;
                }),
              )
            : e.delay),
          (o.endDelay = i
            ? o.duration -
              Math.max.apply(
                Math,
                t.map(function (t) {
                  return n(t) + t.duration - t.endDelay;
                }),
              )
            : e.endDelay),
          o
        );
      }
      var tt = 0;
      var et = [],
        it = (function () {
          var t;
          function e(i) {
            for (var n = et.length, o = 0; o < n; ) {
              var l = et[o];
              l.paused ? (et.splice(o, 1), n--) : (l.tick(i), o++);
            }
            t = o > 0 ? requestAnimationFrame(e) : void 0;
          }
          return (
            "undefined" != typeof document &&
              document.addEventListener("visibilitychange", function () {
                ot.suspendWhenDocumentHidden &&
                  (nt()
                    ? (t = cancelAnimationFrame(t))
                    : (et.forEach(function (t) {
                        return t._onDocumentVisibility();
                      }),
                      it()));
              }),
            function () {
              t ||
                (nt() && ot.suspendWhenDocumentHidden) ||
                !(et.length > 0) ||
                (t = requestAnimationFrame(e));
            }
          );
        })();
      function nt() {
        return !!document && document.hidden;
      }
      function ot(t) {
        void 0 === t && (t = {});
        var e,
          i = 0,
          l = 0,
          r = 0,
          s = 0,
          c = null;
        function d(t) {
          var e =
            window.Promise &&
            new Promise(function (t) {
              return (c = t);
            });
          return (t.finished = e), e;
        }
        var u = (function (t) {
          var e = L(n, t),
            i = L(o, t),
            l = X(i, t),
            r = q(t.targets),
            a = Y(r, l),
            s = K(a, i),
            c = tt;
          return (
            tt++,
            B(e, {
              id: c,
              children: [],
              animatables: r,
              animations: a,
              duration: s.duration,
              delay: s.delay,
              endDelay: s.endDelay,
            })
          );
        })(t);
        d(u);
        function p() {
          var t = u.direction;
          "alternate" !== t &&
            (u.direction = "normal" !== t ? "normal" : "reverse"),
            (u.reversed = !u.reversed),
            e.forEach(function (t) {
              return (t.reversed = u.reversed);
            });
        }
        function h(t) {
          return u.reversed ? u.duration - t : t;
        }
        function g() {
          (i = 0), (l = h(u.currentTime) * (1 / ot.speed));
        }
        function f(t, e) {
          e && e.seek(t - e.timelineOffset);
        }
        function m(t) {
          for (var e = 0, i = u.animations, n = i.length; e < n; ) {
            var o = i[e],
              l = o.animatable,
              r = o.tweens,
              s = r.length - 1,
              c = r[s];
            s &&
              (c =
                y(r, function (e) {
                  return t < e.end;
                })[0] || c);
            for (
              var d = a(t - c.start - c.delay, 0, c.duration) / c.duration,
                p = isNaN(d) ? 1 : c.easing(d),
                h = c.to.strings,
                g = c.round,
                f = [],
                m = c.to.numbers.length,
                b = void 0,
                v = 0;
              v < m;
              v++
            ) {
              var x = void 0,
                S = c.to.numbers[v],
                w = c.from.numbers[v] || 0;
              (x = c.isPath
                ? j(c.value, p * S, c.isPathTargetInsideSVG)
                : w + p * (S - w)),
                g && ((c.isColor && v > 2) || (x = Math.round(x * g) / g)),
                f.push(x);
            }
            var C = h.length;
            if (C) {
              b = h[0];
              for (var T = 0; T < C; T++) {
                h[T];
                var L = h[T + 1],
                  B = f[T];
                isNaN(B) || (b += L ? B + L : B + " ");
              }
            } else b = f[0];
            J[o.type](l.target, o.property, b, l.transforms),
              (o.currentValue = b),
              e++;
          }
        }
        function b(t) {
          u[t] && !u.passThrough && u[t](u);
        }
        function v(t) {
          var n = u.duration,
            o = u.delay,
            g = n - u.endDelay,
            v = h(t);
          (u.progress = a((v / n) * 100, 0, 100)),
            (u.reversePlayback = v < u.currentTime),
            e &&
              (function (t) {
                if (u.reversePlayback) for (var i = s; i--; ) f(t, e[i]);
                else for (var n = 0; n < s; n++) f(t, e[n]);
              })(v),
            !u.began && u.currentTime > 0 && ((u.began = !0), b("begin")),
            !u.loopBegan &&
              u.currentTime > 0 &&
              ((u.loopBegan = !0), b("loopBegin")),
            v <= o && 0 !== u.currentTime && m(0),
            ((v >= g && u.currentTime !== n) || !n) && m(n),
            v > o && v < g
              ? (u.changeBegan ||
                  ((u.changeBegan = !0),
                  (u.changeCompleted = !1),
                  b("changeBegin")),
                b("change"),
                m(v))
              : u.changeBegan &&
                ((u.changeCompleted = !0),
                (u.changeBegan = !1),
                b("changeComplete")),
            (u.currentTime = a(v, 0, n)),
            u.began && b("update"),
            t >= n &&
              ((l = 0),
              u.remaining && !0 !== u.remaining && u.remaining--,
              u.remaining
                ? ((i = r),
                  b("loopComplete"),
                  (u.loopBegan = !1),
                  "alternate" === u.direction && p())
                : ((u.paused = !0),
                  u.completed ||
                    ((u.completed = !0),
                    b("loopComplete"),
                    b("complete"),
                    !u.passThrough && "Promise" in window && (c(), d(u)))));
        }
        return (
          (u.reset = function () {
            var t = u.direction;
            (u.passThrough = !1),
              (u.currentTime = 0),
              (u.progress = 0),
              (u.paused = !0),
              (u.began = !1),
              (u.loopBegan = !1),
              (u.changeBegan = !1),
              (u.completed = !1),
              (u.changeCompleted = !1),
              (u.reversePlayback = !1),
              (u.reversed = "reverse" === t),
              (u.remaining = u.loop),
              (e = u.children);
            for (var i = (s = e.length); i--; ) u.children[i].reset();
            ((u.reversed && !0 !== u.loop) ||
              ("alternate" === t && 1 === u.loop)) &&
              u.remaining++,
              m(u.reversed ? u.duration : 0);
          }),
          (u._onDocumentVisibility = g),
          (u.set = function (t, e) {
            return U(t, e), u;
          }),
          (u.tick = function (t) {
            (r = t), i || (i = r), v((r + (l - i)) * ot.speed);
          }),
          (u.seek = function (t) {
            v(h(t));
          }),
          (u.pause = function () {
            (u.paused = !0), g();
          }),
          (u.play = function () {
            u.paused &&
              (u.completed && u.reset(),
              (u.paused = !1),
              et.push(u),
              g(),
              it());
          }),
          (u.reverse = function () {
            p(), (u.completed = !u.reversed), g();
          }),
          (u.restart = function () {
            u.reset(), u.play();
          }),
          (u.remove = function (t) {
            rt(Z(t), u);
          }),
          u.reset(),
          u.autoplay && u.play(),
          u
        );
      }
      function lt(t, e) {
        for (var i = e.length; i--; )
          C(t, e[i].animatable.target) && e.splice(i, 1);
      }
      function rt(t, e) {
        var i = e.animations,
          n = e.children;
        lt(t, i);
        for (var o = n.length; o--; ) {
          var l = n[o],
            r = l.animations;
          lt(t, r), r.length || l.children.length || n.splice(o, 1);
        }
        i.length || n.length || e.pause();
      }
      (ot.version = "3.2.1"),
        (ot.speed = 1),
        (ot.suspendWhenDocumentHidden = !0),
        (ot.running = et),
        (ot.remove = function (t) {
          for (var e = Z(t), i = et.length; i--; ) {
            rt(e, et[i]);
          }
        }),
        (ot.get = A),
        (ot.set = U),
        (ot.convertPx = I),
        (ot.path = function (t, e) {
          var i = d.str(t) ? x(t)[0] : t,
            n = e || 100;
          return function (t) {
            return {
              property: t,
              el: i,
              svg: $(i),
              totalLength: D(i) * (n / 100),
            };
          };
        }),
        (ot.setDashoffset = function (t) {
          var e = D(t);
          return t.setAttribute("stroke-dasharray", e), e;
        }),
        (ot.stagger = function (t, e) {
          void 0 === e && (e = {});
          var i = e.direction || "normal",
            n = e.easing ? v(e.easing) : null,
            o = e.grid,
            l = e.axis,
            r = e.from || 0,
            a = "first" === r,
            s = "center" === r,
            c = "last" === r,
            u = d.arr(t),
            p = u ? parseFloat(t[0]) : parseFloat(t),
            h = u ? parseFloat(t[1]) : 0,
            g = k(u ? t[1] : t) || 0,
            f = e.start || 0 + (u ? p : 0),
            m = [],
            b = 0;
          return function (t, e, d) {
            if (
              (a && (r = 0),
              s && (r = (d - 1) / 2),
              c && (r = d - 1),
              !m.length)
            ) {
              for (var v = 0; v < d; v++) {
                if (o) {
                  var x = s ? (o[0] - 1) / 2 : r % o[0],
                    y = s ? (o[1] - 1) / 2 : Math.floor(r / o[0]),
                    S = x - (v % o[0]),
                    w = y - Math.floor(v / o[0]),
                    C = Math.sqrt(S * S + w * w);
                  "x" === l && (C = -S), "y" === l && (C = -w), m.push(C);
                } else m.push(Math.abs(r - v));
                b = Math.max.apply(Math, m);
              }
              n &&
                (m = m.map(function (t) {
                  return n(t / b) * b;
                })),
                "reverse" === i &&
                  (m = m.map(function (t) {
                    return l ? (t < 0 ? -1 * t : -t) : Math.abs(b - t);
                  }));
            }
            return (
              f + (u ? (h - p) / b : p) * (Math.round(100 * m[e]) / 100) + g
            );
          };
        }),
        (ot.timeline = function (t) {
          void 0 === t && (t = {});
          var e = ot(t);
          return (
            (e.duration = 0),
            (e.add = function (i, n) {
              var l = et.indexOf(e),
                r = e.children;
              function a(t) {
                t.passThrough = !0;
              }
              l > -1 && et.splice(l, 1);
              for (var s = 0; s < r.length; s++) a(r[s]);
              var c = B(i, L(o, t));
              c.targets = c.targets || t.targets;
              var u = e.duration;
              (c.autoplay = !1),
                (c.direction = e.direction),
                (c.timelineOffset = d.und(n) ? u : W(n, u)),
                a(e),
                e.seek(c.timelineOffset);
              var p = ot(c);
              a(p), r.push(p);
              var h = K(r, t);
              return (
                (e.delay = h.delay),
                (e.endDelay = h.endDelay),
                (e.duration = h.duration),
                e.seek(0),
                e.reset(),
                e.autoplay && e.play(),
                e
              );
            }),
            e
          );
        }),
        (ot.easing = v),
        (ot.penner = b),
        (ot.random = function (t, e) {
          return Math.floor(Math.random() * (e - t + 1)) + t;
        });
      const at = ot;
    },
    83465: (t, e, i) => {
      t = i.nmd(t);
      var n = "__lodash_hash_undefined__",
        o = 9007199254740991,
        l = "[object Arguments]",
        r = "[object Boolean]",
        a = "[object Date]",
        s = "[object Function]",
        c = "[object GeneratorFunction]",
        d = "[object Map]",
        u = "[object Number]",
        p = "[object Object]",
        h = "[object Promise]",
        g = "[object RegExp]",
        f = "[object Set]",
        m = "[object String]",
        b = "[object Symbol]",
        v = "[object WeakMap]",
        x = "[object ArrayBuffer]",
        y = "[object DataView]",
        S = "[object Float32Array]",
        w = "[object Float64Array]",
        C = "[object Int8Array]",
        T = "[object Int16Array]",
        L = "[object Int32Array]",
        B = "[object Uint8Array]",
        M = "[object Uint8ClampedArray]",
        k = "[object Uint16Array]",
        F = "[object Uint32Array]",
        P = /\w*$/,
        I = /^\[object .+?Constructor\]$/,
        O = /^(?:0|[1-9]\d*)$/,
        _ = {};
      (_[l] =
        _["[object Array]"] =
        _[x] =
        _[y] =
        _[r] =
        _[a] =
        _[S] =
        _[w] =
        _[C] =
        _[T] =
        _[L] =
        _[d] =
        _[u] =
        _[p] =
        _[g] =
        _[f] =
        _[m] =
        _[b] =
        _[B] =
        _[M] =
        _[k] =
        _[F] =
          !0),
        (_["[object Error]"] = _[s] = _[v] = !1);
      var z =
          "object" == typeof global &&
          global &&
          global.Object === Object &&
          global,
        E = "object" == typeof self && self && self.Object === Object && self,
        A = z || E || Function("return this")(),
        W = e && !e.nodeType && e,
        R = W && t && !t.nodeType && t,
        V = R && R.exports === W;
      function H(t, e) {
        return t.set(e[0], e[1]), t;
      }
      function D(t, e) {
        return t.add(e), t;
      }
      function $(t, e, i, n) {
        var o = -1,
          l = t ? t.length : 0;
        for (n && l && (i = t[++o]); ++o < l; ) i = e(i, t[o], o, t);
        return i;
      }
      function j(t) {
        var e = !1;
        if (null != t && "function" != typeof t.toString)
          try {
            e = !!(t + "");
          } catch (t) {}
        return e;
      }
      function G(t) {
        var e = -1,
          i = Array(t.size);
        return (
          t.forEach(function (t, n) {
            i[++e] = [n, t];
          }),
          i
        );
      }
      function Z(t, e) {
        return function (i) {
          return t(e(i));
        };
      }
      function q(t) {
        var e = -1,
          i = Array(t.size);
        return (
          t.forEach(function (t) {
            i[++e] = t;
          }),
          i
        );
      }
      var N,
        X = Array.prototype,
        Q = Function.prototype,
        J = Object.prototype,
        U = A["__core-js_shared__"],
        Y = (N = /[^.]+$/.exec((U && U.keys && U.keys.IE_PROTO) || ""))
          ? "Symbol(src)_1." + N
          : "",
        K = Q.toString,
        tt = J.hasOwnProperty,
        et = J.toString,
        it = RegExp(
          "^" +
            K.call(tt)
              .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
              .replace(
                /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                "$1.*?",
              ) +
            "$",
        ),
        nt = V ? A.Buffer : void 0,
        ot = A.Symbol,
        lt = A.Uint8Array,
        rt = Z(Object.getPrototypeOf, Object),
        at = Object.create,
        st = J.propertyIsEnumerable,
        ct = X.splice,
        dt = Object.getOwnPropertySymbols,
        ut = nt ? nt.isBuffer : void 0,
        pt = Z(Object.keys, Object),
        ht = Rt(A, "DataView"),
        gt = Rt(A, "Map"),
        ft = Rt(A, "Promise"),
        mt = Rt(A, "Set"),
        bt = Rt(A, "WeakMap"),
        vt = Rt(Object, "create"),
        xt = jt(ht),
        yt = jt(gt),
        St = jt(ft),
        wt = jt(mt),
        Ct = jt(bt),
        Tt = ot ? ot.prototype : void 0,
        Lt = Tt ? Tt.valueOf : void 0;
      function Bt(t) {
        var e = -1,
          i = t ? t.length : 0;
        for (this.clear(); ++e < i; ) {
          var n = t[e];
          this.set(n[0], n[1]);
        }
      }
      function Mt(t) {
        var e = -1,
          i = t ? t.length : 0;
        for (this.clear(); ++e < i; ) {
          var n = t[e];
          this.set(n[0], n[1]);
        }
      }
      function kt(t) {
        var e = -1,
          i = t ? t.length : 0;
        for (this.clear(); ++e < i; ) {
          var n = t[e];
          this.set(n[0], n[1]);
        }
      }
      function Ft(t) {
        this.__data__ = new Mt(t);
      }
      function Pt(t, e) {
        var i =
            Zt(t) ||
            (function (t) {
              return (
                (function (t) {
                  return (
                    (function (t) {
                      return !!t && "object" == typeof t;
                    })(t) && qt(t)
                  );
                })(t) &&
                tt.call(t, "callee") &&
                (!st.call(t, "callee") || et.call(t) == l)
              );
            })(t)
              ? (function (t, e) {
                  for (var i = -1, n = Array(t); ++i < t; ) n[i] = e(i);
                  return n;
                })(t.length, String)
              : [],
          n = i.length,
          o = !!n;
        for (var r in t)
          (!e && !tt.call(t, r)) ||
            (o && ("length" == r || Dt(r, n))) ||
            i.push(r);
        return i;
      }
      function It(t, e, i) {
        var n = t[e];
        (tt.call(t, e) && Gt(n, i) && (void 0 !== i || e in t)) || (t[e] = i);
      }
      function Ot(t, e) {
        for (var i = t.length; i--; ) if (Gt(t[i][0], e)) return i;
        return -1;
      }
      function _t(t, e, i, n, o, h, v) {
        var I;
        if ((n && (I = h ? n(t, o, h, v) : n(t)), void 0 !== I)) return I;
        if (!Qt(t)) return t;
        var O = Zt(t);
        if (O) {
          if (
            ((I = (function (t) {
              var e = t.length,
                i = t.constructor(e);
              e &&
                "string" == typeof t[0] &&
                tt.call(t, "index") &&
                ((i.index = t.index), (i.input = t.input));
              return i;
            })(t)),
            !e)
          )
            return (function (t, e) {
              var i = -1,
                n = t.length;
              e || (e = Array(n));
              for (; ++i < n; ) e[i] = t[i];
              return e;
            })(t, I);
        } else {
          var z = Ht(t),
            E = z == s || z == c;
          if (Nt(t))
            return (function (t, e) {
              if (e) return t.slice();
              var i = new t.constructor(t.length);
              return t.copy(i), i;
            })(t, e);
          if (z == p || z == l || (E && !h)) {
            if (j(t)) return h ? t : {};
            if (
              ((I = (function (t) {
                return "function" != typeof t.constructor || $t(t)
                  ? {}
                  : ((e = rt(t)), Qt(e) ? at(e) : {});
                var e;
              })(E ? {} : t)),
              !e)
            )
              return (function (t, e) {
                return At(t, Vt(t), e);
              })(
                t,
                (function (t, e) {
                  return t && At(e, Jt(e), t);
                })(I, t),
              );
          } else {
            if (!_[z]) return h ? t : {};
            I = (function (t, e, i, n) {
              var o = t.constructor;
              switch (e) {
                case x:
                  return Et(t);
                case r:
                case a:
                  return new o(+t);
                case y:
                  return (function (t, e) {
                    var i = e ? Et(t.buffer) : t.buffer;
                    return new t.constructor(i, t.byteOffset, t.byteLength);
                  })(t, n);
                case S:
                case w:
                case C:
                case T:
                case L:
                case B:
                case M:
                case k:
                case F:
                  return (function (t, e) {
                    var i = e ? Et(t.buffer) : t.buffer;
                    return new t.constructor(i, t.byteOffset, t.length);
                  })(t, n);
                case d:
                  return (function (t, e, i) {
                    var n = e ? i(G(t), !0) : G(t);
                    return $(n, H, new t.constructor());
                  })(t, n, i);
                case u:
                case m:
                  return new o(t);
                case g:
                  return (function (t) {
                    var e = new t.constructor(t.source, P.exec(t));
                    return (e.lastIndex = t.lastIndex), e;
                  })(t);
                case f:
                  return (function (t, e, i) {
                    var n = e ? i(q(t), !0) : q(t);
                    return $(n, D, new t.constructor());
                  })(t, n, i);
                case b:
                  return (l = t), Lt ? Object(Lt.call(l)) : {};
              }
              var l;
            })(t, z, _t, e);
          }
        }
        v || (v = new Ft());
        var A = v.get(t);
        if (A) return A;
        if ((v.set(t, I), !O))
          var W = i
            ? (function (t) {
                return (function (t, e, i) {
                  var n = e(t);
                  return Zt(t)
                    ? n
                    : (function (t, e) {
                        for (var i = -1, n = e.length, o = t.length; ++i < n; )
                          t[o + i] = e[i];
                        return t;
                      })(n, i(t));
                })(t, Jt, Vt);
              })(t)
            : Jt(t);
        return (
          (function (t, e) {
            for (
              var i = -1, n = t ? t.length : 0;
              ++i < n && !1 !== e(t[i], i, t);

            );
          })(W || t, function (o, l) {
            W && (o = t[(l = o)]), It(I, l, _t(o, e, i, n, l, t, v));
          }),
          I
        );
      }
      function zt(t) {
        return (
          !(!Qt(t) || ((e = t), Y && Y in e)) &&
          (Xt(t) || j(t) ? it : I).test(jt(t))
        );
        var e;
      }
      function Et(t) {
        var e = new t.constructor(t.byteLength);
        return new lt(e).set(new lt(t)), e;
      }
      function At(t, e, i, n) {
        i || (i = {});
        for (var o = -1, l = e.length; ++o < l; ) {
          var r = e[o],
            a = n ? n(i[r], t[r], r, i, t) : void 0;
          It(i, r, void 0 === a ? t[r] : a);
        }
        return i;
      }
      function Wt(t, e) {
        var i,
          n,
          o = t.__data__;
        return (
          "string" == (n = typeof (i = e)) ||
          "number" == n ||
          "symbol" == n ||
          "boolean" == n
            ? "__proto__" !== i
            : null === i
        )
          ? o["string" == typeof e ? "string" : "hash"]
          : o.map;
      }
      function Rt(t, e) {
        var i = (function (t, e) {
          return null == t ? void 0 : t[e];
        })(t, e);
        return zt(i) ? i : void 0;
      }
      (Bt.prototype.clear = function () {
        this.__data__ = vt ? vt(null) : {};
      }),
        (Bt.prototype.delete = function (t) {
          return this.has(t) && delete this.__data__[t];
        }),
        (Bt.prototype.get = function (t) {
          var e = this.__data__;
          if (vt) {
            var i = e[t];
            return i === n ? void 0 : i;
          }
          return tt.call(e, t) ? e[t] : void 0;
        }),
        (Bt.prototype.has = function (t) {
          var e = this.__data__;
          return vt ? void 0 !== e[t] : tt.call(e, t);
        }),
        (Bt.prototype.set = function (t, e) {
          return (this.__data__[t] = vt && void 0 === e ? n : e), this;
        }),
        (Mt.prototype.clear = function () {
          this.__data__ = [];
        }),
        (Mt.prototype.delete = function (t) {
          var e = this.__data__,
            i = Ot(e, t);
          return (
            !(i < 0) && (i == e.length - 1 ? e.pop() : ct.call(e, i, 1), !0)
          );
        }),
        (Mt.prototype.get = function (t) {
          var e = this.__data__,
            i = Ot(e, t);
          return i < 0 ? void 0 : e[i][1];
        }),
        (Mt.prototype.has = function (t) {
          return Ot(this.__data__, t) > -1;
        }),
        (Mt.prototype.set = function (t, e) {
          var i = this.__data__,
            n = Ot(i, t);
          return n < 0 ? i.push([t, e]) : (i[n][1] = e), this;
        }),
        (kt.prototype.clear = function () {
          this.__data__ = {
            hash: new Bt(),
            map: new (gt || Mt)(),
            string: new Bt(),
          };
        }),
        (kt.prototype.delete = function (t) {
          return Wt(this, t).delete(t);
        }),
        (kt.prototype.get = function (t) {
          return Wt(this, t).get(t);
        }),
        (kt.prototype.has = function (t) {
          return Wt(this, t).has(t);
        }),
        (kt.prototype.set = function (t, e) {
          return Wt(this, t).set(t, e), this;
        }),
        (Ft.prototype.clear = function () {
          this.__data__ = new Mt();
        }),
        (Ft.prototype.delete = function (t) {
          return this.__data__.delete(t);
        }),
        (Ft.prototype.get = function (t) {
          return this.__data__.get(t);
        }),
        (Ft.prototype.has = function (t) {
          return this.__data__.has(t);
        }),
        (Ft.prototype.set = function (t, e) {
          var i = this.__data__;
          if (i instanceof Mt) {
            var n = i.__data__;
            if (!gt || n.length < 199) return n.push([t, e]), this;
            i = this.__data__ = new kt(n);
          }
          return i.set(t, e), this;
        });
      var Vt = dt
          ? Z(dt, Object)
          : function () {
              return [];
            },
        Ht = function (t) {
          return et.call(t);
        };
      function Dt(t, e) {
        return (
          !!(e = null == e ? o : e) &&
          ("number" == typeof t || O.test(t)) &&
          t > -1 &&
          t % 1 == 0 &&
          t < e
        );
      }
      function $t(t) {
        var e = t && t.constructor;
        return t === (("function" == typeof e && e.prototype) || J);
      }
      function jt(t) {
        if (null != t) {
          try {
            return K.call(t);
          } catch (t) {}
          try {
            return t + "";
          } catch (t) {}
        }
        return "";
      }
      function Gt(t, e) {
        return t === e || (t != t && e != e);
      }
      ((ht && Ht(new ht(new ArrayBuffer(1))) != y) ||
        (gt && Ht(new gt()) != d) ||
        (ft && Ht(ft.resolve()) != h) ||
        (mt && Ht(new mt()) != f) ||
        (bt && Ht(new bt()) != v)) &&
        (Ht = function (t) {
          var e = et.call(t),
            i = e == p ? t.constructor : void 0,
            n = i ? jt(i) : void 0;
          if (n)
            switch (n) {
              case xt:
                return y;
              case yt:
                return d;
              case St:
                return h;
              case wt:
                return f;
              case Ct:
                return v;
            }
          return e;
        });
      var Zt = Array.isArray;
      function qt(t) {
        return (
          null != t &&
          (function (t) {
            return "number" == typeof t && t > -1 && t % 1 == 0 && t <= o;
          })(t.length) &&
          !Xt(t)
        );
      }
      var Nt =
        ut ||
        function () {
          return !1;
        };
      function Xt(t) {
        var e = Qt(t) ? et.call(t) : "";
        return e == s || e == c;
      }
      function Qt(t) {
        var e = typeof t;
        return !!t && ("object" == e || "function" == e);
      }
      function Jt(t) {
        return qt(t)
          ? Pt(t)
          : (function (t) {
              if (!$t(t)) return pt(t);
              var e = [];
              for (var i in Object(t))
                tt.call(t, i) && "constructor" != i && e.push(i);
              return e;
            })(t);
      }
      t.exports = function (t) {
        return _t(t, !0, !0);
      };
    },
    78517: (t, e, i) => {
      "use strict";
      i.r(e), i.d(e, { default: () => a });
      var n = i(11708);
      class o {
        constructor(t, e) {
          (this.canvas = t),
            (this.ctx = this.canvas.getContext("2d")),
            (this.gen = new n.V(e));
        }
        draw(t) {
          const e = t.sets || [],
            i = t.options || this.getDefaultOptions(),
            n = this.ctx,
            o = t.options.fixedDecimalPlaceDigits;
          for (const l of e)
            switch (l.type) {
              case "path":
                n.save(),
                  (n.strokeStyle =
                    "none" === i.stroke ? "transparent" : i.stroke),
                  (n.lineWidth = i.strokeWidth),
                  i.strokeLineDash && n.setLineDash(i.strokeLineDash),
                  i.strokeLineDashOffset &&
                    (n.lineDashOffset = i.strokeLineDashOffset),
                  this._drawToContext(n, l, o),
                  n.restore();
                break;
              case "fillPath": {
                n.save(), (n.fillStyle = i.fill || "");
                const e =
                  "curve" === t.shape ||
                  "polygon" === t.shape ||
                  "path" === t.shape
                    ? "evenodd"
                    : "nonzero";
                this._drawToContext(n, l, o, e), n.restore();
                break;
              }
              case "fillSketch":
                this.fillSketch(n, l, i);
            }
        }
        fillSketch(t, e, i) {
          let n = i.fillWeight;
          n < 0 && (n = i.strokeWidth / 2),
            t.save(),
            i.fillLineDash && t.setLineDash(i.fillLineDash),
            i.fillLineDashOffset && (t.lineDashOffset = i.fillLineDashOffset),
            (t.strokeStyle = i.fill || ""),
            (t.lineWidth = n),
            this._drawToContext(t, e, i.fixedDecimalPlaceDigits),
            t.restore();
        }
        _drawToContext(t, e, i, n = "nonzero") {
          t.beginPath();
          for (const n of e.ops) {
            const e =
              "number" == typeof i && i >= 0
                ? n.data.map((t) => +t.toFixed(i))
                : n.data;
            switch (n.op) {
              case "move":
                t.moveTo(e[0], e[1]);
                break;
              case "bcurveTo":
                t.bezierCurveTo(e[0], e[1], e[2], e[3], e[4], e[5]);
                break;
              case "lineTo":
                t.lineTo(e[0], e[1]);
            }
          }
          "fillPath" === e.type ? t.fill(n) : t.stroke();
        }
        get generator() {
          return this.gen;
        }
        getDefaultOptions() {
          return this.gen.defaultOptions;
        }
        line(t, e, i, n, o) {
          const l = this.gen.line(t, e, i, n, o);
          return this.draw(l), l;
        }
        rectangle(t, e, i, n, o) {
          const l = this.gen.rectangle(t, e, i, n, o);
          return this.draw(l), l;
        }
        ellipse(t, e, i, n, o) {
          const l = this.gen.ellipse(t, e, i, n, o);
          return this.draw(l), l;
        }
        circle(t, e, i, n) {
          const o = this.gen.circle(t, e, i, n);
          return this.draw(o), o;
        }
        linearPath(t, e) {
          const i = this.gen.linearPath(t, e);
          return this.draw(i), i;
        }
        polygon(t, e) {
          const i = this.gen.polygon(t, e);
          return this.draw(i), i;
        }
        arc(t, e, i, n, o, l, r = !1, a) {
          const s = this.gen.arc(t, e, i, n, o, l, r, a);
          return this.draw(s), s;
        }
        curve(t, e) {
          const i = this.gen.curve(t, e);
          return this.draw(i), i;
        }
        path(t, e) {
          const i = this.gen.path(t, e);
          return this.draw(i), i;
        }
      }
      const l = "http://www.w3.org/2000/svg";
      class r {
        constructor(t, e) {
          (this.svg = t), (this.gen = new n.V(e));
        }
        draw(t) {
          const e = t.sets || [],
            i = t.options || this.getDefaultOptions(),
            n = this.svg.ownerDocument || window.document,
            o = n.createElementNS(l, "g"),
            r = t.options.fixedDecimalPlaceDigits;
          for (const a of e) {
            let e = null;
            switch (a.type) {
              case "path":
                (e = n.createElementNS(l, "path")),
                  e.setAttribute("d", this.opsToPath(a, r)),
                  e.setAttribute("stroke", i.stroke),
                  e.setAttribute("stroke-width", i.strokeWidth + ""),
                  e.setAttribute("fill", "none"),
                  i.strokeLineDash &&
                    e.setAttribute(
                      "stroke-dasharray",
                      i.strokeLineDash.join(" ").trim(),
                    ),
                  i.strokeLineDashOffset &&
                    e.setAttribute(
                      "stroke-dashoffset",
                      `${i.strokeLineDashOffset}`,
                    );
                break;
              case "fillPath":
                (e = n.createElementNS(l, "path")),
                  e.setAttribute("d", this.opsToPath(a, r)),
                  e.setAttribute("stroke", "none"),
                  e.setAttribute("stroke-width", "0"),
                  e.setAttribute("fill", i.fill || ""),
                  ("curve" !== t.shape && "polygon" !== t.shape) ||
                    e.setAttribute("fill-rule", "evenodd");
                break;
              case "fillSketch":
                e = this.fillSketch(n, a, i);
            }
            e && o.appendChild(e);
          }
          return o;
        }
        fillSketch(t, e, i) {
          let n = i.fillWeight;
          n < 0 && (n = i.strokeWidth / 2);
          const o = t.createElementNS(l, "path");
          return (
            o.setAttribute("d", this.opsToPath(e, i.fixedDecimalPlaceDigits)),
            o.setAttribute("stroke", i.fill || ""),
            o.setAttribute("stroke-width", n + ""),
            o.setAttribute("fill", "none"),
            i.fillLineDash &&
              o.setAttribute(
                "stroke-dasharray",
                i.fillLineDash.join(" ").trim(),
              ),
            i.fillLineDashOffset &&
              o.setAttribute("stroke-dashoffset", `${i.fillLineDashOffset}`),
            o
          );
        }
        get generator() {
          return this.gen;
        }
        getDefaultOptions() {
          return this.gen.defaultOptions;
        }
        opsToPath(t, e) {
          return this.gen.opsToPath(t, e);
        }
        line(t, e, i, n, o) {
          const l = this.gen.line(t, e, i, n, o);
          return this.draw(l);
        }
        rectangle(t, e, i, n, o) {
          const l = this.gen.rectangle(t, e, i, n, o);
          return this.draw(l);
        }
        ellipse(t, e, i, n, o) {
          const l = this.gen.ellipse(t, e, i, n, o);
          return this.draw(l);
        }
        circle(t, e, i, n) {
          const o = this.gen.circle(t, e, i, n);
          return this.draw(o);
        }
        linearPath(t, e) {
          const i = this.gen.linearPath(t, e);
          return this.draw(i);
        }
        polygon(t, e) {
          const i = this.gen.polygon(t, e);
          return this.draw(i);
        }
        arc(t, e, i, n, o, l, r = !1, a) {
          const s = this.gen.arc(t, e, i, n, o, l, r, a);
          return this.draw(s);
        }
        curve(t, e) {
          const i = this.gen.curve(t, e);
          return this.draw(i);
        }
        path(t, e) {
          const i = this.gen.path(t, e);
          return this.draw(i);
        }
      }
      const a = {
        canvas: (t, e) => new o(t, e),
        svg: (t, e) => new r(t, e),
        generator: (t) => new n.V(t),
        newSeed: () => n.V.newSeed(),
      };
    },
  },
]);
